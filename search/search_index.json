{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e00\u4e2a\u57fa\u4e8eMkdocs+python+Github\u5b9e\u73b0\u7684\u6587\u6863\u7f51\u7ad9 \u00b6 \u5b89\u88c5\u6559\u7a0b \u00b6 \u5982\u679c\u4f60\u4e5f\u60f3\u642d\u5efa\u4e00\u4e2a,\u4f60\u53ef\u4ee5 \u5efa\u7acb\u4e00\u4e2a\u81ea\u5df1\u7684WIKI\u6587\u6863 \u5b89\u88c5\u73af\u5883 \u00b6 python\u7248\u672c: 3.6.6 \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0 \u989c\u8272\u4e3b\u9898 \u00b6 \u4e3b\u8272 \u00b6 \u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) }) \u8f85\u52a9\u8272 \u00b6 \u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"\u4ecb\u7ecd"},{"location":"#mkdocspythongithub","text":"","title":"\u4e00\u4e2a\u57fa\u4e8eMkdocs+python+Github\u5b9e\u73b0\u7684\u6587\u6863\u7f51\u7ad9"},{"location":"#_1","text":"\u5982\u679c\u4f60\u4e5f\u60f3\u642d\u5efa\u4e00\u4e2a,\u4f60\u53ef\u4ee5 \u5efa\u7acb\u4e00\u4e2a\u81ea\u5df1\u7684WIKI\u6587\u6863","title":"\u5b89\u88c5\u6559\u7a0b"},{"location":"#_2","text":"python\u7248\u672c: 3.6.6 \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0","title":"\u5b89\u88c5\u73af\u5883"},{"location":"#_3","text":"","title":"\u989c\u8272\u4e3b\u9898"},{"location":"#_4","text":"\u9ed8\u8ba4\u4e3a white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; localStorage.setItem(\"data-md-color-primary\",this.dataset.mdColorPrimary); }) })","title":"\u4e3b\u8272"},{"location":"#_5","text":"\u9ed8\u8ba4\u4e3a red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; localStorage.setItem(\"data-md-color-accent\",this.dataset.mdColorAccent); }) }) // #758 document.getElementsByClassName('md-nav__title')[1].click()","title":"\u8f85\u52a9\u8272"},{"location":"about/","text":"\u535a\u4e3b\u59d3\u540d:\u738b\u8363\u80dc \u5c31\u8bfb:\u6cb3\u5357\u7406\u5de5\u5927\u5b66\u672c\u79d1\u751f \u8054\u7cfb\u65b9\u5f0f: QQ:603329354 QQ\u4ea4\u6d41\u7fa4:843108406 \u90ae\u7bb1: 603329354@qq.com \u60f3\u66f4\u52a0\u4e86\u89e3\u6211,\u8bf7\u8f6c\u81f3: \u6211\u7684\u4e3b\u9875-\u6559\u4e66\u7684\u5148\u751f \u6211\u6df1\u4fe1\u4e0d\u7591\u7684\u5c31\u662f:\u4ed6\u4eec\u4ee5\u68a6\u4e3a\u9a6c,\u6211\u504f\u4ee5\u7801\u4e3a\u68a6","title":"\u5173\u4e8e"},{"location":"tj/","text":"\u66f4\u65b0\u8bb0\u5f55: \u65f6\u95f4 \u66f4\u65b0\u5185\u5bb9 \u66f4\u65b0\u4eba 2019.9.6 \u66f4\u6b63\u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4\u7684\u4ecb\u7ecd\u90e8\u5206\u9519\u8bef;\u66f4\u6b63\u68af\u5ea6\u4e0b\u964d\u7684\u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u7684\u635f\u5931\u51fd\u6570\u9519\u8bef \u738b\u8363\u80dc 2019.9.7 \u6dfb\u52a0\u77e5\u8bc6\u70b9-\u978d\u70b9 \u738b\u8363\u80dc 2019.9.29 \u6dfb\u52a0\u77e5\u8bc6\u70b9-BN\u5c42\uff0cH5\u6587\u4ef6 \u738b\u8363\u80dc 2019.10.5 \u6dfb\u52a0\u77e5\u8bc6\u70b9-Meta-Path\u5143\u6570\u636e \u738b\u8363\u80dc","title":"\u4fe1\u606f"},{"location":"ai/ANN/","text":"\u795e\u7ecf\u7f51\u7edc\u6982\u8ff0 \u00b6 \u4ece\u611f\u77e5\u5668\u8bf4\u8d77 \u00b6 \u751f\u7269\u795e\u7ecf\u5143 \u00b6 \u6211\u4eec\u5b66\u4e60\u8fc7\u751f\u7269,\u6240\u4ee5\u6211\u4eec\u90fd\u53ef\u80fd\u6bd4\u8f83\u719f\u6089\u751f\u7269\u610f\u4e49\u4e0a\u7684\u795e\u7ecf\u5143,\u4e5f\u5c31\u662f\u6211\u4eec\u4eba\u8111\u5185\u7684\u90a3\u4e9b,\u90a3\u4e48\u5b83\u662f\u4e0d\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u5462: \u5176\u5b9e,\u5bf9\u4e8e\u795e\u7ecf\u5143\u7684\u7814\u7a76\u7531\u6765\u5df2\u4e45\uff0c1904\u5e74\u751f\u7269\u5b66\u5bb6\u5c31\u5df2\u7ecf\u77e5\u6653\u4e86\u795e\u7ecf\u5143\u7684\u7ec4\u6210\u7ed3\u6784\u3002 \u4e00\u4e2a\u795e\u7ecf\u5143\u901a\u5e38\u5177\u6709\u591a\u4e2a \u6811\u7a81 \uff0c\u4e3b\u8981\u7528\u6765\u63a5\u53d7\u4f20\u5165\u4fe1\u606f\uff1b\u800c \u8f74\u7a81 \u53ea\u6709\u4e00\u6761\uff0c\u8f74\u7a81\u5c3e\u7aef\u6709\u8bb8\u591a\u8f74\u7a81\u672b\u68a2\u53ef\u4ee5\u7ed9\u5176\u4ed6\u591a\u4e2a\u795e\u7ecf\u5143\u4f20\u9012\u4fe1\u606f\u3002\u8f74\u7a81\u672b\u68a2\u8ddf\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u6811\u7a81\u4ea7\u751f\u8fde\u63a5\uff0c\u4ece\u800c\u4f20\u9012\u4fe1\u53f7\u3002\u8fd9\u4e2a\u8fde\u63a5\u7684\u4f4d\u7f6e\u5728\u751f\u7269\u5b66\u4e0a\u53eb\u505a\u201c \u7a81\u89e6 \u201d\u3002 \u611f\u77e5\u5668 \u00b6 \u7c7b\u6bd4\u4e0e\u6211\u4eec\u4eba\u8111\u7684\u795e\u7ecf\u5143,\u4eba\u4eec\u53d1\u8868\u4e86\u62bd\u8c61\u7684\u795e\u7ecf\u5143\u6a21\u578b---\u611f\u77e5\u5668/\u673a,\u4f46\u540e\u6765\u611f\u77e5\u5668/\u673a\u548c\u795e\u7ecf\u5143\u5728\u672c\u8d28\u4e0a\u5176\u5b9e\u662f\u76f8\u540c\u7684\u3002\u53ea\u4e0d\u8fc7\u4ed6\u4eec\u53eb\u6cd5\u7684\u533a\u522b\u5728\u4e8e:\u6211\u4eec\u8bf4\u611f\u77e5\u5668\u7684\u65f6\u5019\uff0c\u5b83\u7684\u6fc0\u6d3b\u51fd\u6570\u662f \u9636\u8dc3\u51fd\u6570 \uff1b\u800c\u5f53\u6211\u4eec\u8bf4\u795e\u7ecf\u5143\u65f6\uff0c\u6fc0\u6d3b\u51fd\u6570\u5f80\u5f80\u9009\u62e9\u4e3asigmoid\u51fd\u6570\u6216tanh\u51fd\u6570\u3002\u611f\u77e5\u5668\u7b97\u6cd5\u5728\u4e0a\u4e2a\u4e16\u7eaa50-70\u5e74\u4ee3\u5f88\u6d41\u884c\uff0c\u4e5f\u6210\u529f\u89e3\u51b3\u4e86\u5f88\u591a\u95ee\u9898\u3002\u5e76\u4e14\uff0c\u611f\u77e5\u5668\u7b97\u6cd5\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002 \u611f\u77e5\u5668\u7684\u5b9a\u4e49 \u00b6 \u4e0b\u56fe\u662f\u4e00\u4e2a\u611f\u77e5\u5668/\u673a\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u4e2a\u611f\u77e5\u5668/\u673a\u6709\u5982\u4e0b\u7ec4\u6210\u90e8\u5206\uff1a \u8f93\u5165\u6743\u503c:\u4e00\u4e2a\u611f\u77e5\u5668/\u673a\u53ef\u4ee5\u63a5\u6536\u591a\u4e2a \u8f93\u5165 (x1,x2..xn),\u6bcf\u4e2a\u8f93\u5165\u4e0a\u6709\u4e00\u4e2a \u6743\u503c (w1,w2,wn),\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a \u504f\u7f6e\u9879b \uff0c\u5c31\u662f\u4e0a\u56fe\u4e2d\u7684w0\u3002 \u6fc0\u6d3b\u51fd\u6570:\u611f\u77e5\u5668/\u673a\u7684 \u6fc0\u6d3b\u51fd\u6570 \u53ef\u4ee5\u6709\u5f88\u591a\u9009\u62e9,\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u9636\u8dc3\u51fd\u6570\u6765\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\u3002 \u8f93\u51fa:\u611f\u77e5\u5668/\u673a\u7684\u8f93\u51fa\u7531\u8fd9\u4e2a\u516c\u5f0f\u6765\u8ba1\u7b97:y=f(wx+b) \u6ce8\u610f: \u9274\u4e8e\u611f\u77e5\u5668/\u673a\u4e0e\u795e\u7ecf\u5143\u53ea\u662f\u6fc0\u6d3b\u51fd\u6570\u7684\u4e0d\u540c,\u6240\u4ee5\u8ba1\u7b97\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u7684\u65b9\u6cd5\u548c\u8ba1\u7b97\u4e00\u4e2a\u611f\u77e5\u5668\u7684\u8f93\u51fa\u4ecd\u7136\u662f\u4e00\u6837\u7684\u3002 (\u2605\u8865\u5145) \u6fc0\u6d3b\u51fd\u6570 : \u5728\u795e\u7ecf\u5143\u4e2d\uff0c\u8f93\u5165\u7684 inputs \u901a\u8fc7\u52a0\u6743\uff0c\u6c42\u548c\u540e(\u4e5f\u5c31\u662f\u6211\u4eec\u7684 \u8f93\u5165\u6743\u503c \u7684\u5185\u5bb9)\uff0c\u8fd8\u88ab\u4f5c\u7528\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u6fc0\u6d3b\u51fd\u6570 Activation Function\u3002 \u5982\u679c\u4e0d\u7528\u6fc0\u52b1\u51fd\u6570\uff0c\u6bcf\u4e00\u5c42\u8f93\u51fa\u90fd\u662f\u4e0a\u5c42\u8f93\u5165\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u65e0\u8bba\u795e\u7ecf\u7f51\u7edc\u6709\u591a\u5c11\u5c42\uff0c\u8f93\u51fa\u90fd\u662f\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\u3002 \u5982\u679c\u4f7f\u7528\u7684\u8bdd\uff0c\u6fc0\u6d3b\u51fd\u6570\u7ed9\u795e\u7ecf\u5143\u5f15\u5165\u4e86\u975e\u7ebf\u6027\u56e0\u7d20\uff0c\u4f7f\u5f97\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u4efb\u610f\u903c\u8fd1\u4efb\u4f55\u975e\u7ebf\u6027\u51fd\u6570\uff0c\u8fd9\u6837\u795e\u7ecf\u7f51\u7edc\u5c31\u53ef\u4ee5\u5e94\u7528\u5230\u4f17\u591a\u7684\u975e\u7ebf\u6027\u6a21\u578b\u4e2d\u3002 \u4e00\u822c\u6709\u4ee5\u4e0b\u6fc0\u6d3b\u51fd\u6570: sigmoid\u6fc0\u6d3b\u51fd\u6570 tanh\u6fc0\u6d3b\u51fd\u6570 Relu\u6fc0\u6d3b\u51fd\u6570 Leak Relu\u6fc0\u6d3b\u51fd\u6570 SoftPlus\u6fc0\u6d3b\u51fd\u6570 pReLU\u6fc0\u6d3b\u51fd\u6570 ELU\u6fc0\u6d3b\u51fd\u6570 maxout\u6fc0\u6d3b\u51fd\u6570 softmax\u6fc0\u6d3b\u51fd\u6570 log-softmax\u6fc0\u6d3b\u51fd\u6570 exp\u6fc0\u6d3b\u51fd\u6570 softplus\u6fc0\u6d3b\u51fd\u6570 \u611f\u77e5\u5668\u8fd8\u80fd\u505a\u4ec0\u4e48 \u00b6 \u5b83\u53ef\u4ee5\u62df\u5408\u4efb\u4f55\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u4efb\u4f55 \u7ebf\u6027\u5206\u7c7b \u6216 \u7ebf\u6027\u56de\u5f52 \u95ee\u9898\u90fd\u53ef\u4ee5\u7528\u611f\u77e5\u5668\u6765\u89e3\u51b3\u3002 \u603b\u7ed3 \u00b6 \u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u795e\u7ecf\u5143\u7528\u4f20\u9012\u51fd\u6570\u5bf9\u8f93\u5165\u7684\u7ebf\u6027\u52a0\u6743\u8fdb\u884c\u975e\u7ebf\u6027\u5904\u7406\u4ee5\u4ea7\u751f\u8f93\u51fa\uff1b \u611f\u77e5\u5668\u662f\u4e00\u79cd\u4e8c\u5206\u7c7b\u7684\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u901a\u8fc7\u81ea\u9002\u5e94\u8c03\u6574\u6743\u91cd\u89e3\u51b3\u7ebf\u6027\u5206\u7c7b\u95ee\u9898\uff1b \u611f\u77e5\u5668\u7684\u795e\u7ecf\u5143\u4e4b\u95f4\u901a\u8fc7\u6743\u91cd\u4f20\u9012\u4fe1\u606f\uff0c\u6743\u91cd\u7684\u53d8\u5316\u6839\u636e\u8bef\u5dee\u6765\u8fdb\u884c\u8c03\u8282\uff1b \u611f\u77e5\u5668\u4e0d\u80fd\u89e3\u51b3\u4ee5\u5f02\u6216\u4e3a\u4ee3\u8868\u7684\u7ebf\u6027\u4e0d\u53ef\u5206\u95ee\u9898\u3002 \u795e\u7ecf\u7f51\u7edc \u00b6 \u4ecb\u7ecd \u00b6 \u795e\u7ecf\u7f51\u7edc\u5176\u5b9e\u5c31\u662f\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u8fde\u63a5\u8d77\u6765\u7684\u591a\u4e2a\u795e\u7ecf\u5143(\u611f\u77e5\u5668)\u3002\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a \u5168\u8fde\u63a5(full connected, FC)\u795e\u7ecf\u7f51\u7edc \uff0c\u901a\u8fc7\u89c2\u5bdf\u4e0a\u9762\u7684\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684\u89c4\u5219\u5305\u62ec\uff1a \u795e\u7ecf\u5143\u6309\u7167\u5c42\u6765\u5e03\u5c40\u3002\u6700\u5de6\u8fb9\u7684\u5c42\u53eb\u505a \u8f93\u5165\u5c42 \uff0c\u8d1f\u8d23\u63a5\u6536\u8f93\u5165\u6570\u636e\uff1b\u6700\u53f3\u8fb9\u7684\u5c42\u53eb \u8f93\u51fa\u5c42 \uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u5c42\u83b7\u53d6\u795e\u7ecf\u7f51\u7edc\u8f93\u51fa\u6570\u636e\u3002\u8f93\u5165\u5c42\u548c\u8f93\u51fa\u5c42\u4e4b\u95f4\u7684\u5c42\u53eb\u505a \u9690\u85cf\u5c42 \uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u4e8e\u5916\u90e8\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u540c\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u4e4b\u95f4\u6ca1\u6709\u8fde\u63a5\u3002 \u7b2cN\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u548c\u7b2cN-1\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde(\u8fd9\u5c31\u662f\u5168\u8fde\u63a5\u7684\u542b\u4e49)\uff0c\u7b2cN-1\u5c42\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5c31\u662f\u7b2cN\u5c42\u795e\u7ecf\u5143\u7684\u8f93\u5165\u3002 \u6bcf\u4e2a\u8fde\u63a5\u90fd\u6709\u4e00\u4e2a\u6743\u503c\u3002 \u4e0a\u9762\u8fd9\u4e9b\u89c4\u5219\u5b9a\u4e49\u4e86\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u3002\u4e8b\u5b9e\u4e0a\u8fd8\u5b58\u5728\u5f88\u591a\u5176\u5b83\u7ed3\u6784\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u6bd4\u5982\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNN)\u3001\u5faa\u73af\u795e\u7ecf\u7f51\u7edc(RNN)\uff0c\u4ed6\u4eec\u90fd\u5177\u6709\u4e0d\u540c\u7684\u8fde\u63a5\u89c4\u5219\u3002 \u6ce8\u610f: \u5728\u672c\u8d28\u4e0a\u795e\u7ecf\u7f51\u7edc\u4e0e\u591a\u5c42\u611f\u77e5\u5668/\u673a(Multi Layer Perceptron,\u5373MLP)\u5176\u5b9e\u5e76\u65e0\u533a\u522b\u3002 \u53cd\u5411\u4f20\u64ad\u7b97\u6cd5(BP) \u00b6 (\u2605\u8865\u5145) \u8d85\u53c2\u6570 : \u6211\u4eec\u53ef\u4ee5\u8bf4\u795e\u7ecf\u7f51\u7edc\u662f\u4e00\u4e2a \u6a21\u578b \uff0c\u90a3\u4e48\u8fd9\u4e9b\u6743\u503c\u5c31\u662f\u6a21\u578b\u7684\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u8981\u5b66\u4e60\u7684\u4e1c\u897f\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u8fde\u63a5\u65b9\u5f0f\u3001\u7f51\u7edc\u7684\u5c42\u6570\u3001\u6bcf\u5c42\u7684\u8282\u70b9\u6570\u8fd9\u4e9b\u53c2\u6570\uff0c\u5219\u4e0d\u662f\u5b66\u4e60\u51fa\u6765\u7684\uff0c\u800c\u662f\u4eba\u4e3a\u4e8b\u5148\u8bbe\u7f6e\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u4eba\u4e3a\u8bbe\u7f6e\u7684\u53c2\u6570\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u8d85\u53c2\u6570(Hyper-Parameters) \u3002 BP\uff08Back-propagation\uff0c\u53cd\u5411\u4f20\u64ad\uff09\u795e\u7ecf\u7f51\u7edc\u662f\u6700\u4f20\u7edf\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u4e0b\u9762\u6211\u4eec\u5c06\u4ee5\u4e00\u4e2a\u5b9e\u4f8b\u8fdb\u884c\u63a8\u5bfc: \u8fd9\u91cc\u51fa\u73b0\u4e86\u8d85\u53c2\u6570,\u5373:\u4ee5\u5168\u8fde\u63a5,3\u5c42\u7f51\u7edc\u7ed3\u6784,\u6bcf\u5c422\u4e2a\u8282\u70b9\u6784\u9020\u4e86\u6b64\u6a21\u578b\u3002 \u5bf9\u4e8e\u7b2c5\u9875\u7684\u516c\u5f0f\u2461,\u6211\u5728\u8fd9\u91cc\u8865\u5145\u51fa\u4e86\u63a8\u5bfc: \u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u63a8\u5bfc\u51fa\u4e86\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u521a\u521a\u63a8\u5bfc\u51fa\u7684\u8bad\u7ec3\u89c4\u5219\u662f\u6839\u636e\u6fc0\u6d3b\u51fd\u6570\u662fsigmoid\u51fd\u6570\u3001\u5e73\u65b9\u548c\u8bef\u5dee\u3001\u5168\u8fde\u63a5\u7f51\u7edc\u3001\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5\u3002\u5982\u679c\u6fc0\u6d3b\u51fd\u6570\u4e0d\u540c\u3001\u8bef\u5dee\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u540c\u3001\u7f51\u7edc\u8fde\u63a5\u7ed3\u6784\u4e0d\u540c\u3001\u4f18\u5316\u7b97\u6cd5\u4e0d\u540c\uff0c\u5219\u5177\u4f53\u7684\u8bad\u7ec3\u89c4\u5219\u4e5f\u4f1a\u4e0d\u4e00\u6837\u3002\u4f46\u662f\u65e0\u8bba\u600e\u6837\uff0c\u8bad\u7ec3\u89c4\u5219\u7684\u63a8\u5bfc\u65b9\u5f0f\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5e94\u7528 \u94fe\u5f0f\u6c42\u5bfc\u6cd5 \u5219\u8fdb\u884c\u63a8\u5bfc\u5373\u53ef\u3002 \u5411\u91cf\u5316\u795e\u7ecf\u7f51\u7edc\u516c\u5f0f\u63a8\u5bfc: \u4e0b\u8f7d","title":"2. \u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5"},{"location":"ai/ANN/#_1","text":"","title":"\u795e\u7ecf\u7f51\u7edc\u6982\u8ff0"},{"location":"ai/ANN/#_2","text":"","title":"\u4ece\u611f\u77e5\u5668\u8bf4\u8d77"},{"location":"ai/ANN/#_3","text":"\u6211\u4eec\u5b66\u4e60\u8fc7\u751f\u7269,\u6240\u4ee5\u6211\u4eec\u90fd\u53ef\u80fd\u6bd4\u8f83\u719f\u6089\u751f\u7269\u610f\u4e49\u4e0a\u7684\u795e\u7ecf\u5143,\u4e5f\u5c31\u662f\u6211\u4eec\u4eba\u8111\u5185\u7684\u90a3\u4e9b,\u90a3\u4e48\u5b83\u662f\u4e0d\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u5462: \u5176\u5b9e,\u5bf9\u4e8e\u795e\u7ecf\u5143\u7684\u7814\u7a76\u7531\u6765\u5df2\u4e45\uff0c1904\u5e74\u751f\u7269\u5b66\u5bb6\u5c31\u5df2\u7ecf\u77e5\u6653\u4e86\u795e\u7ecf\u5143\u7684\u7ec4\u6210\u7ed3\u6784\u3002 \u4e00\u4e2a\u795e\u7ecf\u5143\u901a\u5e38\u5177\u6709\u591a\u4e2a \u6811\u7a81 \uff0c\u4e3b\u8981\u7528\u6765\u63a5\u53d7\u4f20\u5165\u4fe1\u606f\uff1b\u800c \u8f74\u7a81 \u53ea\u6709\u4e00\u6761\uff0c\u8f74\u7a81\u5c3e\u7aef\u6709\u8bb8\u591a\u8f74\u7a81\u672b\u68a2\u53ef\u4ee5\u7ed9\u5176\u4ed6\u591a\u4e2a\u795e\u7ecf\u5143\u4f20\u9012\u4fe1\u606f\u3002\u8f74\u7a81\u672b\u68a2\u8ddf\u5176\u4ed6\u795e\u7ecf\u5143\u7684\u6811\u7a81\u4ea7\u751f\u8fde\u63a5\uff0c\u4ece\u800c\u4f20\u9012\u4fe1\u53f7\u3002\u8fd9\u4e2a\u8fde\u63a5\u7684\u4f4d\u7f6e\u5728\u751f\u7269\u5b66\u4e0a\u53eb\u505a\u201c \u7a81\u89e6 \u201d\u3002","title":"\u751f\u7269\u795e\u7ecf\u5143"},{"location":"ai/ANN/#_4","text":"\u7c7b\u6bd4\u4e0e\u6211\u4eec\u4eba\u8111\u7684\u795e\u7ecf\u5143,\u4eba\u4eec\u53d1\u8868\u4e86\u62bd\u8c61\u7684\u795e\u7ecf\u5143\u6a21\u578b---\u611f\u77e5\u5668/\u673a,\u4f46\u540e\u6765\u611f\u77e5\u5668/\u673a\u548c\u795e\u7ecf\u5143\u5728\u672c\u8d28\u4e0a\u5176\u5b9e\u662f\u76f8\u540c\u7684\u3002\u53ea\u4e0d\u8fc7\u4ed6\u4eec\u53eb\u6cd5\u7684\u533a\u522b\u5728\u4e8e:\u6211\u4eec\u8bf4\u611f\u77e5\u5668\u7684\u65f6\u5019\uff0c\u5b83\u7684\u6fc0\u6d3b\u51fd\u6570\u662f \u9636\u8dc3\u51fd\u6570 \uff1b\u800c\u5f53\u6211\u4eec\u8bf4\u795e\u7ecf\u5143\u65f6\uff0c\u6fc0\u6d3b\u51fd\u6570\u5f80\u5f80\u9009\u62e9\u4e3asigmoid\u51fd\u6570\u6216tanh\u51fd\u6570\u3002\u611f\u77e5\u5668\u7b97\u6cd5\u5728\u4e0a\u4e2a\u4e16\u7eaa50-70\u5e74\u4ee3\u5f88\u6d41\u884c\uff0c\u4e5f\u6210\u529f\u89e3\u51b3\u4e86\u5f88\u591a\u95ee\u9898\u3002\u5e76\u4e14\uff0c\u611f\u77e5\u5668\u7b97\u6cd5\u4e5f\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002","title":"\u611f\u77e5\u5668"},{"location":"ai/ANN/#_5","text":"\u4e0b\u56fe\u662f\u4e00\u4e2a\u611f\u77e5\u5668/\u673a\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u4e2a\u611f\u77e5\u5668/\u673a\u6709\u5982\u4e0b\u7ec4\u6210\u90e8\u5206\uff1a \u8f93\u5165\u6743\u503c:\u4e00\u4e2a\u611f\u77e5\u5668/\u673a\u53ef\u4ee5\u63a5\u6536\u591a\u4e2a \u8f93\u5165 (x1,x2..xn),\u6bcf\u4e2a\u8f93\u5165\u4e0a\u6709\u4e00\u4e2a \u6743\u503c (w1,w2,wn),\u6b64\u5916\u8fd8\u6709\u4e00\u4e2a \u504f\u7f6e\u9879b \uff0c\u5c31\u662f\u4e0a\u56fe\u4e2d\u7684w0\u3002 \u6fc0\u6d3b\u51fd\u6570:\u611f\u77e5\u5668/\u673a\u7684 \u6fc0\u6d3b\u51fd\u6570 \u53ef\u4ee5\u6709\u5f88\u591a\u9009\u62e9,\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u9636\u8dc3\u51fd\u6570\u6765\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\u3002 \u8f93\u51fa:\u611f\u77e5\u5668/\u673a\u7684\u8f93\u51fa\u7531\u8fd9\u4e2a\u516c\u5f0f\u6765\u8ba1\u7b97:y=f(wx+b) \u6ce8\u610f: \u9274\u4e8e\u611f\u77e5\u5668/\u673a\u4e0e\u795e\u7ecf\u5143\u53ea\u662f\u6fc0\u6d3b\u51fd\u6570\u7684\u4e0d\u540c,\u6240\u4ee5\u8ba1\u7b97\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u7684\u65b9\u6cd5\u548c\u8ba1\u7b97\u4e00\u4e2a\u611f\u77e5\u5668\u7684\u8f93\u51fa\u4ecd\u7136\u662f\u4e00\u6837\u7684\u3002 (\u2605\u8865\u5145) \u6fc0\u6d3b\u51fd\u6570 : \u5728\u795e\u7ecf\u5143\u4e2d\uff0c\u8f93\u5165\u7684 inputs \u901a\u8fc7\u52a0\u6743\uff0c\u6c42\u548c\u540e(\u4e5f\u5c31\u662f\u6211\u4eec\u7684 \u8f93\u5165\u6743\u503c \u7684\u5185\u5bb9)\uff0c\u8fd8\u88ab\u4f5c\u7528\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u6fc0\u6d3b\u51fd\u6570 Activation Function\u3002 \u5982\u679c\u4e0d\u7528\u6fc0\u52b1\u51fd\u6570\uff0c\u6bcf\u4e00\u5c42\u8f93\u51fa\u90fd\u662f\u4e0a\u5c42\u8f93\u5165\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u65e0\u8bba\u795e\u7ecf\u7f51\u7edc\u6709\u591a\u5c11\u5c42\uff0c\u8f93\u51fa\u90fd\u662f\u8f93\u5165\u7684\u7ebf\u6027\u7ec4\u5408\u3002 \u5982\u679c\u4f7f\u7528\u7684\u8bdd\uff0c\u6fc0\u6d3b\u51fd\u6570\u7ed9\u795e\u7ecf\u5143\u5f15\u5165\u4e86\u975e\u7ebf\u6027\u56e0\u7d20\uff0c\u4f7f\u5f97\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u4efb\u610f\u903c\u8fd1\u4efb\u4f55\u975e\u7ebf\u6027\u51fd\u6570\uff0c\u8fd9\u6837\u795e\u7ecf\u7f51\u7edc\u5c31\u53ef\u4ee5\u5e94\u7528\u5230\u4f17\u591a\u7684\u975e\u7ebf\u6027\u6a21\u578b\u4e2d\u3002 \u4e00\u822c\u6709\u4ee5\u4e0b\u6fc0\u6d3b\u51fd\u6570: sigmoid\u6fc0\u6d3b\u51fd\u6570 tanh\u6fc0\u6d3b\u51fd\u6570 Relu\u6fc0\u6d3b\u51fd\u6570 Leak Relu\u6fc0\u6d3b\u51fd\u6570 SoftPlus\u6fc0\u6d3b\u51fd\u6570 pReLU\u6fc0\u6d3b\u51fd\u6570 ELU\u6fc0\u6d3b\u51fd\u6570 maxout\u6fc0\u6d3b\u51fd\u6570 softmax\u6fc0\u6d3b\u51fd\u6570 log-softmax\u6fc0\u6d3b\u51fd\u6570 exp\u6fc0\u6d3b\u51fd\u6570 softplus\u6fc0\u6d3b\u51fd\u6570","title":"\u611f\u77e5\u5668\u7684\u5b9a\u4e49"},{"location":"ai/ANN/#_6","text":"\u5b83\u53ef\u4ee5\u62df\u5408\u4efb\u4f55\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u4efb\u4f55 \u7ebf\u6027\u5206\u7c7b \u6216 \u7ebf\u6027\u56de\u5f52 \u95ee\u9898\u90fd\u53ef\u4ee5\u7528\u611f\u77e5\u5668\u6765\u89e3\u51b3\u3002","title":"\u611f\u77e5\u5668\u8fd8\u80fd\u505a\u4ec0\u4e48"},{"location":"ai/ANN/#_7","text":"\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7684\u795e\u7ecf\u5143\u7528\u4f20\u9012\u51fd\u6570\u5bf9\u8f93\u5165\u7684\u7ebf\u6027\u52a0\u6743\u8fdb\u884c\u975e\u7ebf\u6027\u5904\u7406\u4ee5\u4ea7\u751f\u8f93\u51fa\uff1b \u611f\u77e5\u5668\u662f\u4e00\u79cd\u4e8c\u5206\u7c7b\u7684\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\uff0c\u901a\u8fc7\u81ea\u9002\u5e94\u8c03\u6574\u6743\u91cd\u89e3\u51b3\u7ebf\u6027\u5206\u7c7b\u95ee\u9898\uff1b \u611f\u77e5\u5668\u7684\u795e\u7ecf\u5143\u4e4b\u95f4\u901a\u8fc7\u6743\u91cd\u4f20\u9012\u4fe1\u606f\uff0c\u6743\u91cd\u7684\u53d8\u5316\u6839\u636e\u8bef\u5dee\u6765\u8fdb\u884c\u8c03\u8282\uff1b \u611f\u77e5\u5668\u4e0d\u80fd\u89e3\u51b3\u4ee5\u5f02\u6216\u4e3a\u4ee3\u8868\u7684\u7ebf\u6027\u4e0d\u53ef\u5206\u95ee\u9898\u3002","title":"\u603b\u7ed3"},{"location":"ai/ANN/#_8","text":"","title":"\u795e\u7ecf\u7f51\u7edc"},{"location":"ai/ANN/#_9","text":"\u795e\u7ecf\u7f51\u7edc\u5176\u5b9e\u5c31\u662f\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u8fde\u63a5\u8d77\u6765\u7684\u591a\u4e2a\u795e\u7ecf\u5143(\u611f\u77e5\u5668)\u3002\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a \u5168\u8fde\u63a5(full connected, FC)\u795e\u7ecf\u7f51\u7edc \uff0c\u901a\u8fc7\u89c2\u5bdf\u4e0a\u9762\u7684\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684\u89c4\u5219\u5305\u62ec\uff1a \u795e\u7ecf\u5143\u6309\u7167\u5c42\u6765\u5e03\u5c40\u3002\u6700\u5de6\u8fb9\u7684\u5c42\u53eb\u505a \u8f93\u5165\u5c42 \uff0c\u8d1f\u8d23\u63a5\u6536\u8f93\u5165\u6570\u636e\uff1b\u6700\u53f3\u8fb9\u7684\u5c42\u53eb \u8f93\u51fa\u5c42 \uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u5c42\u83b7\u53d6\u795e\u7ecf\u7f51\u7edc\u8f93\u51fa\u6570\u636e\u3002\u8f93\u5165\u5c42\u548c\u8f93\u51fa\u5c42\u4e4b\u95f4\u7684\u5c42\u53eb\u505a \u9690\u85cf\u5c42 \uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u4e8e\u5916\u90e8\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u540c\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u4e4b\u95f4\u6ca1\u6709\u8fde\u63a5\u3002 \u7b2cN\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u548c\u7b2cN-1\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde(\u8fd9\u5c31\u662f\u5168\u8fde\u63a5\u7684\u542b\u4e49)\uff0c\u7b2cN-1\u5c42\u795e\u7ecf\u5143\u7684\u8f93\u51fa\u5c31\u662f\u7b2cN\u5c42\u795e\u7ecf\u5143\u7684\u8f93\u5165\u3002 \u6bcf\u4e2a\u8fde\u63a5\u90fd\u6709\u4e00\u4e2a\u6743\u503c\u3002 \u4e0a\u9762\u8fd9\u4e9b\u89c4\u5219\u5b9a\u4e49\u4e86\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\u3002\u4e8b\u5b9e\u4e0a\u8fd8\u5b58\u5728\u5f88\u591a\u5176\u5b83\u7ed3\u6784\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u6bd4\u5982\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNN)\u3001\u5faa\u73af\u795e\u7ecf\u7f51\u7edc(RNN)\uff0c\u4ed6\u4eec\u90fd\u5177\u6709\u4e0d\u540c\u7684\u8fde\u63a5\u89c4\u5219\u3002 \u6ce8\u610f: \u5728\u672c\u8d28\u4e0a\u795e\u7ecf\u7f51\u7edc\u4e0e\u591a\u5c42\u611f\u77e5\u5668/\u673a(Multi Layer Perceptron,\u5373MLP)\u5176\u5b9e\u5e76\u65e0\u533a\u522b\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/ANN/#bp","text":"(\u2605\u8865\u5145) \u8d85\u53c2\u6570 : \u6211\u4eec\u53ef\u4ee5\u8bf4\u795e\u7ecf\u7f51\u7edc\u662f\u4e00\u4e2a \u6a21\u578b \uff0c\u90a3\u4e48\u8fd9\u4e9b\u6743\u503c\u5c31\u662f\u6a21\u578b\u7684\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u8981\u5b66\u4e60\u7684\u4e1c\u897f\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7684\u8fde\u63a5\u65b9\u5f0f\u3001\u7f51\u7edc\u7684\u5c42\u6570\u3001\u6bcf\u5c42\u7684\u8282\u70b9\u6570\u8fd9\u4e9b\u53c2\u6570\uff0c\u5219\u4e0d\u662f\u5b66\u4e60\u51fa\u6765\u7684\uff0c\u800c\u662f\u4eba\u4e3a\u4e8b\u5148\u8bbe\u7f6e\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u4eba\u4e3a\u8bbe\u7f6e\u7684\u53c2\u6570\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a \u8d85\u53c2\u6570(Hyper-Parameters) \u3002 BP\uff08Back-propagation\uff0c\u53cd\u5411\u4f20\u64ad\uff09\u795e\u7ecf\u7f51\u7edc\u662f\u6700\u4f20\u7edf\u7684\u795e\u7ecf\u7f51\u7edc\u3002 \u4e0b\u9762\u6211\u4eec\u5c06\u4ee5\u4e00\u4e2a\u5b9e\u4f8b\u8fdb\u884c\u63a8\u5bfc: \u8fd9\u91cc\u51fa\u73b0\u4e86\u8d85\u53c2\u6570,\u5373:\u4ee5\u5168\u8fde\u63a5,3\u5c42\u7f51\u7edc\u7ed3\u6784,\u6bcf\u5c422\u4e2a\u8282\u70b9\u6784\u9020\u4e86\u6b64\u6a21\u578b\u3002 \u5bf9\u4e8e\u7b2c5\u9875\u7684\u516c\u5f0f\u2461,\u6211\u5728\u8fd9\u91cc\u8865\u5145\u51fa\u4e86\u63a8\u5bfc: \u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u63a8\u5bfc\u51fa\u4e86\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u521a\u521a\u63a8\u5bfc\u51fa\u7684\u8bad\u7ec3\u89c4\u5219\u662f\u6839\u636e\u6fc0\u6d3b\u51fd\u6570\u662fsigmoid\u51fd\u6570\u3001\u5e73\u65b9\u548c\u8bef\u5dee\u3001\u5168\u8fde\u63a5\u7f51\u7edc\u3001\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5\u3002\u5982\u679c\u6fc0\u6d3b\u51fd\u6570\u4e0d\u540c\u3001\u8bef\u5dee\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u540c\u3001\u7f51\u7edc\u8fde\u63a5\u7ed3\u6784\u4e0d\u540c\u3001\u4f18\u5316\u7b97\u6cd5\u4e0d\u540c\uff0c\u5219\u5177\u4f53\u7684\u8bad\u7ec3\u89c4\u5219\u4e5f\u4f1a\u4e0d\u4e00\u6837\u3002\u4f46\u662f\u65e0\u8bba\u600e\u6837\uff0c\u8bad\u7ec3\u89c4\u5219\u7684\u63a8\u5bfc\u65b9\u5f0f\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5e94\u7528 \u94fe\u5f0f\u6c42\u5bfc\u6cd5 \u5219\u8fdb\u884c\u63a8\u5bfc\u5373\u53ef\u3002 \u5411\u91cf\u5316\u795e\u7ecf\u7f51\u7edc\u516c\u5f0f\u63a8\u5bfc: \u4e0b\u8f7d","title":"\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5(BP)"},{"location":"ai/bpr/","text":"\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u6982\u8ff0 \u00b6 \u6392\u5e8f\u63a8\u8350\u7b97\u6cd5\u80cc\u666f \u00b6 \u6392\u5e8f\u63a8\u8350\u7b97\u6cd5\u5386\u53f2\u5f88\u60a0\u4e45\uff0c\u65e9\u5728\u505a\u4fe1\u606f\u68c0\u7d22\u7684\u5404\u79cd\u4ea7\u54c1\u4e2d\u5c31\u5df2\u7ecf\u5728\u4f7f\u7528\u4e86\u3002\u6700\u65e9\u7684\u7b2c\u4e00\u7c7b\u6392\u5e8f\u7b97\u6cd5\u7c7b\u522b\u662f\u70b9\u5bf9\u65b9\u6cd5(Pointwise Approach)\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5c06\u6392\u5e8f\u95ee\u9898\u88ab\u8f6c\u5316\u4e3a\u5206\u7c7b\u3001\u56de\u5f52\u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u5e76\u4f7f\u7528\u73b0\u6709\u5206\u7c7b\u3001\u56de\u5f52\u7b49\u65b9\u6cd5\u8fdb\u884c\u5b9e\u73b0\u3002\u7b2c\u4e8c\u7c7b\u6392\u5e8f\u7b97\u6cd5\u662f\u6210\u5bf9\u65b9\u6cd5(Pairwise Approach)\uff0c\u5728\u5e8f\u5217\u65b9\u6cd5\u4e2d\uff0c\u6392\u5e8f\u88ab\u8f6c\u5316\u4e3a\u5bf9\u5e8f\u5217\u5206\u7c7b\u6216\u5bf9\u5e8f\u5217\u56de\u5f52\u3002\u6240\u8c13\u7684pair\u5c31\u662f\u6210\u5bf9\u7684\u6392\u5e8f\uff0c\u6bd4\u5982(a,b)\u4e00\u7ec4\u8868\u660ea\u6bd4b\u6392\u7684\u9760\u524d\u3002\u6211\u4eec\u8981\u8bb2\u5230\u7684BPR\u5c31\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u3002\u7b2c\u4e09\u7c7b\u6392\u5e8f\u7b97\u6cd5\u662f\u5217\u8868\u65b9\u6cd5(Listwise Approach)\uff0c\u5b83\u91c7\u7528\u66f4\u52a0\u76f4\u63a5\u7684\u65b9\u6cd5\u5bf9\u6392\u5e8f\u95ee\u9898\u8fdb\u884c\u4e86\u5904\u7406\u3002\u5b83\u5728\u5b66\u4e60\u548c\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u90fd\u5c06\u6392\u5e8f\u5217\u8868\u4f5c\u4e3a\u4e00\u4e2a\u6837\u672c\u3002\u6392\u5e8f\u7684\u7ec4\u7ed3\u6784\u88ab\u4fdd\u6301\u3002 BPR \u00b6 \u4f7f\u7528\u80cc\u666f \u00b6 \u5728\u5f88\u591a\u63a8\u8350\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u90fd\u662f\u57fa\u4e8e\u73b0\u6709\u7684\u7528\u6237\u548c\u5546\u54c1\u4e4b\u95f4\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u5f97\u5230\u7528\u6237\u5bf9\u6240\u6709\u5546\u54c1\u7684\u8bc4\u5206\uff0c\u9009\u62e9\u9ad8\u5206\u7684\u5546\u54c1\u63a8\u8350\u7ed9\u7528\u6237\uff0c\u8fd9\u662ffunkSVD\u4e4b\u7c7b\u7b97\u6cd5\u7684\u505a\u6cd5\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u5f88\u6709\u6548\u3002\u4f46\u662f\u5728\u6709\u4e9b\u63a8\u8350\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u662f\u4e3a\u4e86\u5728\u5343\u4e07\u7ea7\u522b\u7684\u5546\u54c1\u4e2d\u63a8\u8350\u4e2a\u4f4d\u6570\u7684\u5546\u54c1\u7ed9\u7528\u6237\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u7528\u6237\u6765\u8bf4\uff0c\u54ea\u4e9b\u6781\u5c11\u6570\u5546\u54c1\u5728\u7528\u6237\u5fc3\u4e2d\u6709\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u5c31\u662f\u6392\u5e8f\u66f4\u9760\u524d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6392\u5e8f\u7b97\u6cd5\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7528\u6237\u5bf9\u5e94\u7684\u6240\u6709\u5546\u54c1\u6309\u559c\u597d\u6392\u5e8f\u3002BPR\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u6211\u4eec\u9700\u8981\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u4ecb\u7ecd \u00b6 BPR\u5373Bayesian Personalized Ranking\uff0c\u4e2d\u6587\u540d\u79f0\u4e3a\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\uff0c\u662f\u5f53\u4e0b\u63a8\u8350\u7cfb\u7edf\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u63a8\u8350\u7b97\u6cd5\u3002\u4e0e\u5176\u4ed6\u7684\u57fa\u4e8e\u7528\u6237\u8bc4\u5206\u77e9\u9635\u7684\u65b9\u6cd5\u4e0d\u540c\u7684\u662fBPR\u4e3b\u8981\u91c7\u7528\u7528\u6237\u7684\u9690\u5f0f\u53cd\u9988\uff08\u5982\u70b9\u51fb\u3001\u6536\u85cf\u7b49\uff09\uff0c\u901a\u8fc7\u5bf9\u95ee\u9898\u8fdb\u884c\u8d1d\u53f6\u65af\u5206\u6790\u5f97\u5230\u7684\u6700\u5927\u540e\u9a8c\u6982\u7387\u6765\u5bf9item\u8fdb\u884c\u6392\u5e8f\uff0c\u8fdb\u800c\u4ea7\u751f\u63a8\u8350\u3002 \u5b9a\u4e49 \u00b6 \u4f20\u7edf\u89e3\u51b3\u65b9\u5f0f \u00b6 BPR\u7684\u89e3\u51b3\u65b9\u5f0f \u00b6 \u57fa\u4e8e\u77e9\u9635\u5206\u89e3\u7684BPR \u00b6 \u4e00\u4efd\u66f4\u52a0\u4e13\u4e1a\u7684BPR\u5b66\u4e60\u8d44\u6599\u5728: \u5218\u5efa\u5e73-\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f(BPR) \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u6ce8\u610f: 1\uff09 \u6570\u636e\u96c6+\u7a0b\u5e8f\u4e0b\u8f7d \u3002 2\uff09\u7a0b\u5e8f\u6bcf\u6b21\u8fd0\u884c\u7ed3\u679c\u4e0d\u540c,\u4f46\u4e0a\u4e0b\u504f\u5dee\u4e0d\u5927\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 import random from collections import defaultdict import numpy as np from sklearn.metrics import roc_auc_score import scores class BPR : #\u7528\u6237\u6570 user_count = 943 #\u9879\u76ee\u6570 item_count = 1682 #k\u4e2a\u4e3b\u9898,k\u6570 latent_factors = 20 #\u6b65\u957f\u03b1 lr = 0.01 #\u53c2\u6570\u03bb reg = 0.01 #\u8bad\u7ec3\u6b21\u6570 train_count = 1000 #\u8bad\u7ec3\u96c6 train_data_path = 'train.txt' #\u6d4b\u8bd5\u96c6 test_data_path = 'test.txt' #U-I\u7684\u5927\u5c0f size_u_i = user_count * item_count # \u968f\u673a\u8bbe\u5b9a\u7684U\uff0cV\u77e9\u9635(\u5373\u516c\u5f0f\u4e2d\u7684Wuk\u548cHik)\u77e9\u9635 U = np . random . rand ( user_count , latent_factors ) * 0.01 #\u5927\u5c0f\u65e0\u6240\u8c13 V = np . random . rand ( item_count , latent_factors ) * 0.01 biasV = np . random . rand ( item_count ) * 0.01 #\u751f\u6210\u4e00\u4e2a\u7528\u6237\u6570*\u9879\u76ee\u6570\u5927\u5c0f\u7684\u51680\u77e9\u9635 test_data = np . zeros (( user_count , item_count )) #\u751f\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u51680\u77e9\u9635 test = np . zeros ( size_u_i ) #\u518d\u751f\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u51680\u77e9\u9635 predict_ = np . zeros ( size_u_i ) #\u83b7\u53d6U-I\u6570\u636e\u5bf9\u5e94 def load_data ( self , path ): user_ratings = defaultdict ( set ) with open ( path , 'r' ) as f : for line in f . readlines (): u , i = line . split ( \" \" ) u = int ( u ) i = int ( i ) user_ratings [ u ] . add ( i ) return user_ratings #\u83b7\u53d6\u6d4b\u8bd5\u96c6\u7684\u8bc4\u5206\u77e9\u9635 def load_test_data ( self , path ): file = open ( path , 'r' ) for line in file : line = line . split ( ' ' ) user = int ( line [ 0 ]) item = int ( line [ 1 ]) self . test_data [ user - 1 ][ item - 1 ] = 1 def train ( self , user_ratings_train ): for user in range ( self . user_count ): #\u968f\u673a\u83b7\u53d6\u4e00\u4e2a\u7528\u6237 u = random . randint ( 1 , self . user_count ) #\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u7528\u4e8e\u4e0d\u662f\u5168\u90fd\u4e00\u6837\u7684,\u6bd4\u5982train\u6709948,\u800ctest\u6700\u5927\u4e3a943 if u not in user_ratings_train . keys (): continue # \u4ece\u7528\u6237\u7684U-I\u4e2d\u968f\u673a\u9009\u53d61\u4e2aItem i = random . sample ( user_ratings_train [ u ], 1 )[ 0 ] # \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u7528\u6237u\u6ca1\u6709\u8bc4\u5206\u7684\u9879\u76ee j = random . randint ( 1 , self . item_count ) while j in user_ratings_train [ u ]: j = random . randint ( 1 , self . item_count ) #python\u4e2d\u7684\u53d6\u503c\u4ece0\u5f00\u59cb u = u - 1 i = i - 1 j = j - 1 #BPR r_ui = np . dot ( self . U [ u ], self . V [ i ] . T ) + self . biasV [ i ] r_uj = np . dot ( self . U [ u ], self . V [ j ] . T ) + self . biasV [ j ] r_uij = r_ui - r_uj loss_func = - 1.0 / ( 1 + np . exp ( r_uij )) # \u66f4\u65b02\u4e2a\u77e9\u9635 self . U [ u ] += - self . lr * ( loss_func * ( self . V [ i ] - self . V [ j ]) + self . reg * self . U [ u ]) self . V [ i ] += - self . lr * ( loss_func * self . U [ u ] + self . reg * self . V [ i ]) self . V [ j ] += - self . lr * ( loss_func * ( - self . U [ u ]) + self . reg * self . V [ j ]) # \u66f4\u65b0\u504f\u7f6e\u9879 self . biasV [ i ] += - self . lr * ( loss_func + self . reg * self . biasV [ i ]) self . biasV [ j ] += - self . lr * ( - loss_func + self . reg * self . biasV [ j ]) def predict ( self , user , item ): predict = np . mat ( user ) * np . mat ( item . T ) return predict #\u4e3b\u51fd\u6570 def main ( self ): #\u83b7\u53d6U-I\u7684{1:{2,5,1,2}....}\u6570\u636e user_ratings_train = self . load_data ( self . train_data_path ) #\u83b7\u53d6\u6d4b\u8bd5\u96c6\u7684\u8bc4\u5206\u77e9\u9635 self . load_test_data ( self . test_data_path ) #\u5c06test_data\u77e9\u9635\u62cd\u5e73 for u in range ( self . user_count ): for item in range ( self . item_count ): if int ( self . test_data [ u ][ item ]) == 1 : self . test [ u * self . item_count + item ] = 1 else : self . test [ u * self . item_count + item ] = 0 #\u8bad\u7ec3 for i in range ( self . train_count ): self . train ( user_ratings_train ) #\u8bad\u7ec31000\u6b21\u5b8c\u6210 predict_matrix = self . predict ( self . U , self . V ) #\u5c06\u8bad\u7ec3\u5b8c\u6210\u7684\u77e9\u9635\u5167\u79ef # \u9884\u6d4b self . predict_ = predict_matrix . getA () . reshape ( - 1 ) #.getA()\u5c06\u81ea\u8eab\u77e9\u9635\u53d8\u91cf\u8f6c\u5316\u4e3andarray\u7c7b\u578b\u7684\u53d8\u91cf self . predict_ = pre_handel ( user_ratings_train , self . predict_ , self . item_count ) auc_score = roc_auc_score ( self . test , self . predict_ ) print ( 'AUC:' , auc_score ) # Top-K evaluation scores . topK_scores ( self . test , self . predict_ , 5 , self . user_count , self . item_count ) def pre_handel ( set , predict , item_count ): # Ensure the recommendation cannot be positive items in the training set. for u in set . keys (): for j in set [ u ]: predict [( u - 1 ) * item_count + j - 1 ] = 0 return predict if __name__ == '__main__' : #\u8c03\u7528\u7c7b\u7684\u4e3b\u51fd\u6570 bpr = BPR () bpr . main () \u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"7. \u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f"},{"location":"ai/bpr/#_1","text":"","title":"\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u6982\u8ff0"},{"location":"ai/bpr/#_2","text":"\u6392\u5e8f\u63a8\u8350\u7b97\u6cd5\u5386\u53f2\u5f88\u60a0\u4e45\uff0c\u65e9\u5728\u505a\u4fe1\u606f\u68c0\u7d22\u7684\u5404\u79cd\u4ea7\u54c1\u4e2d\u5c31\u5df2\u7ecf\u5728\u4f7f\u7528\u4e86\u3002\u6700\u65e9\u7684\u7b2c\u4e00\u7c7b\u6392\u5e8f\u7b97\u6cd5\u7c7b\u522b\u662f\u70b9\u5bf9\u65b9\u6cd5(Pointwise Approach)\uff0c\u8fd9\u7c7b\u7b97\u6cd5\u5c06\u6392\u5e8f\u95ee\u9898\u88ab\u8f6c\u5316\u4e3a\u5206\u7c7b\u3001\u56de\u5f52\u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u5e76\u4f7f\u7528\u73b0\u6709\u5206\u7c7b\u3001\u56de\u5f52\u7b49\u65b9\u6cd5\u8fdb\u884c\u5b9e\u73b0\u3002\u7b2c\u4e8c\u7c7b\u6392\u5e8f\u7b97\u6cd5\u662f\u6210\u5bf9\u65b9\u6cd5(Pairwise Approach)\uff0c\u5728\u5e8f\u5217\u65b9\u6cd5\u4e2d\uff0c\u6392\u5e8f\u88ab\u8f6c\u5316\u4e3a\u5bf9\u5e8f\u5217\u5206\u7c7b\u6216\u5bf9\u5e8f\u5217\u56de\u5f52\u3002\u6240\u8c13\u7684pair\u5c31\u662f\u6210\u5bf9\u7684\u6392\u5e8f\uff0c\u6bd4\u5982(a,b)\u4e00\u7ec4\u8868\u660ea\u6bd4b\u6392\u7684\u9760\u524d\u3002\u6211\u4eec\u8981\u8bb2\u5230\u7684BPR\u5c31\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u3002\u7b2c\u4e09\u7c7b\u6392\u5e8f\u7b97\u6cd5\u662f\u5217\u8868\u65b9\u6cd5(Listwise Approach)\uff0c\u5b83\u91c7\u7528\u66f4\u52a0\u76f4\u63a5\u7684\u65b9\u6cd5\u5bf9\u6392\u5e8f\u95ee\u9898\u8fdb\u884c\u4e86\u5904\u7406\u3002\u5b83\u5728\u5b66\u4e60\u548c\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u90fd\u5c06\u6392\u5e8f\u5217\u8868\u4f5c\u4e3a\u4e00\u4e2a\u6837\u672c\u3002\u6392\u5e8f\u7684\u7ec4\u7ed3\u6784\u88ab\u4fdd\u6301\u3002","title":"\u6392\u5e8f\u63a8\u8350\u7b97\u6cd5\u80cc\u666f"},{"location":"ai/bpr/#bpr","text":"","title":"BPR"},{"location":"ai/bpr/#_3","text":"\u5728\u5f88\u591a\u63a8\u8350\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u90fd\u662f\u57fa\u4e8e\u73b0\u6709\u7684\u7528\u6237\u548c\u5546\u54c1\u4e4b\u95f4\u7684\u4e00\u4e9b\u6570\u636e\uff0c\u5f97\u5230\u7528\u6237\u5bf9\u6240\u6709\u5546\u54c1\u7684\u8bc4\u5206\uff0c\u9009\u62e9\u9ad8\u5206\u7684\u5546\u54c1\u63a8\u8350\u7ed9\u7528\u6237\uff0c\u8fd9\u662ffunkSVD\u4e4b\u7c7b\u7b97\u6cd5\u7684\u505a\u6cd5\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u5f88\u6709\u6548\u3002\u4f46\u662f\u5728\u6709\u4e9b\u63a8\u8350\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u662f\u4e3a\u4e86\u5728\u5343\u4e07\u7ea7\u522b\u7684\u5546\u54c1\u4e2d\u63a8\u8350\u4e2a\u4f4d\u6570\u7684\u5546\u54c1\u7ed9\u7528\u6237\uff0c\u6b64\u65f6\uff0c\u6211\u4eec\u66f4\u5173\u5fc3\u7684\u662f\u7528\u6237\u6765\u8bf4\uff0c\u54ea\u4e9b\u6781\u5c11\u6570\u5546\u54c1\u5728\u7528\u6237\u5fc3\u4e2d\u6709\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u5c31\u662f\u6392\u5e8f\u66f4\u9760\u524d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6392\u5e8f\u7b97\u6cd5\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u628a\u6bcf\u4e2a\u7528\u6237\u5bf9\u5e94\u7684\u6240\u6709\u5546\u54c1\u6309\u559c\u597d\u6392\u5e8f\u3002BPR\u5c31\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u6211\u4eec\u9700\u8981\u7684\u6392\u5e8f\u7b97\u6cd5\u3002","title":"\u4f7f\u7528\u80cc\u666f"},{"location":"ai/bpr/#_4","text":"BPR\u5373Bayesian Personalized Ranking\uff0c\u4e2d\u6587\u540d\u79f0\u4e3a\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\uff0c\u662f\u5f53\u4e0b\u63a8\u8350\u7cfb\u7edf\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u63a8\u8350\u7b97\u6cd5\u3002\u4e0e\u5176\u4ed6\u7684\u57fa\u4e8e\u7528\u6237\u8bc4\u5206\u77e9\u9635\u7684\u65b9\u6cd5\u4e0d\u540c\u7684\u662fBPR\u4e3b\u8981\u91c7\u7528\u7528\u6237\u7684\u9690\u5f0f\u53cd\u9988\uff08\u5982\u70b9\u51fb\u3001\u6536\u85cf\u7b49\uff09\uff0c\u901a\u8fc7\u5bf9\u95ee\u9898\u8fdb\u884c\u8d1d\u53f6\u65af\u5206\u6790\u5f97\u5230\u7684\u6700\u5927\u540e\u9a8c\u6982\u7387\u6765\u5bf9item\u8fdb\u884c\u6392\u5e8f\uff0c\u8fdb\u800c\u4ea7\u751f\u63a8\u8350\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/bpr/#_5","text":"","title":"\u5b9a\u4e49"},{"location":"ai/bpr/#_6","text":"","title":"\u4f20\u7edf\u89e3\u51b3\u65b9\u5f0f"},{"location":"ai/bpr/#bpr_1","text":"","title":"BPR\u7684\u89e3\u51b3\u65b9\u5f0f"},{"location":"ai/bpr/#bpr_2","text":"\u4e00\u4efd\u66f4\u52a0\u4e13\u4e1a\u7684BPR\u5b66\u4e60\u8d44\u6599\u5728: \u5218\u5efa\u5e73-\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f(BPR)","title":"\u57fa\u4e8e\u77e9\u9635\u5206\u89e3\u7684BPR"},{"location":"ai/bpr/#_7","text":"\u6ce8\u610f: 1\uff09 \u6570\u636e\u96c6+\u7a0b\u5e8f\u4e0b\u8f7d \u3002 2\uff09\u7a0b\u5e8f\u6bcf\u6b21\u8fd0\u884c\u7ed3\u679c\u4e0d\u540c,\u4f46\u4e0a\u4e0b\u504f\u5dee\u4e0d\u5927\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 import random from collections import defaultdict import numpy as np from sklearn.metrics import roc_auc_score import scores class BPR : #\u7528\u6237\u6570 user_count = 943 #\u9879\u76ee\u6570 item_count = 1682 #k\u4e2a\u4e3b\u9898,k\u6570 latent_factors = 20 #\u6b65\u957f\u03b1 lr = 0.01 #\u53c2\u6570\u03bb reg = 0.01 #\u8bad\u7ec3\u6b21\u6570 train_count = 1000 #\u8bad\u7ec3\u96c6 train_data_path = 'train.txt' #\u6d4b\u8bd5\u96c6 test_data_path = 'test.txt' #U-I\u7684\u5927\u5c0f size_u_i = user_count * item_count # \u968f\u673a\u8bbe\u5b9a\u7684U\uff0cV\u77e9\u9635(\u5373\u516c\u5f0f\u4e2d\u7684Wuk\u548cHik)\u77e9\u9635 U = np . random . rand ( user_count , latent_factors ) * 0.01 #\u5927\u5c0f\u65e0\u6240\u8c13 V = np . random . rand ( item_count , latent_factors ) * 0.01 biasV = np . random . rand ( item_count ) * 0.01 #\u751f\u6210\u4e00\u4e2a\u7528\u6237\u6570*\u9879\u76ee\u6570\u5927\u5c0f\u7684\u51680\u77e9\u9635 test_data = np . zeros (( user_count , item_count )) #\u751f\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u51680\u77e9\u9635 test = np . zeros ( size_u_i ) #\u518d\u751f\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u51680\u77e9\u9635 predict_ = np . zeros ( size_u_i ) #\u83b7\u53d6U-I\u6570\u636e\u5bf9\u5e94 def load_data ( self , path ): user_ratings = defaultdict ( set ) with open ( path , 'r' ) as f : for line in f . readlines (): u , i = line . split ( \" \" ) u = int ( u ) i = int ( i ) user_ratings [ u ] . add ( i ) return user_ratings #\u83b7\u53d6\u6d4b\u8bd5\u96c6\u7684\u8bc4\u5206\u77e9\u9635 def load_test_data ( self , path ): file = open ( path , 'r' ) for line in file : line = line . split ( ' ' ) user = int ( line [ 0 ]) item = int ( line [ 1 ]) self . test_data [ user - 1 ][ item - 1 ] = 1 def train ( self , user_ratings_train ): for user in range ( self . user_count ): #\u968f\u673a\u83b7\u53d6\u4e00\u4e2a\u7528\u6237 u = random . randint ( 1 , self . user_count ) #\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u7528\u4e8e\u4e0d\u662f\u5168\u90fd\u4e00\u6837\u7684,\u6bd4\u5982train\u6709948,\u800ctest\u6700\u5927\u4e3a943 if u not in user_ratings_train . keys (): continue # \u4ece\u7528\u6237\u7684U-I\u4e2d\u968f\u673a\u9009\u53d61\u4e2aItem i = random . sample ( user_ratings_train [ u ], 1 )[ 0 ] # \u968f\u673a\u9009\u53d6\u4e00\u4e2a\u7528\u6237u\u6ca1\u6709\u8bc4\u5206\u7684\u9879\u76ee j = random . randint ( 1 , self . item_count ) while j in user_ratings_train [ u ]: j = random . randint ( 1 , self . item_count ) #python\u4e2d\u7684\u53d6\u503c\u4ece0\u5f00\u59cb u = u - 1 i = i - 1 j = j - 1 #BPR r_ui = np . dot ( self . U [ u ], self . V [ i ] . T ) + self . biasV [ i ] r_uj = np . dot ( self . U [ u ], self . V [ j ] . T ) + self . biasV [ j ] r_uij = r_ui - r_uj loss_func = - 1.0 / ( 1 + np . exp ( r_uij )) # \u66f4\u65b02\u4e2a\u77e9\u9635 self . U [ u ] += - self . lr * ( loss_func * ( self . V [ i ] - self . V [ j ]) + self . reg * self . U [ u ]) self . V [ i ] += - self . lr * ( loss_func * self . U [ u ] + self . reg * self . V [ i ]) self . V [ j ] += - self . lr * ( loss_func * ( - self . U [ u ]) + self . reg * self . V [ j ]) # \u66f4\u65b0\u504f\u7f6e\u9879 self . biasV [ i ] += - self . lr * ( loss_func + self . reg * self . biasV [ i ]) self . biasV [ j ] += - self . lr * ( - loss_func + self . reg * self . biasV [ j ]) def predict ( self , user , item ): predict = np . mat ( user ) * np . mat ( item . T ) return predict #\u4e3b\u51fd\u6570 def main ( self ): #\u83b7\u53d6U-I\u7684{1:{2,5,1,2}....}\u6570\u636e user_ratings_train = self . load_data ( self . train_data_path ) #\u83b7\u53d6\u6d4b\u8bd5\u96c6\u7684\u8bc4\u5206\u77e9\u9635 self . load_test_data ( self . test_data_path ) #\u5c06test_data\u77e9\u9635\u62cd\u5e73 for u in range ( self . user_count ): for item in range ( self . item_count ): if int ( self . test_data [ u ][ item ]) == 1 : self . test [ u * self . item_count + item ] = 1 else : self . test [ u * self . item_count + item ] = 0 #\u8bad\u7ec3 for i in range ( self . train_count ): self . train ( user_ratings_train ) #\u8bad\u7ec31000\u6b21\u5b8c\u6210 predict_matrix = self . predict ( self . U , self . V ) #\u5c06\u8bad\u7ec3\u5b8c\u6210\u7684\u77e9\u9635\u5167\u79ef # \u9884\u6d4b self . predict_ = predict_matrix . getA () . reshape ( - 1 ) #.getA()\u5c06\u81ea\u8eab\u77e9\u9635\u53d8\u91cf\u8f6c\u5316\u4e3andarray\u7c7b\u578b\u7684\u53d8\u91cf self . predict_ = pre_handel ( user_ratings_train , self . predict_ , self . item_count ) auc_score = roc_auc_score ( self . test , self . predict_ ) print ( 'AUC:' , auc_score ) # Top-K evaluation scores . topK_scores ( self . test , self . predict_ , 5 , self . user_count , self . item_count ) def pre_handel ( set , predict , item_count ): # Ensure the recommendation cannot be positive items in the training set. for u in set . keys (): for j in set [ u ]: predict [( u - 1 ) * item_count + j - 1 ] = 0 return predict if __name__ == '__main__' : #\u8c03\u7528\u7c7b\u7684\u4e3b\u51fd\u6570 bpr = BPR () bpr . main () \u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/dg/","text":"\u9012\u5f52\u795e\u7ecf\u7f51\u7edc \u00b6","title":"6. \u9012\u5f52\u795e\u7ecf\u7f51\u7edc"},{"location":"ai/dg/#_1","text":"","title":"\u9012\u5f52\u795e\u7ecf\u7f51\u7edc"},{"location":"ai/itemcf/","text":"\u57fa\u4e8e\u9879\u76ee\u7684\u534f\u540c\u8fc7\u6ee4 \u00b6 \u4ecb\u7ecd \u00b6 \u57fa\u4e8e\u7269\u54c1\u7684 CF \u7684\u539f\u7406\u548c\u57fa\u4e8e\u7528\u6237\u7684 CF \u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u8ba1\u7b97\u90bb\u5c45\u65f6\u91c7\u7528\u7269\u54c1\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u4ece\u7528\u6237\u7684\u89d2\u5ea6\uff0c\u5373\u57fa\u4e8e\u7528\u6237\u5bf9\u7269\u54c1\u7684\u504f\u597d\u627e\u5230\u76f8\u4f3c\u7684\u7269\u54c1\uff0c\u7136\u540e\u6839\u636e\u7528\u6237\u7684\u5386\u53f2\u504f\u597d\uff0c\u63a8\u8350\u76f8\u4f3c\u7684\u7269\u54c1\u7ed9\u4ed6\u3002\u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6\u770b\uff0c\u5c31\u662f\u5c06\u6240\u6709\u7528\u6237\u5bf9\u67d0\u4e2a\u7269\u54c1\u7684\u504f\u597d\u4f5c\u4e3a\u4e00\u4e2a\u5411\u91cf\u6765\u8ba1\u7b97\u7269\u54c1\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u5f97\u5230\u7269\u54c1\u7684\u76f8\u4f3c\u7269\u54c1\u540e\uff0c\u6839\u636e\u7528\u6237\u5386\u53f2\u7684\u504f\u597d\u9884\u6d4b\u5f53\u524d\u7528\u6237\u8fd8\u6ca1\u6709\u8868\u793a\u504f\u597d\u7684\u7269\u54c1\uff0c\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u6392\u5e8f\u7684\u7269\u54c1\u5217\u8868\u4f5c\u4e3a\u63a8\u8350\u3002\u4e0b\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u7269\u54c1 A\uff0c\u6839\u636e\u6240\u6709\u7528\u6237\u7684\u5386\u53f2\u504f\u597d\uff0c\u559c\u6b22\u7269\u54c1 A \u7684\u7528\u6237\u90fd\u559c\u6b22\u7269\u54c1 C\uff0c\u5f97\u51fa\u7269\u54c1 A \u548c\u7269\u54c1 C \u6bd4\u8f83\u76f8\u4f3c\uff0c\u800c\u7528\u6237 C \u559c\u6b22\u7269\u54c1 A\uff0c\u90a3\u4e48\u53ef\u4ee5\u63a8\u65ad\u51fa\u7528\u6237 C \u53ef\u80fd\u4e5f\u559c\u6b22\u7269\u54c1 C\u3002 \u63a8\u5bfc \u00b6 1\uff09(\u5efa\u7acb\u7528\u6237-\u7269\u54c1\u5012\u6392\u8868) 2\uff09\u5efa\u7acb\u7269\u54c1-\u7269\u54c1\u7684\u7a00\u758f\u77e9\u9635(\u5171\u73b0\u77e9\u9635) 3\uff09\u76f8\u4f3c\u77e9\u9635 4\uff09\u63a8\u8350 \u5b9e\u4f8b\u63a8\u5bfc: \u4ee3\u7801\u5b9e\u73b0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 from math import sqrt import operator import numpy as np #1.\u6784\u5efa\u7528\u6237-->\u7269\u54c1\u5012\u6392 def LoadData ( basis_data ): data = {} for line in basis_data : user , score , item = line . split ( \",\" ) data . setdefault ( user ,{}) data [ user ][ item ] = score print ( \"\u7269\u54c1\u5012\u6392: \\n \" , data ) return data #2.\u6784\u5efa\u7269\u54c1\u4e0e\u7269\u54c1\u7684\u5171(\u540c)\u73b0\u77e9\u9635 def similarity ( one_data ): #\u6784\u9020\u7269\u54c1\u7684\u5171\u73b0\u77e9\u9635 N = {} #\u559c\u6b22\u7269\u54c1i\u7684\u603b\u4eba\u6570 C = {} #\u559c\u6b22\u7269\u54c1i\u4e5f\u559c\u6b22\u7269\u54c1j\u7684\u4eba\u6570 for user , item in one_data . items (): for i , score in item . items (): N . setdefault ( i , 0 ) N [ i ] += 1 C . setdefault ( i ,{}) for j , scores in item . items (): if j not in i : C [ i ] . setdefault ( j , 0 ) C [ i ][ j ] += 1 print ( \"\u6784\u9020\u7684\u5171\u73b0\u77e9\u9635\u4e3a: \\n {} \\n {}\" . format ( N , C )) #\u8ba1\u7b97\u7269\u54c1\u4e0e\u7269\u54c1\u7684\u76f8\u4f3c\u77e9\u9635 W = {} for i , item in C . items (): W . setdefault ( i ,{}) for j , item2 in item . items (): W [ i ] . setdefault ( j , 0 ) W [ i ][ j ] = C [ i ][ j ] / sqrt ( N [ i ] * N [ j ]) print ( \"\u6784\u9020\u7684\u76f8\u4f3c\u77e9\u9635\u4e3a: \\n \" , W ) return W #3.\u6839\u636e\u7528\u6237\u7684\u5386\u53f2\u8bb0\u5f55,\u7ed9\u7528\u6237\u63a8\u8350\u7269\u54c1 def recommandList ( data , W , user , k , N ): rank = {}; for i , score in data [ user ] . items (): #\u83b7\u5f97\u7528\u6237user\u5386\u53f2\u8bb0\u5f55\uff0c\u5982A\u7528\u6237\u7684\u5386\u53f2\u8bb0\u5f55\u4e3a{'a': '1', 'b': '1', 'd': '1'} for j , w in sorted ( W [ i ] . items (), key = operator . itemgetter ( 1 ), reverse = True )[ 0 : k ]: #\u83b7\u5f97\u4e0e\u7269\u54c1i\u76f8\u4f3c\u7684k\u4e2a\u7269\u54c1 if j not in data [ user ] . keys (): #\u8be5\u76f8\u4f3c\u7684\u7269\u54c1\u4e0d\u5728\u7528\u6237user\u7684\u8bb0\u5f55\u91cc rank . setdefault ( j , 0 ) rank [ j ] += float ( score ) * w sort_data = sorted ( rank . items (), key = operator . itemgetter ( 1 ), reverse = True )[ 0 : N ] print ( \"\u63a8\u8350\u4e3a: \\n \" , sort_data ) return sort_data #\u4e3b\u51fd\u6570 if __name__ == '__main__' : #A\u6b7b\u4f8d B\u94a2\u94c1\u4fa0 C\u7f8e\u56fd\u961f\u957f D\u9ed1\u8c79 E\u8718\u86db\u4fa0 #1\u4ee3\u8868\u559c\u6b22 user_item_data = [ 'A,1,a' , 'A,1,b' , 'A,1,d' , 'B,1,b' , 'B,1,c' , 'B,1,e' , 'C,1,c' , 'C,1,d' , 'D,1,b' , 'D,1,c' , 'D,1,d' , 'E,1,a' , 'E,1,d' ] data = LoadData ( user_item_data ) W = similarity ( data ) #\u4e3a\u7528\u6237A\u63a8\u83502\u90e8\u7535\u5f71 recommandList ( data , W , \"A\" , 3 , 2 ) \u57fa\u4e8e\u9879\u76ee\u7684\u534f\u540c\u8fc7\u6ee4\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"5. \u57fa\u4e8e\u9879\u76ee\u7684\u534f\u540c\u8fc7\u6ee4"},{"location":"ai/itemcf/#_1","text":"","title":"\u57fa\u4e8e\u9879\u76ee\u7684\u534f\u540c\u8fc7\u6ee4"},{"location":"ai/itemcf/#_2","text":"\u57fa\u4e8e\u7269\u54c1\u7684 CF \u7684\u539f\u7406\u548c\u57fa\u4e8e\u7528\u6237\u7684 CF \u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u8ba1\u7b97\u90bb\u5c45\u65f6\u91c7\u7528\u7269\u54c1\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u4ece\u7528\u6237\u7684\u89d2\u5ea6\uff0c\u5373\u57fa\u4e8e\u7528\u6237\u5bf9\u7269\u54c1\u7684\u504f\u597d\u627e\u5230\u76f8\u4f3c\u7684\u7269\u54c1\uff0c\u7136\u540e\u6839\u636e\u7528\u6237\u7684\u5386\u53f2\u504f\u597d\uff0c\u63a8\u8350\u76f8\u4f3c\u7684\u7269\u54c1\u7ed9\u4ed6\u3002\u4ece\u8ba1\u7b97\u7684\u89d2\u5ea6\u770b\uff0c\u5c31\u662f\u5c06\u6240\u6709\u7528\u6237\u5bf9\u67d0\u4e2a\u7269\u54c1\u7684\u504f\u597d\u4f5c\u4e3a\u4e00\u4e2a\u5411\u91cf\u6765\u8ba1\u7b97\u7269\u54c1\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u5f97\u5230\u7269\u54c1\u7684\u76f8\u4f3c\u7269\u54c1\u540e\uff0c\u6839\u636e\u7528\u6237\u5386\u53f2\u7684\u504f\u597d\u9884\u6d4b\u5f53\u524d\u7528\u6237\u8fd8\u6ca1\u6709\u8868\u793a\u504f\u597d\u7684\u7269\u54c1\uff0c\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u6392\u5e8f\u7684\u7269\u54c1\u5217\u8868\u4f5c\u4e3a\u63a8\u8350\u3002\u4e0b\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u7269\u54c1 A\uff0c\u6839\u636e\u6240\u6709\u7528\u6237\u7684\u5386\u53f2\u504f\u597d\uff0c\u559c\u6b22\u7269\u54c1 A \u7684\u7528\u6237\u90fd\u559c\u6b22\u7269\u54c1 C\uff0c\u5f97\u51fa\u7269\u54c1 A \u548c\u7269\u54c1 C \u6bd4\u8f83\u76f8\u4f3c\uff0c\u800c\u7528\u6237 C \u559c\u6b22\u7269\u54c1 A\uff0c\u90a3\u4e48\u53ef\u4ee5\u63a8\u65ad\u51fa\u7528\u6237 C \u53ef\u80fd\u4e5f\u559c\u6b22\u7269\u54c1 C\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/itemcf/#_3","text":"1\uff09(\u5efa\u7acb\u7528\u6237-\u7269\u54c1\u5012\u6392\u8868) 2\uff09\u5efa\u7acb\u7269\u54c1-\u7269\u54c1\u7684\u7a00\u758f\u77e9\u9635(\u5171\u73b0\u77e9\u9635) 3\uff09\u76f8\u4f3c\u77e9\u9635 4\uff09\u63a8\u8350 \u5b9e\u4f8b\u63a8\u5bfc:","title":"\u63a8\u5bfc"},{"location":"ai/itemcf/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 from math import sqrt import operator import numpy as np #1.\u6784\u5efa\u7528\u6237-->\u7269\u54c1\u5012\u6392 def LoadData ( basis_data ): data = {} for line in basis_data : user , score , item = line . split ( \",\" ) data . setdefault ( user ,{}) data [ user ][ item ] = score print ( \"\u7269\u54c1\u5012\u6392: \\n \" , data ) return data #2.\u6784\u5efa\u7269\u54c1\u4e0e\u7269\u54c1\u7684\u5171(\u540c)\u73b0\u77e9\u9635 def similarity ( one_data ): #\u6784\u9020\u7269\u54c1\u7684\u5171\u73b0\u77e9\u9635 N = {} #\u559c\u6b22\u7269\u54c1i\u7684\u603b\u4eba\u6570 C = {} #\u559c\u6b22\u7269\u54c1i\u4e5f\u559c\u6b22\u7269\u54c1j\u7684\u4eba\u6570 for user , item in one_data . items (): for i , score in item . items (): N . setdefault ( i , 0 ) N [ i ] += 1 C . setdefault ( i ,{}) for j , scores in item . items (): if j not in i : C [ i ] . setdefault ( j , 0 ) C [ i ][ j ] += 1 print ( \"\u6784\u9020\u7684\u5171\u73b0\u77e9\u9635\u4e3a: \\n {} \\n {}\" . format ( N , C )) #\u8ba1\u7b97\u7269\u54c1\u4e0e\u7269\u54c1\u7684\u76f8\u4f3c\u77e9\u9635 W = {} for i , item in C . items (): W . setdefault ( i ,{}) for j , item2 in item . items (): W [ i ] . setdefault ( j , 0 ) W [ i ][ j ] = C [ i ][ j ] / sqrt ( N [ i ] * N [ j ]) print ( \"\u6784\u9020\u7684\u76f8\u4f3c\u77e9\u9635\u4e3a: \\n \" , W ) return W #3.\u6839\u636e\u7528\u6237\u7684\u5386\u53f2\u8bb0\u5f55,\u7ed9\u7528\u6237\u63a8\u8350\u7269\u54c1 def recommandList ( data , W , user , k , N ): rank = {}; for i , score in data [ user ] . items (): #\u83b7\u5f97\u7528\u6237user\u5386\u53f2\u8bb0\u5f55\uff0c\u5982A\u7528\u6237\u7684\u5386\u53f2\u8bb0\u5f55\u4e3a{'a': '1', 'b': '1', 'd': '1'} for j , w in sorted ( W [ i ] . items (), key = operator . itemgetter ( 1 ), reverse = True )[ 0 : k ]: #\u83b7\u5f97\u4e0e\u7269\u54c1i\u76f8\u4f3c\u7684k\u4e2a\u7269\u54c1 if j not in data [ user ] . keys (): #\u8be5\u76f8\u4f3c\u7684\u7269\u54c1\u4e0d\u5728\u7528\u6237user\u7684\u8bb0\u5f55\u91cc rank . setdefault ( j , 0 ) rank [ j ] += float ( score ) * w sort_data = sorted ( rank . items (), key = operator . itemgetter ( 1 ), reverse = True )[ 0 : N ] print ( \"\u63a8\u8350\u4e3a: \\n \" , sort_data ) return sort_data #\u4e3b\u51fd\u6570 if __name__ == '__main__' : #A\u6b7b\u4f8d B\u94a2\u94c1\u4fa0 C\u7f8e\u56fd\u961f\u957f D\u9ed1\u8c79 E\u8718\u86db\u4fa0 #1\u4ee3\u8868\u559c\u6b22 user_item_data = [ 'A,1,a' , 'A,1,b' , 'A,1,d' , 'B,1,b' , 'B,1,c' , 'B,1,e' , 'C,1,c' , 'C,1,d' , 'D,1,b' , 'D,1,c' , 'D,1,d' , 'E,1,a' , 'E,1,d' ] data = LoadData ( user_item_data ) W = similarity ( data ) #\u4e3a\u7528\u6237A\u63a8\u83502\u90e8\u7535\u5f71 recommandList ( data , W , \"A\" , 3 , 2 ) \u57fa\u4e8e\u9879\u76ee\u7684\u534f\u540c\u8fc7\u6ee4\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/jcs/","text":"\u51b3\u7b56\u6811\u6982\u8ff0 \u00b6 \u4ecb\u7ecd \u00b6 \u51b3\u7b56\u6811(\u5224\u5b9a\u6811)\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u5b83\u7684\u601d\u60f3\u5341\u5206\u6734\u7d20\uff0c\u7c7b\u4f3c\u4e8e\u6211\u4eec\u5e73\u65f6\u5229\u7528\u9009\u62e9\u505a\u51b3\u7b56\u7684\u8fc7\u7a0b\uff0c\u4e5f\u7c7b\u4f3c\u4e8e\u95ee\u7b54\u731c\u6d4b\u7ed3\u679c\u6e38\u620f\uff0c\u6839\u636e\u4e00\u7cfb\u5217\u6570\u636e\uff0c\u7136\u540e\u7ed9\u51fa\u6e38\u620f\u7684\u7b54\u6848\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u76ee\u6807\uff1a\u6839\u636e\u7ed9\u5b9a\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u6784\u5efa\u4e00\u4e2a\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u4f7f\u5b83\u80fd\u591f\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u6b63\u786e\u7684\u5206\u7c7b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u672c\u8d28\uff1a\u4ece\u8bad\u7ec3\u96c6\u4e2d\u5f52\u7eb3\u51fa\u4e00\u7ec4\u5206\u7c7b\u89c4\u5219\uff0c\u6216\u8005\u8bf4\u662f\u7531\u8bad\u7ec3\u6570\u636e\u96c6\u4f30\u8ba1\u6761\u4ef6\u6982\u7387\u6a21\u578b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u635f\u5931\u51fd\u6570\uff1a\u6b63\u5219\u5316\u7684\u6781\u5927\u4f3c\u7136\u51fd\u6570\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u6d4b\u8bd5\uff1a\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u76ee\u6807\uff1a\u5728\u635f\u5931\u51fd\u6570\u7684\u610f\u4e49\u4e0b\uff0c\u9009\u62e9\u6700\u4f18\u51b3\u7b56\u6811\u7684\u95ee\u9898\u3002 \u51b3\u7b56\u6811\u7b56\u7565\uff1a\u81ea\u4e0a\u5411\u4e0b\uff0c\u5206\u800c\u6cbb\u4e4b\u3002 \u51b3\u7b56\u6811\u79cd\u7c7b\uff1a(1)\u5206\u7c7b\u6811--\u5bf9\u79bb\u6563\u53d8\u91cf\u505a\u51b3\u7b56\u6811; (2)\u56de\u5f52\u6811--\u5bf9\u8fde\u7eed\u53d8\u91cf\u505a\u51b3\u7b56\u6811 \u57fa\u672c\u7ed3\u6784\u548c\u6982\u5ff5 \u00b6 \u57fa\u672c\u7ed3\u6784 \u00b6 \u4e00\u822c\u7531\u6839\u8282\u70b9\u3001\u7236\u8282\u70b9\u3001\u5b50\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u6784\u6210\u3002 1)\u5b50\u8282\u70b9\u7531\u7236\u8282\u70b9\u6839\u636e\u67d0\u4e00\u89c4\u5219\u5206\u88c2\u800c\u6765\uff0c\u7136\u540e\u5b50\u8282\u70b9\u4f5c\u4e3a\u65b0\u7684\u7236\u4eb2\u8282\u70b9\u7ee7\u7eed\u5206\u88c2\uff0c\u76f4\u81f3\u4e0d\u80fd\u5206\u88c2\u4e3a\u6b62; 2)\u6839\u8282\u70b9\u662f\u6ca1\u6709\u7236\u8282\u70b9\u7684\u8282\u70b9\uff0c\u5373\u521d\u59cb\u5206\u88c2\u8282\u70b9; 3)\u53f6\u5b50\u8282\u70b9\u662f\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002 \u5176\u4ed6\u6982\u5ff5 \u00b6 \uff081\uff09\u6839\u7ed3\u70b9(Root Node)\uff1a\u5b83\u8868\u793a\u6574\u4e2a\u6837\u672c\u96c6\u5408\uff0c\u5e76\u4e14\u8be5\u8282\u70b9\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5212\u5206\u6210\u4e24\u4e2a\u6216\u591a\u4e2a\u5b50\u96c6\u3002 \uff082\uff09\u62c6\u5206(Splitting)\uff1a\u8868\u793a\u5c06\u4e00\u4e2a\u7ed3\u70b9\u62c6\u5206\u6210\u591a\u4e2a\u5b50\u96c6\u7684\u8fc7\u7a0b\u3002 \uff083\uff09\u51b3\u7b56\u7ed3\u70b9(Decision Node)\uff1a\u5f53\u4e00\u4e2a\u5b50\u7ed3\u70b9\u8fdb\u4e00\u6b65\u88ab\u62c6\u5206\u6210\u591a\u4e2a\u5b50\u8282\u70b9\u65f6\uff0c\u8fd9\u4e2a\u5b50\u8282\u70b9\u5c31\u53eb\u505a\u51b3\u7b56\u7ed3\u70b9\u3002 \uff084\uff09\u53f6\u5b50\u7ed3\u70b9(Leaf/Terminal Node)\uff1a\u65e0\u6cd5\u518d\u62c6\u5206\u7684\u7ed3\u70b9\u88ab\u79f0\u4e3a\u53f6\u5b50\u7ed3\u70b9\u3002 \uff085\uff09\u526a\u679d(Pruning)\uff1a\u79fb\u9664\u51b3\u7b56\u6811\u4e2d\u5b50\u7ed3\u70b9\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u526a\u679d\uff0c\u8ddf\u62c6\u5206\u8fc7\u7a0b\u76f8\u53cd\u3002 \uff086\uff09\u5206\u652f/\u5b50\u6811(Branch/Sub-Tree)\uff1a\u4e00\u68f5\u51b3\u7b56\u6811\u7684\u4e00\u90e8\u5206\u5c31\u53eb\u505a\u5206\u652f\u6216\u5b50\u6811\u3002 \uff087\uff09\u7236\u7ed3\u70b9\u548c\u5b50\u7ed3\u70b9(Paren and Child Node)\uff1a\u4e00\u4e2a\u7ed3\u70b9\u88ab\u62c6\u5206\u6210\u591a\u4e2a\u5b50\u8282\u70b9\uff0c\u8fd9\u4e2a\u7ed3\u70b9\u5c31\u53eb\u505a\u7236\u8282\u70b9\uff1b\u5176\u62c6\u5206\u540e\u7684\u5b50\u7ed3\u70b9\u4e5f\u53eb\u505a\u5b50\u7ed3\u70b9\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u00b6 \u6b65\u9aa41\uff1a\u5c06\u6240\u6709\u7684\u6570\u636e\u770b\u6210\u662f\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\uff0c\u8fdb\u5165\u6b65\u9aa42\uff1b \u6b65\u9aa42\uff1a\u6839\u636e\u5212\u5206\u51c6\u5219\uff0c\u4ece\u6240\u6709\u5c5e\u6027\u4e2d\u6311\u9009\u4e00\u4e2a\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u5272\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b \u6b65\u9aa43\uff1a\u751f\u6210\u82e5\u5e72\u4e2a\u5b50\u8282\u70b9\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u6ee1\u8db3\u505c\u6b62\u5206\u88c2\u7684\u6761\u4ef6\uff0c\u8fdb\u5165\u6b65\u9aa44\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa42\uff1b \u6b65\u9aa44\uff1a\u8bbe\u7f6e\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a\u8be5\u8282\u70b9\u6570\u91cf\u5360\u6bd4\u6700\u5927\u7684\u7c7b\u522b\u3002 \u6ce8\uff1a\u5728\u51b3\u7b56\u6811\u57fa\u672c\u7b97\u6cd5\u4e2d\uff0c\u6709\u4e09\u79cd\u60c5\u5f62\u4f1a\u5bfc\u81f4\u9012\u5f52\u8fd4\u56de: 1 2 3 4 5 1) \u5f53\u524d\u7ed3\u70b9\u5305\u542b\u7684\u6837\u672c\u5168\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\uff0c\u65e0\u9700\u5212\u5206; 2) \u5f53\u524d\u5c5e\u6027\u96c6\u4e3a\u7a7a\uff0c\u6216\u662f\u6240\u6709\u6837\u672c\u5728\u6240\u6709\u5c5e\u6027\u4e0a\u53d6\u503c\u76f8\u540c\uff0c\u65e0\u6cd5\u5212\u5206; 3) \u5f53\u524d\u7ed3\u70b9\u5305\u542b\u7684\u6837\u672c\u96c6\u5408\u4e3a\u7a7a\uff0c\u4e0d\u80fd\u5212\u5206\u3002 \u6784\u9020\u6811\u8fc7\u7a0b\u5904\u7406 \u00b6 \u51b3\u7b56\u6811\u7684\u6784\u9020\u8fc7\u7a0b\u4e00\u822c\u5206\u4e3a3\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u662f\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u751f\u4ea7\u548c\u51b3\u7b56\u6811\u88c1\u526a\u3002 \uff081\uff09\u7279\u5f81\u9009\u62e9\uff1a \u7279\u5f81\u9009\u62e9\u8868\u793a\u4ece\u4f17\u591a\u7684\u7279\u5f81\u4e2d\u9009\u62e9\u4e00\u4e2a\u7279\u5f81\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u5206\u88c2\u7684\u6807\u51c6\uff0c\u5982\u4f55\u9009\u62e9\u7279\u5f81\u6709\u4e0d\u540c\u7684\u91cf\u5316 \u8bc4\u4f30\u65b9\u6cd5 \uff0c\u4ece\u800c\u884d\u751f\u51fa\u4e0d\u540c\u7684\u51b3\u7b56\u6811\u3002 \u76ee\u7684\uff08\u51c6\u5219\uff09\uff1a\u4f7f\u7528\u67d0\u7279\u5f81\u5bf9\u6570\u636e\u96c6\u5212\u5206\u4e4b\u540e\uff0c\u5404\u6570\u636e\u5b50\u96c6\u7684\u7eaf\u5ea6\u8981\u6bd4\u5212\u5206\u94b1\u7684\u6570\u636e\u96c6D\u7684\u7eaf\u5ea6\u9ad8\uff08\u4e5f\u5c31\u662f\u4e0d\u786e\u5b9a\u6027\u8981\u6bd4\u5212\u5206\u524d\u6570\u636e\u96c6D\u7684\u4e0d\u786e\u5b9a\u6027\u4f4e\uff09 \uff082\uff09\u51b3\u7b56\u6811\u7684\u751f\u6210 \u6839\u636e\u9009\u62e9\u7684\u7279\u5f81\u8bc4\u4f30\u6807\u51c6\uff0c\u4ece\u4e0a\u81f3\u4e0b\u9012\u5f52\u5730\u751f\u6210\u5b50\u8282\u70b9\uff0c\u76f4\u5230\u6570\u636e\u96c6\u4e0d\u53ef\u5206\u5219\u505c\u6b62\u51b3\u7b56\u6811\u505c\u6b62\u751f\u957f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5c31\u662f\u4f7f\u7528\u6ee1\u8db3\u5212\u5206\u51c6\u5219\u7684\u7279\u5f81\u4e0d\u65ad\u7684\u5c06\u6570\u636e\u96c6\u5212\u5206\u6210\u7eaf\u5ea6\u66f4\u9ad8\uff0c\u4e0d\u786e\u5b9a\u884c\u66f4\u5c0f\u7684\u5b50\u96c6\u7684\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u5f53\u524d\u6570\u636e\u96c6\u7684\u6bcf\u4e00\u6b21\u5212\u5206\uff0c\u90fd\u5e0c\u671b\u6839\u636e\u67d0\u4e2a\u7279\u5f81\u5212\u5206\u4e4b\u540e\u7684\u5404\u4e2a\u5b50\u96c6\u7684\u7eaf\u5ea6\u66f4\u9ad8\uff0c\u4e0d\u786e\u5b9a\u6027\u66f4\u5c0f\u3002 \uff083\uff09\u51b3\u7b56\u6811\u7684\u88c1\u526a \u51b3\u7b56\u6811\u5bb9\u6613\u8fc7\u62df\u5408 \uff0c\u4e00\u822c\u9700\u8981 \u526a\u679d \u6765\u7f29\u5c0f\u6811\u7ed3\u6784\u89c4\u6a21\u3001\u7f13\u89e3\u8fc7\u62df\u5408\u3002 \u7279\u5f81\u8bc4\u4f30\u65b9\u6cd5/\u5212\u5206\u51c6\u5219 \u00b6 \u4e00\u822c\u800c\u8a00\uff0c\u968f\u7740\u5212\u5206\u8fc7\u7a0b\u4e0d\u65ad\u8fdb\u884c\uff0c\u6211\u4eec\u5e0c\u671b\u51b3\u7b56\u6811\u7684\u5206\u652f\u7ed3\u70b9\u6240\u5305\u542b\u7684\u6837\u672c\u5c3d\u53ef\u80fd\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\uff0c\u5373\u7ed3\u70b9\u7684\"\u7eaf\u5ea6\"\u8d8a\u6765\u8d8a\u9ad8\u3002\u5176\u4e2d\u6700\u5e38\u7528\u7684\u4e09\u79cd\u51c6\u5219: \u4fe1\u606f\u589e\u76ca\u51c6\u5219(ID3) \u4fe1\u606f\u589e\u76ca\u7387\u51c6\u5219(C4.5) \u57fa\u5c3c\u6307\u6570\u51c6\u5219(CART) \u526a\u679d\u5904\u7406 \u00b6 \u526a\u679d\u662f\u51b3\u7b56\u6811\u5b66\u4e60\u7b97\u6cd5\u5bf9\u4ed8 \u8fc7\u62df\u5408 \u7684\u4e3b\u8981\u624b\u6bb5\u3002 \u8fc7\u62df\u5408\u539f\u56e0\uff1a 1\uff09\u566a\u58f0\u5bfc\u81f4\u7684\u8fc7\u62df\u5408\uff1a\u62df\u5408\u4e86\u88ab\u8bef\u6807\u8bb0\u7684\u6837\u4f8b\uff0c\u5bfc\u81f4\u8bef\u5206\u7c7b\u3002 2\uff09\u7f3a\u4e4f\u4ee3\u8868\u6027\u6837\u672c\u5bfc\u81f4\u7684\u8fc7\u62df\u5408\uff1a\u7f3a\u4e4f\u4ee3\u8868\u6027\u6837\u672c\u7684\u5c11\u91cf\u8bad\u7ec3\u96c6\u4f5c\u51fa\u7684\u51b3\u7b56\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u3002 3\uff09\u591a\u91cd\u6bd4\u8f83\u9020\u6210\u7684\u8fc7\u62df\u5408\uff1a\u590d\u6742\u6a21\u578b\u3002 \u57fa\u672c\u7b56\u7565\u6709\"\u9884\u526a\u679d\" \u548c\"\u540e\u526a\u679d\"\uff1b \u9884\u526a\u679d\u662f\u6307\u5728\u51b3\u7b56\u6811\u751f\u6210\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u5728\u5212\u5206\u524d\u5148\u8fdb\u884c\u4f30\u8ba1\uff0c\u82e5\u5f53\u524d\u7ed3\u70b9\u7684\u5212\u5206\u4e0d\u80fd\u5e26\u6765\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u63d0\u5347\uff0c\u5219\u505c\u6b62\u5212\u5206\u5e76\u5c06\u5f53\u524d\u7ed3\u70b9\u6807\u8bb0\u4e3a\u53f6\u7ed3\u70b9\uff1b \u540e\u526a\u679d\u5219\u662f\u5148\u4ece\u8bad\u7ec3\u96c6\u751f\u6210\u4e00\u68f5\u5b8c\u6574\u7684\u51b3\u7b56\u6811\uff0c\u7136\u540e\u81ea\u5e95\u5411\u4e0a\u5730\u5bf9\u975e\u53f6\u7ed3\u70b9\u8fdb\u884c\u8003\u5bdf\uff0c\u82e5\u5c06\u8be5\u7ed3\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u66ff\u6362\u4e3a\u53f6\u7ed3\u70b9\u80fd\u5e26\u6765\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u63d0\u5347\uff0c\u5219\u5c06\u8be5\u5b50\u6811\u66ff\u6362\u4e3a\u53f6\u7ed3\u70b9\u3002 \u5224\u65ad\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u662f\u5426\u63d0\u5347\uff1a \u7559\u51fa\u6cd5 \uff0c\u5373\u9884\u7559\u4e00\u90e8\u5206\u6570\u636e\u7528\u4f5c\"\u9a8c\u8bc1\u96c6\"\u4ee5\u8fdb\u884c\u6027\u80fd\u8bc4\u4f30\u3002 \u4f8b\u5982\uff1a\u5728\u9884\u526a\u679d\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u88c2\u8282\u70b9\uff0c\u5bf9\u6bd4\u5206\u88c2\u524d\u540e\u51b3\u7b56\u6811\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u9884\u6d4b\u7cbe\u5ea6\uff0c\u4ece\u800c\u51b3\u5b9a\u662f\u5426\u5206\u88c2\u8be5\u8282\u70b9\u3002\u800c\u5728\u540e\u526a\u679d\u4e2d\uff0c\u8003\u5bdf\u975e\u53f6\u8282\u70b9\uff0c\u5bf9\u6bd4\u526a\u679d\u524d\u540e\u51b3\u7b56\u6811\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u9884\u6d4b\u7cbe\u5ea6\uff0c\u4ece\u800c\u51b3\u5b9a\u662f\u5426\u5bf9\u5176\u526a\u679d\u3002 \u4e24\u79cd\u65b9\u6cd5\u5bf9\u6bd4\uff1a 1\uff09\u9884\u526a\u679d\u4f7f\u5f97\u51b3\u7b56\u6811\u7684\u5f88\u591a\u5206\u652f\u90fd\u6ca1\u6709\"\u5c55\u5f00\u201d\uff0c\u4e0d\u4ec5\u964d\u4f4e\u8fc7\u62df\u5408\u98ce\u9669\uff0c\u800c\u4e14\u663e\u8457\u51cf\u5c11\u8bad\u7ec3/\u6d4b\u8bd5\u65f6\u95f4\u5f00\u9500\uff1b\u4f46\uff0c\u6709\u4e9b\u5206\u652f\u7684\u5f53\u524d\u5212\u5206\u867d\u4e0d\u80fd\u63d0\u5347\u6cdb\u5316\u6027\u80fd\uff0c\u4f46\u5728\u5176\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\u540e\u7eed\u5212\u5206\u5374\u6709\u53ef\u80fd\u5bfc\u81f4\u6027\u80fd\u663e\u8457\u63d0\u9ad8\uff0c\u5373\u9884\u526a\u679d\u57fa\u4e8e\"\u8d2a\u5fc3\"\u672c\u8d28\u7981\u6b62\u8fd9\u4e9b\u5206\u652f\u5c55\u5f00\uff0c\u7ed9\u9884\u526a\u679d\u51b3\u7b56\u6811\u5e26\u6765\u4e86\u6b20\u62df\u542b\u7684\u98ce\u9669\u3002 2\uff09\u540e\u526a\u679d\u51b3\u7b56\u6811\u901a\u5e38\u6bd4\u9884\u526a\u679d\u51b3\u7b56\u6811\u4fdd\u7559\u4e86\u66f4\u591a\u7684\u5206\u652f\u3002\u4e00\u822c\u60c5\u5f62\u4e0b\uff0c\u540e\u526a\u679d\u51b3\u7b56\u6811\u7684\u6b20\u62df\u5408\u98ce\u9669\u5f88\u5c0f\uff0c\u6cdb\u5316\u6027\u80fd\u5f80\u5f80\u4f18\u4e8e\u9884\u526a\u679d\u51b3\u7b56\u6811\uff0c\u4f46\u540e\u526a\u679d\u8fc7\u7a0b\u662f\u5728\u751f\u6210\u5b8c\u5168\u51b3\u7b56\u6811\u4e4b\u540e\u8fdb\u884c\u7684\uff0c\u5e76\u4e14\u8981\u81ea\u5e95\u5411\u4e0a\u5730\u5bf9\u6811\u4e2d\u7684\u6240\u6709\u975e\u53f6\u7ed3\u70b9\u8fdb\u884c\u9010\u4e00\u8003\u5bdf\uff0c\u56e0\u6b64\u5176\u8bad\u7ec3\u65f6\u95f4\u5f00\u9500\u6bd4\u672a\u526a\u679d\u51b3\u7b56\u6811\u548c\u9884\u526a\u679d\u51b3\u7b56\u6811\u90fd\u8981\u5927\u5f97\u591a\u3002 \u7279\u6b8a\u503c\u5904\u7406 \u00b6 \u4ee5\u4e0a\u90fd\u662f\u57fa\u4e8e \u79bb\u6563\u5c5e\u6027 \u8fdb\u884c\u8ba8\u8bba\uff0c\u800c \u8fde\u7eed\u5c5e\u6027 \u7684\u53ef\u53d6\u503c\u6570\u76ee\u4e0d\u518d\u6709\u9650\uff0c \u56e0\u6b64\uff0c\u4e0d\u80fd\u76f4\u63a5\u6839\u636e\u8fde\u7eed\u5c5e\u6027\u7684\u53ef\u53d6\u503c\u6765\u5bf9\u7ed3\u70b9\u8fdb\u884c\u5212\u5206\u3002\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u8fde\u7eed\u5c5e\u6027\u79bb\u6563\u5316\uff0c\u6700\u7b80\u5355\u7684\u7b56\u7565\u662f\u91c7\u7528\u4e8c\u5206\u6cd5\u5bf9\u8fde\u7eed\u5c5e\u6027\u8fdb\u884c\u5904\u7406\uff08C4.5\uff09 \u6cdb\u5316\u8bef\u5dee\u4f30\u8ba1 \u00b6 \u518d\u4ee3\u5165\u4f30\u8ba1 \u518d\u4ee3\u5165\u4f30\u8ba1\u65b9\u6cd5\u5047\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u53ef\u4ee5\u5f88\u597d\u5730\u4ee3\u8868\u6574\u4f53\u6570\u636e\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bad\u7ec3\u8bef\u5dee\uff08\u518d\u4ee3\u5165\u8bef\u5dee\uff09\u63d0\u4f9b\u5bf9\u6cdb\u5316\u8bef\u5dee\u7684\u4e50\u89c2\u4f30\u8ba1\u3002\u6b64\u60c5\u5f62\u4e0b\uff0c\u51b3\u7b56\u6811\u7b97\u6cd5\u5c06\u7b80\u5355\u5730\u9009\u62e9\u4ea7\u751f\u6700\u4f4e\u8bad\u7ec3\u8bef\u5dee\u7684\u6a21\u578b\u4f5c\u4e3a\u6700\u7ec8\u7684\u6a21\u578b\uff0c\u5c3d\u7ba1\uff0c\u4f7f\u7528\u8bad\u7ec3\u8bef\u5dee\u901a\u5e38\u662f\u6cdb\u5316\u8bef\u5dee\u7684\u4e00\u79cd\u5f88\u5dee\u7684\u4f30\u8ba1\u3002 \u7ed3\u5408\u6a21\u578b\u590d\u6742\u5ea6 \u6839\u636e\u5965\u5361\u59c6\u5243\u5200\u539f\u5219\uff1a\u201c\u7ed9\u5b9a\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u6cdb\u5316\u8bef\u5dee\u7684\u6a21\u578b\uff0c\u8f83\u7b80\u5355\u7684\u6a21\u578b\u6bd4\u8f83\u590d\u6742\u7684\u6a21\u578b\u66f4\u53ef\u53d6\u201d\uff0c\u590d\u6742\u6a21\u578b\u4e2d\u7684\u9644\u52a0\u6210\u5206\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u57fa\u4e8e\u5bf9\u5076\u7136\u7684\u62df\u5408\u3002 \u4ee5\u4e0b\u662f\u628a\u6a21\u578b\u590d\u6742\u5ea6\u4e0e\u6a21\u578b\u8bc4\u4f30\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u65b9\u6cd5\uff1a \u60b2\u89c2\u8bef\u5dee\u8bc4\u4f30 \u4f7f\u7528\u8bad\u7ec3\u8bef\u5dee\u4e0e\u6a21\u578b\u590d\u6742\u5ea6\u7f5a\u9879\u7684\u548c\u6765\u8ba1\u7b97\u6cdb\u5316\u8bef\u5dee\uff0c\u5982\uff1a \u8bben(t)\u662f\u7ed3\u70b9t\u5206\u7c7b\u7684\u8bad\u7ec3\u8bb0\u5f55\u6570\uff0ce(t)\u662f\u88ab\u8bef\u5206\u7c7b\u7684\u8bb0\u5f55\u6570\uff0c\u5219\u51b3\u7b56\u6811T\u7684\u60b2\u89c2\u8bef\u5dee\u53ef\u8868\u793a\u4e3a\uff1a \u5176\u4e2d\uff0ck\u662f\u51b3\u7b56\u6811\u7684\u53f6\u7ed3\u70b9\u6570\uff0ce(T)\u662f\u51b3\u7b56\u6811\u7684\u603b\u8bad\u7ec3\u8bef\u5dee\uff0c\u03a9(t)\u662f\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u5bf9\u5e94\u7684\u7f5a\u9879\u3002 \u4f7f\u7528\u9a8c\u8bc1\u96c6 \u6b64\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u4f7f\u7528\u8bad\u7ec3\u96c6\u6765\u4f30\u8ba1\u6cdb\u5316\u8bef\u5dee\uff0c\u800c\u662f\u628a\u539f\u59cb\u6570\u636e\u96c6\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\uff0c\u9a8c\u8bc1\u96c6\u7528\u4e8e\u4f30\u8ba1\u6cdb\u5316\u8bef\u5dee\u3002\u901a\u5e38\u662f\u901a\u8fc7\u5bf9\u7b97\u6cd5\u8fdb\u884c\u8c03\u53c2\uff0c\u76f4\u5230\u7b97\u6cd5\u4ea7\u751f\u7684\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8fbe\u5230\u6700\u4f4e\u7684\u9519\u8bef\u7387\u3002","title":"8. \u51b3\u7b56\u6811"},{"location":"ai/jcs/#_1","text":"","title":"\u51b3\u7b56\u6811\u6982\u8ff0"},{"location":"ai/jcs/#_2","text":"\u51b3\u7b56\u6811(\u5224\u5b9a\u6811)\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u5b83\u7684\u601d\u60f3\u5341\u5206\u6734\u7d20\uff0c\u7c7b\u4f3c\u4e8e\u6211\u4eec\u5e73\u65f6\u5229\u7528\u9009\u62e9\u505a\u51b3\u7b56\u7684\u8fc7\u7a0b\uff0c\u4e5f\u7c7b\u4f3c\u4e8e\u95ee\u7b54\u731c\u6d4b\u7ed3\u679c\u6e38\u620f\uff0c\u6839\u636e\u4e00\u7cfb\u5217\u6570\u636e\uff0c\u7136\u540e\u7ed9\u51fa\u6e38\u620f\u7684\u7b54\u6848\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u76ee\u6807\uff1a\u6839\u636e\u7ed9\u5b9a\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u6784\u5efa\u4e00\u4e2a\u51b3\u7b56\u6811\u6a21\u578b\uff0c\u4f7f\u5b83\u80fd\u591f\u5bf9\u5b9e\u4f8b\u8fdb\u884c\u6b63\u786e\u7684\u5206\u7c7b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u672c\u8d28\uff1a\u4ece\u8bad\u7ec3\u96c6\u4e2d\u5f52\u7eb3\u51fa\u4e00\u7ec4\u5206\u7c7b\u89c4\u5219\uff0c\u6216\u8005\u8bf4\u662f\u7531\u8bad\u7ec3\u6570\u636e\u96c6\u4f30\u8ba1\u6761\u4ef6\u6982\u7387\u6a21\u578b\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u635f\u5931\u51fd\u6570\uff1a\u6b63\u5219\u5316\u7684\u6781\u5927\u4f3c\u7136\u51fd\u6570\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u6d4b\u8bd5\uff1a\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002 \u51b3\u7b56\u6811\u5b66\u4e60\u7684\u76ee\u6807\uff1a\u5728\u635f\u5931\u51fd\u6570\u7684\u610f\u4e49\u4e0b\uff0c\u9009\u62e9\u6700\u4f18\u51b3\u7b56\u6811\u7684\u95ee\u9898\u3002 \u51b3\u7b56\u6811\u7b56\u7565\uff1a\u81ea\u4e0a\u5411\u4e0b\uff0c\u5206\u800c\u6cbb\u4e4b\u3002 \u51b3\u7b56\u6811\u79cd\u7c7b\uff1a(1)\u5206\u7c7b\u6811--\u5bf9\u79bb\u6563\u53d8\u91cf\u505a\u51b3\u7b56\u6811; (2)\u56de\u5f52\u6811--\u5bf9\u8fde\u7eed\u53d8\u91cf\u505a\u51b3\u7b56\u6811","title":"\u4ecb\u7ecd"},{"location":"ai/jcs/#_3","text":"","title":"\u57fa\u672c\u7ed3\u6784\u548c\u6982\u5ff5"},{"location":"ai/jcs/#_4","text":"\u4e00\u822c\u7531\u6839\u8282\u70b9\u3001\u7236\u8282\u70b9\u3001\u5b50\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u6784\u6210\u3002 1)\u5b50\u8282\u70b9\u7531\u7236\u8282\u70b9\u6839\u636e\u67d0\u4e00\u89c4\u5219\u5206\u88c2\u800c\u6765\uff0c\u7136\u540e\u5b50\u8282\u70b9\u4f5c\u4e3a\u65b0\u7684\u7236\u4eb2\u8282\u70b9\u7ee7\u7eed\u5206\u88c2\uff0c\u76f4\u81f3\u4e0d\u80fd\u5206\u88c2\u4e3a\u6b62; 2)\u6839\u8282\u70b9\u662f\u6ca1\u6709\u7236\u8282\u70b9\u7684\u8282\u70b9\uff0c\u5373\u521d\u59cb\u5206\u88c2\u8282\u70b9; 3)\u53f6\u5b50\u8282\u70b9\u662f\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002","title":"\u57fa\u672c\u7ed3\u6784"},{"location":"ai/jcs/#_5","text":"\uff081\uff09\u6839\u7ed3\u70b9(Root Node)\uff1a\u5b83\u8868\u793a\u6574\u4e2a\u6837\u672c\u96c6\u5408\uff0c\u5e76\u4e14\u8be5\u8282\u70b9\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5212\u5206\u6210\u4e24\u4e2a\u6216\u591a\u4e2a\u5b50\u96c6\u3002 \uff082\uff09\u62c6\u5206(Splitting)\uff1a\u8868\u793a\u5c06\u4e00\u4e2a\u7ed3\u70b9\u62c6\u5206\u6210\u591a\u4e2a\u5b50\u96c6\u7684\u8fc7\u7a0b\u3002 \uff083\uff09\u51b3\u7b56\u7ed3\u70b9(Decision Node)\uff1a\u5f53\u4e00\u4e2a\u5b50\u7ed3\u70b9\u8fdb\u4e00\u6b65\u88ab\u62c6\u5206\u6210\u591a\u4e2a\u5b50\u8282\u70b9\u65f6\uff0c\u8fd9\u4e2a\u5b50\u8282\u70b9\u5c31\u53eb\u505a\u51b3\u7b56\u7ed3\u70b9\u3002 \uff084\uff09\u53f6\u5b50\u7ed3\u70b9(Leaf/Terminal Node)\uff1a\u65e0\u6cd5\u518d\u62c6\u5206\u7684\u7ed3\u70b9\u88ab\u79f0\u4e3a\u53f6\u5b50\u7ed3\u70b9\u3002 \uff085\uff09\u526a\u679d(Pruning)\uff1a\u79fb\u9664\u51b3\u7b56\u6811\u4e2d\u5b50\u7ed3\u70b9\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u526a\u679d\uff0c\u8ddf\u62c6\u5206\u8fc7\u7a0b\u76f8\u53cd\u3002 \uff086\uff09\u5206\u652f/\u5b50\u6811(Branch/Sub-Tree)\uff1a\u4e00\u68f5\u51b3\u7b56\u6811\u7684\u4e00\u90e8\u5206\u5c31\u53eb\u505a\u5206\u652f\u6216\u5b50\u6811\u3002 \uff087\uff09\u7236\u7ed3\u70b9\u548c\u5b50\u7ed3\u70b9(Paren and Child Node)\uff1a\u4e00\u4e2a\u7ed3\u70b9\u88ab\u62c6\u5206\u6210\u591a\u4e2a\u5b50\u8282\u70b9\uff0c\u8fd9\u4e2a\u7ed3\u70b9\u5c31\u53eb\u505a\u7236\u8282\u70b9\uff1b\u5176\u62c6\u5206\u540e\u7684\u5b50\u7ed3\u70b9\u4e5f\u53eb\u505a\u5b50\u7ed3\u70b9\u3002","title":"\u5176\u4ed6\u6982\u5ff5"},{"location":"ai/jcs/#_6","text":"\u6b65\u9aa41\uff1a\u5c06\u6240\u6709\u7684\u6570\u636e\u770b\u6210\u662f\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\uff0c\u8fdb\u5165\u6b65\u9aa42\uff1b \u6b65\u9aa42\uff1a\u6839\u636e\u5212\u5206\u51c6\u5219\uff0c\u4ece\u6240\u6709\u5c5e\u6027\u4e2d\u6311\u9009\u4e00\u4e2a\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u5272\uff0c\u8fdb\u5165\u6b65\u9aa43\uff1b \u6b65\u9aa43\uff1a\u751f\u6210\u82e5\u5e72\u4e2a\u5b50\u8282\u70b9\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u6ee1\u8db3\u505c\u6b62\u5206\u88c2\u7684\u6761\u4ef6\uff0c\u8fdb\u5165\u6b65\u9aa44\uff1b\u5426\u5219\uff0c\u8fdb\u5165\u6b65\u9aa42\uff1b \u6b65\u9aa44\uff1a\u8bbe\u7f6e\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a\u8be5\u8282\u70b9\u6570\u91cf\u5360\u6bd4\u6700\u5927\u7684\u7c7b\u522b\u3002 \u6ce8\uff1a\u5728\u51b3\u7b56\u6811\u57fa\u672c\u7b97\u6cd5\u4e2d\uff0c\u6709\u4e09\u79cd\u60c5\u5f62\u4f1a\u5bfc\u81f4\u9012\u5f52\u8fd4\u56de: 1 2 3 4 5 1) \u5f53\u524d\u7ed3\u70b9\u5305\u542b\u7684\u6837\u672c\u5168\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\uff0c\u65e0\u9700\u5212\u5206; 2) \u5f53\u524d\u5c5e\u6027\u96c6\u4e3a\u7a7a\uff0c\u6216\u662f\u6240\u6709\u6837\u672c\u5728\u6240\u6709\u5c5e\u6027\u4e0a\u53d6\u503c\u76f8\u540c\uff0c\u65e0\u6cd5\u5212\u5206; 3) \u5f53\u524d\u7ed3\u70b9\u5305\u542b\u7684\u6837\u672c\u96c6\u5408\u4e3a\u7a7a\uff0c\u4e0d\u80fd\u5212\u5206\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"ai/jcs/#_7","text":"\u51b3\u7b56\u6811\u7684\u6784\u9020\u8fc7\u7a0b\u4e00\u822c\u5206\u4e3a3\u4e2a\u90e8\u5206\uff0c\u5206\u522b\u662f\u7279\u5f81\u9009\u62e9\u3001\u51b3\u7b56\u6811\u751f\u4ea7\u548c\u51b3\u7b56\u6811\u88c1\u526a\u3002 \uff081\uff09\u7279\u5f81\u9009\u62e9\uff1a \u7279\u5f81\u9009\u62e9\u8868\u793a\u4ece\u4f17\u591a\u7684\u7279\u5f81\u4e2d\u9009\u62e9\u4e00\u4e2a\u7279\u5f81\u4f5c\u4e3a\u5f53\u524d\u8282\u70b9\u5206\u88c2\u7684\u6807\u51c6\uff0c\u5982\u4f55\u9009\u62e9\u7279\u5f81\u6709\u4e0d\u540c\u7684\u91cf\u5316 \u8bc4\u4f30\u65b9\u6cd5 \uff0c\u4ece\u800c\u884d\u751f\u51fa\u4e0d\u540c\u7684\u51b3\u7b56\u6811\u3002 \u76ee\u7684\uff08\u51c6\u5219\uff09\uff1a\u4f7f\u7528\u67d0\u7279\u5f81\u5bf9\u6570\u636e\u96c6\u5212\u5206\u4e4b\u540e\uff0c\u5404\u6570\u636e\u5b50\u96c6\u7684\u7eaf\u5ea6\u8981\u6bd4\u5212\u5206\u94b1\u7684\u6570\u636e\u96c6D\u7684\u7eaf\u5ea6\u9ad8\uff08\u4e5f\u5c31\u662f\u4e0d\u786e\u5b9a\u6027\u8981\u6bd4\u5212\u5206\u524d\u6570\u636e\u96c6D\u7684\u4e0d\u786e\u5b9a\u6027\u4f4e\uff09 \uff082\uff09\u51b3\u7b56\u6811\u7684\u751f\u6210 \u6839\u636e\u9009\u62e9\u7684\u7279\u5f81\u8bc4\u4f30\u6807\u51c6\uff0c\u4ece\u4e0a\u81f3\u4e0b\u9012\u5f52\u5730\u751f\u6210\u5b50\u8282\u70b9\uff0c\u76f4\u5230\u6570\u636e\u96c6\u4e0d\u53ef\u5206\u5219\u505c\u6b62\u51b3\u7b56\u6811\u505c\u6b62\u751f\u957f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5c31\u662f\u4f7f\u7528\u6ee1\u8db3\u5212\u5206\u51c6\u5219\u7684\u7279\u5f81\u4e0d\u65ad\u7684\u5c06\u6570\u636e\u96c6\u5212\u5206\u6210\u7eaf\u5ea6\u66f4\u9ad8\uff0c\u4e0d\u786e\u5b9a\u884c\u66f4\u5c0f\u7684\u5b50\u96c6\u7684\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u5f53\u524d\u6570\u636e\u96c6\u7684\u6bcf\u4e00\u6b21\u5212\u5206\uff0c\u90fd\u5e0c\u671b\u6839\u636e\u67d0\u4e2a\u7279\u5f81\u5212\u5206\u4e4b\u540e\u7684\u5404\u4e2a\u5b50\u96c6\u7684\u7eaf\u5ea6\u66f4\u9ad8\uff0c\u4e0d\u786e\u5b9a\u6027\u66f4\u5c0f\u3002 \uff083\uff09\u51b3\u7b56\u6811\u7684\u88c1\u526a \u51b3\u7b56\u6811\u5bb9\u6613\u8fc7\u62df\u5408 \uff0c\u4e00\u822c\u9700\u8981 \u526a\u679d \u6765\u7f29\u5c0f\u6811\u7ed3\u6784\u89c4\u6a21\u3001\u7f13\u89e3\u8fc7\u62df\u5408\u3002","title":"\u6784\u9020\u6811\u8fc7\u7a0b\u5904\u7406"},{"location":"ai/jcs/#_8","text":"\u4e00\u822c\u800c\u8a00\uff0c\u968f\u7740\u5212\u5206\u8fc7\u7a0b\u4e0d\u65ad\u8fdb\u884c\uff0c\u6211\u4eec\u5e0c\u671b\u51b3\u7b56\u6811\u7684\u5206\u652f\u7ed3\u70b9\u6240\u5305\u542b\u7684\u6837\u672c\u5c3d\u53ef\u80fd\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\uff0c\u5373\u7ed3\u70b9\u7684\"\u7eaf\u5ea6\"\u8d8a\u6765\u8d8a\u9ad8\u3002\u5176\u4e2d\u6700\u5e38\u7528\u7684\u4e09\u79cd\u51c6\u5219: \u4fe1\u606f\u589e\u76ca\u51c6\u5219(ID3) \u4fe1\u606f\u589e\u76ca\u7387\u51c6\u5219(C4.5) \u57fa\u5c3c\u6307\u6570\u51c6\u5219(CART)","title":"\u7279\u5f81\u8bc4\u4f30\u65b9\u6cd5/\u5212\u5206\u51c6\u5219"},{"location":"ai/jcs/#_9","text":"\u526a\u679d\u662f\u51b3\u7b56\u6811\u5b66\u4e60\u7b97\u6cd5\u5bf9\u4ed8 \u8fc7\u62df\u5408 \u7684\u4e3b\u8981\u624b\u6bb5\u3002 \u8fc7\u62df\u5408\u539f\u56e0\uff1a 1\uff09\u566a\u58f0\u5bfc\u81f4\u7684\u8fc7\u62df\u5408\uff1a\u62df\u5408\u4e86\u88ab\u8bef\u6807\u8bb0\u7684\u6837\u4f8b\uff0c\u5bfc\u81f4\u8bef\u5206\u7c7b\u3002 2\uff09\u7f3a\u4e4f\u4ee3\u8868\u6027\u6837\u672c\u5bfc\u81f4\u7684\u8fc7\u62df\u5408\uff1a\u7f3a\u4e4f\u4ee3\u8868\u6027\u6837\u672c\u7684\u5c11\u91cf\u8bad\u7ec3\u96c6\u4f5c\u51fa\u7684\u51b3\u7b56\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u3002 3\uff09\u591a\u91cd\u6bd4\u8f83\u9020\u6210\u7684\u8fc7\u62df\u5408\uff1a\u590d\u6742\u6a21\u578b\u3002 \u57fa\u672c\u7b56\u7565\u6709\"\u9884\u526a\u679d\" \u548c\"\u540e\u526a\u679d\"\uff1b \u9884\u526a\u679d\u662f\u6307\u5728\u51b3\u7b56\u6811\u751f\u6210\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u5728\u5212\u5206\u524d\u5148\u8fdb\u884c\u4f30\u8ba1\uff0c\u82e5\u5f53\u524d\u7ed3\u70b9\u7684\u5212\u5206\u4e0d\u80fd\u5e26\u6765\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u63d0\u5347\uff0c\u5219\u505c\u6b62\u5212\u5206\u5e76\u5c06\u5f53\u524d\u7ed3\u70b9\u6807\u8bb0\u4e3a\u53f6\u7ed3\u70b9\uff1b \u540e\u526a\u679d\u5219\u662f\u5148\u4ece\u8bad\u7ec3\u96c6\u751f\u6210\u4e00\u68f5\u5b8c\u6574\u7684\u51b3\u7b56\u6811\uff0c\u7136\u540e\u81ea\u5e95\u5411\u4e0a\u5730\u5bf9\u975e\u53f6\u7ed3\u70b9\u8fdb\u884c\u8003\u5bdf\uff0c\u82e5\u5c06\u8be5\u7ed3\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u66ff\u6362\u4e3a\u53f6\u7ed3\u70b9\u80fd\u5e26\u6765\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u63d0\u5347\uff0c\u5219\u5c06\u8be5\u5b50\u6811\u66ff\u6362\u4e3a\u53f6\u7ed3\u70b9\u3002 \u5224\u65ad\u51b3\u7b56\u6811\u6cdb\u5316\u6027\u80fd\u662f\u5426\u63d0\u5347\uff1a \u7559\u51fa\u6cd5 \uff0c\u5373\u9884\u7559\u4e00\u90e8\u5206\u6570\u636e\u7528\u4f5c\"\u9a8c\u8bc1\u96c6\"\u4ee5\u8fdb\u884c\u6027\u80fd\u8bc4\u4f30\u3002 \u4f8b\u5982\uff1a\u5728\u9884\u526a\u679d\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u88c2\u8282\u70b9\uff0c\u5bf9\u6bd4\u5206\u88c2\u524d\u540e\u51b3\u7b56\u6811\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u9884\u6d4b\u7cbe\u5ea6\uff0c\u4ece\u800c\u51b3\u5b9a\u662f\u5426\u5206\u88c2\u8be5\u8282\u70b9\u3002\u800c\u5728\u540e\u526a\u679d\u4e2d\uff0c\u8003\u5bdf\u975e\u53f6\u8282\u70b9\uff0c\u5bf9\u6bd4\u526a\u679d\u524d\u540e\u51b3\u7b56\u6811\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u9884\u6d4b\u7cbe\u5ea6\uff0c\u4ece\u800c\u51b3\u5b9a\u662f\u5426\u5bf9\u5176\u526a\u679d\u3002 \u4e24\u79cd\u65b9\u6cd5\u5bf9\u6bd4\uff1a 1\uff09\u9884\u526a\u679d\u4f7f\u5f97\u51b3\u7b56\u6811\u7684\u5f88\u591a\u5206\u652f\u90fd\u6ca1\u6709\"\u5c55\u5f00\u201d\uff0c\u4e0d\u4ec5\u964d\u4f4e\u8fc7\u62df\u5408\u98ce\u9669\uff0c\u800c\u4e14\u663e\u8457\u51cf\u5c11\u8bad\u7ec3/\u6d4b\u8bd5\u65f6\u95f4\u5f00\u9500\uff1b\u4f46\uff0c\u6709\u4e9b\u5206\u652f\u7684\u5f53\u524d\u5212\u5206\u867d\u4e0d\u80fd\u63d0\u5347\u6cdb\u5316\u6027\u80fd\uff0c\u4f46\u5728\u5176\u57fa\u7840\u4e0a\u8fdb\u884c\u7684\u540e\u7eed\u5212\u5206\u5374\u6709\u53ef\u80fd\u5bfc\u81f4\u6027\u80fd\u663e\u8457\u63d0\u9ad8\uff0c\u5373\u9884\u526a\u679d\u57fa\u4e8e\"\u8d2a\u5fc3\"\u672c\u8d28\u7981\u6b62\u8fd9\u4e9b\u5206\u652f\u5c55\u5f00\uff0c\u7ed9\u9884\u526a\u679d\u51b3\u7b56\u6811\u5e26\u6765\u4e86\u6b20\u62df\u542b\u7684\u98ce\u9669\u3002 2\uff09\u540e\u526a\u679d\u51b3\u7b56\u6811\u901a\u5e38\u6bd4\u9884\u526a\u679d\u51b3\u7b56\u6811\u4fdd\u7559\u4e86\u66f4\u591a\u7684\u5206\u652f\u3002\u4e00\u822c\u60c5\u5f62\u4e0b\uff0c\u540e\u526a\u679d\u51b3\u7b56\u6811\u7684\u6b20\u62df\u5408\u98ce\u9669\u5f88\u5c0f\uff0c\u6cdb\u5316\u6027\u80fd\u5f80\u5f80\u4f18\u4e8e\u9884\u526a\u679d\u51b3\u7b56\u6811\uff0c\u4f46\u540e\u526a\u679d\u8fc7\u7a0b\u662f\u5728\u751f\u6210\u5b8c\u5168\u51b3\u7b56\u6811\u4e4b\u540e\u8fdb\u884c\u7684\uff0c\u5e76\u4e14\u8981\u81ea\u5e95\u5411\u4e0a\u5730\u5bf9\u6811\u4e2d\u7684\u6240\u6709\u975e\u53f6\u7ed3\u70b9\u8fdb\u884c\u9010\u4e00\u8003\u5bdf\uff0c\u56e0\u6b64\u5176\u8bad\u7ec3\u65f6\u95f4\u5f00\u9500\u6bd4\u672a\u526a\u679d\u51b3\u7b56\u6811\u548c\u9884\u526a\u679d\u51b3\u7b56\u6811\u90fd\u8981\u5927\u5f97\u591a\u3002","title":"\u526a\u679d\u5904\u7406"},{"location":"ai/jcs/#_10","text":"\u4ee5\u4e0a\u90fd\u662f\u57fa\u4e8e \u79bb\u6563\u5c5e\u6027 \u8fdb\u884c\u8ba8\u8bba\uff0c\u800c \u8fde\u7eed\u5c5e\u6027 \u7684\u53ef\u53d6\u503c\u6570\u76ee\u4e0d\u518d\u6709\u9650\uff0c \u56e0\u6b64\uff0c\u4e0d\u80fd\u76f4\u63a5\u6839\u636e\u8fde\u7eed\u5c5e\u6027\u7684\u53ef\u53d6\u503c\u6765\u5bf9\u7ed3\u70b9\u8fdb\u884c\u5212\u5206\u3002\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u8fde\u7eed\u5c5e\u6027\u79bb\u6563\u5316\uff0c\u6700\u7b80\u5355\u7684\u7b56\u7565\u662f\u91c7\u7528\u4e8c\u5206\u6cd5\u5bf9\u8fde\u7eed\u5c5e\u6027\u8fdb\u884c\u5904\u7406\uff08C4.5\uff09","title":"\u7279\u6b8a\u503c\u5904\u7406"},{"location":"ai/jcs/#_11","text":"\u518d\u4ee3\u5165\u4f30\u8ba1 \u518d\u4ee3\u5165\u4f30\u8ba1\u65b9\u6cd5\u5047\u8bbe\u8bad\u7ec3\u6570\u636e\u96c6\u53ef\u4ee5\u5f88\u597d\u5730\u4ee3\u8868\u6574\u4f53\u6570\u636e\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bad\u7ec3\u8bef\u5dee\uff08\u518d\u4ee3\u5165\u8bef\u5dee\uff09\u63d0\u4f9b\u5bf9\u6cdb\u5316\u8bef\u5dee\u7684\u4e50\u89c2\u4f30\u8ba1\u3002\u6b64\u60c5\u5f62\u4e0b\uff0c\u51b3\u7b56\u6811\u7b97\u6cd5\u5c06\u7b80\u5355\u5730\u9009\u62e9\u4ea7\u751f\u6700\u4f4e\u8bad\u7ec3\u8bef\u5dee\u7684\u6a21\u578b\u4f5c\u4e3a\u6700\u7ec8\u7684\u6a21\u578b\uff0c\u5c3d\u7ba1\uff0c\u4f7f\u7528\u8bad\u7ec3\u8bef\u5dee\u901a\u5e38\u662f\u6cdb\u5316\u8bef\u5dee\u7684\u4e00\u79cd\u5f88\u5dee\u7684\u4f30\u8ba1\u3002 \u7ed3\u5408\u6a21\u578b\u590d\u6742\u5ea6 \u6839\u636e\u5965\u5361\u59c6\u5243\u5200\u539f\u5219\uff1a\u201c\u7ed9\u5b9a\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u6cdb\u5316\u8bef\u5dee\u7684\u6a21\u578b\uff0c\u8f83\u7b80\u5355\u7684\u6a21\u578b\u6bd4\u8f83\u590d\u6742\u7684\u6a21\u578b\u66f4\u53ef\u53d6\u201d\uff0c\u590d\u6742\u6a21\u578b\u4e2d\u7684\u9644\u52a0\u6210\u5206\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u57fa\u4e8e\u5bf9\u5076\u7136\u7684\u62df\u5408\u3002 \u4ee5\u4e0b\u662f\u628a\u6a21\u578b\u590d\u6742\u5ea6\u4e0e\u6a21\u578b\u8bc4\u4f30\u7ed3\u5408\u5728\u4e00\u8d77\u7684\u65b9\u6cd5\uff1a \u60b2\u89c2\u8bef\u5dee\u8bc4\u4f30 \u4f7f\u7528\u8bad\u7ec3\u8bef\u5dee\u4e0e\u6a21\u578b\u590d\u6742\u5ea6\u7f5a\u9879\u7684\u548c\u6765\u8ba1\u7b97\u6cdb\u5316\u8bef\u5dee\uff0c\u5982\uff1a \u8bben(t)\u662f\u7ed3\u70b9t\u5206\u7c7b\u7684\u8bad\u7ec3\u8bb0\u5f55\u6570\uff0ce(t)\u662f\u88ab\u8bef\u5206\u7c7b\u7684\u8bb0\u5f55\u6570\uff0c\u5219\u51b3\u7b56\u6811T\u7684\u60b2\u89c2\u8bef\u5dee\u53ef\u8868\u793a\u4e3a\uff1a \u5176\u4e2d\uff0ck\u662f\u51b3\u7b56\u6811\u7684\u53f6\u7ed3\u70b9\u6570\uff0ce(T)\u662f\u51b3\u7b56\u6811\u7684\u603b\u8bad\u7ec3\u8bef\u5dee\uff0c\u03a9(t)\u662f\u6bcf\u4e2a\u53f6\u7ed3\u70b9\u5bf9\u5e94\u7684\u7f5a\u9879\u3002 \u4f7f\u7528\u9a8c\u8bc1\u96c6 \u6b64\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u4f7f\u7528\u8bad\u7ec3\u96c6\u6765\u4f30\u8ba1\u6cdb\u5316\u8bef\u5dee\uff0c\u800c\u662f\u628a\u539f\u59cb\u6570\u636e\u96c6\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\uff0c\u9a8c\u8bc1\u96c6\u7528\u4e8e\u4f30\u8ba1\u6cdb\u5316\u8bef\u5dee\u3002\u901a\u5e38\u662f\u901a\u8fc7\u5bf9\u7b97\u6cd5\u8fdb\u884c\u8c03\u53c2\uff0c\u76f4\u5230\u7b97\u6cd5\u4ea7\u751f\u7684\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8fbe\u5230\u6700\u4f4e\u7684\u9519\u8bef\u7387\u3002","title":"\u6cdb\u5316\u8bef\u5dee\u4f30\u8ba1"},{"location":"ai/jj/","text":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6982\u8ff0 \u00b6 \u5728\u524d\u9762\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5168\u8fde\u63a5 \u795e\u7ecf\u7f51\u7edc \uff0c\u7136\u800c\u8fd9\u79cd\u7ed3\u6784\u7684\u7f51\u7edc\u5bf9\u4e8e\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\u6765\u8bf4\u5e76\u4e0d\u662f\u5f88\u5408\u9002\u3002\u672c\u6587\u5c06\u8981\u4ecb\u7ecd\u4e00\u79cd\u66f4\u9002\u5408\u56fe\u50cf\u3001\u8bed\u97f3\u8bc6\u522b\u4efb\u52a1\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u2014\u2014\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(Convolutional Neural Network, CNN)\u3002\u8bf4\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u662f\u6700\u91cd\u8981\u7684\u4e00\u79cd\u795e\u7ecf\u7f51\u7edc\u4e5f\u4e0d\u4e3a\u8fc7\uff0c\u5b83\u5728\u6700\u8fd1\u51e0\u5e74\u5927\u653e\u5f02\u5f69\uff0c\u51e0\u4e4e\u6240\u6709\u56fe\u50cf\u3001\u8bed\u97f3\u8bc6\u522b\u9886\u57df\u7684\u91cd\u8981\u7a81\u7834\u90fd\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u53d6\u5f97\u7684\uff0c\u6bd4\u5982\u8c37\u6b4c\u7684GoogleNet\u3001\u5fae\u8f6f\u7684ResNet\u7b49\uff0c\u6253\u8d25\u674e\u4e16\u77f3\u7684AlphaGo\u4e5f\u7528\u5230\u4e86\u8fd9\u79cd\u7f51\u7edc\u3002\u672c\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002 \u4ecb\u7ecd \u00b6 \u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc VS \u5377\u79ef\u7f51\u7edc \u00b6 \u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u4e4b\u6240\u4ee5\u4e0d\u592a\u9002\u5408\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u95ee\u9898\uff1a \u53c2\u6570\u6570\u91cf\u592a\u591a \u8003\u8651\u4e00\u4e2a\u8f93\u51651000*1000\u50cf\u7d20\u7684\u56fe\u7247(\u4e00\u767e\u4e07\u50cf\u7d20\uff0c\u73b0\u5728\u5df2\u7ecf\u4e0d\u80fd\u7b97\u5927\u56fe\u4e86)\uff0c\u8f93\u5165\u5c42\u67091000*1000=100\u4e07\u8282\u70b9\u3002\u5047\u8bbe\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u6709100\u4e2a\u8282\u70b9(\u8fd9\u4e2a\u6570\u91cf\u5e76\u4e0d\u591a)\uff0c\u90a3\u4e48\u4ec5\u8fd9\u4e00\u5c42\u5c31\u6709(1000*1000+1)*100=1\u4ebf\u53c2\u6570\uff0c\u8fd9\u5b9e\u5728\u662f\u592a\u591a\u4e86\uff01\u6211\u4eec\u770b\u5230\u56fe\u50cf\u53ea\u6269\u5927\u4e00\u70b9\uff0c\u53c2\u6570\u6570\u91cf\u5c31\u4f1a\u591a\u5f88\u591a\uff0c\u56e0\u6b64\u5b83\u7684\u6269\u5c55\u6027\u5f88\u5dee\u3002 \u6ca1\u6709\u5229\u7528\u50cf\u7d20\u4e4b\u95f4\u7684\u4f4d\u7f6e\u4fe1\u606f \u5bf9\u4e8e\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\u6765\u8bf4\uff0c\u6bcf\u4e2a\u50cf\u7d20\u548c\u5176\u5468\u56f4\u50cf\u7d20\u7684\u8054\u7cfb\u662f\u6bd4\u8f83\u7d27\u5bc6\u7684\uff0c\u548c\u79bb\u5f97\u5f88\u8fdc\u7684\u50cf\u7d20\u7684\u8054\u7cfb\u53ef\u80fd\u5c31\u5f88\u5c0f\u4e86\u3002\u5982\u679c\u4e00\u4e2a\u795e\u7ecf\u5143\u548c\u4e0a\u4e00\u5c42\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u4e00\u4e2a\u50cf\u7d20\u6765\u8bf4\uff0c\u628a\u56fe\u50cf\u7684\u6240\u6709\u50cf\u7d20\u90fd\u7b49\u540c\u770b\u5f85\uff0c\u8fd9\u4e0d\u7b26\u5408\u524d\u9762\u7684\u5047\u8bbe\u3002\u5f53\u6211\u4eec\u5b8c\u6210\u6bcf\u4e2a\u8fde\u63a5\u6743\u91cd\u7684\u5b66\u4e60\u4e4b\u540e\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u6709\u5927\u91cf\u7684\u6743\u91cd\uff0c\u5b83\u4eec\u7684\u503c\u90fd\u662f\u5f88\u5c0f\u7684(\u4e5f\u5c31\u662f\u8fd9\u4e9b\u8fde\u63a5\u5176\u5b9e\u65e0\u5173\u7d27\u8981)\u3002\u52aa\u529b\u5b66\u4e60\u5927\u91cf\u5e76\u4e0d\u91cd\u8981\u7684\u6743\u91cd\uff0c\u8fd9\u6837\u7684\u5b66\u4e60\u5fc5\u5c06\u662f\u975e\u5e38\u4f4e\u6548\u7684\u3002 \u7f51\u7edc\u5c42\u6570\u9650\u5236 \u6211\u4eec\u77e5\u9053\u7f51\u7edc\u5c42\u6570\u8d8a\u591a\u5176\u8868\u8fbe\u80fd\u529b\u8d8a\u5f3a\uff0c\u4f46\u662f\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u65b9\u6cd5\u8bad\u7ec3\u6df1\u5ea6\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u7684\u68af\u5ea6\u5f88\u96be\u4f20\u9012\u8d85\u8fc73\u5c42\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u5f97\u5230\u4e00\u4e2a\u5f88\u6df1\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff0c\u4e5f\u5c31\u9650\u5236\u4e86\u5b83\u7684\u80fd\u529b\u3002 \u90a3\u4e48\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u53c8\u662f\u600e\u6837\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u5462\uff1f\u4e3b\u8981\u6709\u4e09\u4e2a\u601d\u8def\uff1a \u5c40\u90e8\u8fde\u63a5 \u8fd9\u4e2a\u662f\u6700\u5bb9\u6613\u60f3\u5230\u7684\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u4e0d\u518d\u548c\u4e0a\u4e00\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u800c\u53ea\u548c\u4e00\u5c0f\u90e8\u5206\u795e\u7ecf\u5143\u76f8\u8fde\u3002\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u53c2\u6570\u3002 \u6743\u503c\u5171\u4eab \u4e00\u7ec4\u8fde\u63a5\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u6743\u91cd\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u8fde\u63a5\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u6743\u91cd\uff0c\u8fd9\u6837\u53c8\u51cf\u5c11\u4e86\u5f88\u591a\u53c2\u6570\u3002 \u4e0b\u91c7\u6837 \u53ef\u4ee5\u4f7f\u7528Pooling\u6765\u51cf\u5c11\u6bcf\u5c42\u7684\u6837\u672c\u6570\uff0c\u8fdb\u4e00\u6b65\u51cf\u5c11\u53c2\u6570\u6570\u91cf\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u63d0\u5347\u6a21\u578b\u7684\u9c81\u68d2\u6027\u3002 \u5bf9\u4e8e\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\u6765\u8bf4\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u901a\u8fc7\u5c3d\u53ef\u80fd\u4fdd\u7559\u91cd\u8981\u7684\u53c2\u6570\uff0c\u53bb\u6389\u5927\u91cf\u4e0d\u91cd\u8981\u7684\u53c2\u6570\uff0c\u6765\u8fbe\u5230\u66f4\u597d\u7684\u5b66\u4e60\u6548\u679c\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8be6\u8ff0\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5230\u5e95\u662f\u4f55\u65b9\u795e\u5723\u3002 \u8ba4\u8bc6 \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u5148\u83b7\u53d6\u4e00\u4e2a\u611f\u6027\u8ba4\u8bc6\uff0c\u4e0b\u56fe\u662f\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u793a\u610f\u56fe\uff1a \u7f51\u7edc\u67b6\u6784 \u5982\u56fe\u6240\u793a\uff0c\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7531\u82e5\u5e72 \u5377\u79ef\u5c42 \u3001 Pooling\u5c42 \u3001 \u5168\u8fde\u63a5\u5c42 \u7ec4\u6210\u3002\u4f60\u53ef\u4ee5\u6784\u5efa\u5404\u79cd\u4e0d\u540c\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u5e38\u7528\u67b6\u6784\u6a21\u5f0f\u4e3a\uff1a INPUT -> [[CONV] N -> POOL?] M -> [FC]*K \u4e5f\u5c31\u662fN\u4e2a\u5377\u79ef\u5c42\u53e0\u52a0\uff0c\u7136\u540e(\u53ef\u9009)\u53e0\u52a0\u4e00\u4e2aPooling\u5c42\uff0c\u91cd\u590d\u8fd9\u4e2a\u7ed3\u6784M\u6b21\uff0c\u6700\u540e\u53e0\u52a0K\u4e2a\u5168\u8fde\u63a5\u5c42\u3002 \u5bf9\u4e8e\u4e0a\u56fe\u5c55\u793a\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff1a INPUT -> CONV -> POOL -> CONV -> POOL -> FC -> FC \u6309\u7167\u4e0a\u8ff0\u6a21\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a INPUT -> [[CONV] 1 -> POOL] 2 -> [FC]*2 \u4e5f\u5c31\u662f\uff1aN=1, M=2, K=2\u3002 \u7ed3\u6784 \u00b6 \u4ece\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u7684\u5c42\u7ed3\u6784\u548c \u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc \u7684\u5c42\u7ed3\u6784\u6709\u5f88\u5927\u4e0d\u540c\u3002 \u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc \u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u662f\u6309\u7167 \u4e00\u7ef4 \u6392\u5217\u7684\uff0c\u4e5f\u5c31\u662f\u6392\u6210\u4e00\u6761\u7ebf\u7684\u6837\u5b50\uff1b\u800c \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u662f\u6309\u7167 \u4e09\u7ef4 \u6392\u5217\u7684\uff0c\u4e5f\u5c31\u662f\u6392\u6210\u4e00\u4e2a\u957f\u65b9\u4f53\u7684\u6837\u5b50\uff0c\u6709 \u5bbd\u5ea6 \u3001 \u9ad8\u5ea6 \u548c \u6df1\u5ea6 \u3002 \u5bf9\u4e8e\u4e0a\u56fe\u5c55\u793a\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u6211\u4eec\u770b\u5230\u8f93\u5165\u5c42\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5bf9\u5e94\u4e8e\u8f93\u5165\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u800c\u5b83\u7684\u6df1\u5ea6\u4e3a1\u3002\u63a5\u7740\uff0c\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u5bf9\u8fd9\u5e45\u56fe\u50cf\u8fdb\u884c\u4e86\u5377\u79ef\u64cd\u4f5c(\u540e\u9762\u6211\u4eec\u4f1a\u8bb2\u5982\u4f55\u8ba1\u7b97\u5377\u79ef)\uff0c\u5f97\u5230\u4e86\u4e09\u4e2aFeature Map\u3002\u8fd9\u91cc\u7684\"3\"\u53ef\u80fd\u662f\u8ba9\u5f88\u591a\u521d\u5b66\u8005\u8ff7\u60d1\u7684\u5730\u65b9\uff0c\u5b9e\u9645\u4e0a\uff0c\u5c31\u662f\u8fd9\u4e2a\u5377\u79ef\u5c42\u5305\u542b\u4e09\u4e2aFilter\uff0c\u4e5f\u5c31\u662f\u4e09\u5957\u53c2\u6570\uff0c\u6bcf\u4e2aFilter\u90fd\u53ef\u4ee5\u628a\u539f\u59cb\u8f93\u5165\u56fe\u50cf\u5377\u79ef\u5f97\u5230\u4e00\u4e2aFeature Map\uff0c\u4e09\u4e2aFilter\u5c31\u53ef\u4ee5\u5f97\u5230\u4e09\u4e2aFeature Map\u3002\u81f3\u4e8e\u4e00\u4e2a\u5377\u79ef\u5c42\u53ef\u4ee5\u6709\u591a\u5c11\u4e2aFilter\uff0c\u90a3\u662f\u53ef\u4ee5\u81ea\u7531\u8bbe\u5b9a\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5377\u79ef\u5c42\u7684Filter\u4e2a\u6570\u4e5f\u662f\u4e00\u4e2a \u8d85\u53c2\u6570 \u3002\u6211\u4eec\u53ef\u4ee5\u628aFeature Map\u53ef\u4ee5\u770b\u505a\u662f\u901a\u8fc7\u5377\u79ef\u53d8\u6362\u63d0\u53d6\u5230\u7684\u56fe\u50cf\u7279\u5f81\uff0c\u4e09\u4e2aFilter\u5c31\u5bf9\u539f\u59cb\u56fe\u50cf\u63d0\u53d6\u51fa\u4e09\u7ec4\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u4e5f\u5c31\u662f\u5f97\u5230\u4e86\u4e09\u4e2aFeature Map\uff0c\u4e5f\u79f0\u505a\u4e09\u4e2a \u901a\u9053(channel) \u3002 \u7ee7\u7eed\u89c2\u5bdf\u4e0a\u56fe\uff0c\u5728\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u4e4b\u540e\uff0cPooling\u5c42\u5bf9\u4e09\u4e2aFeature Map\u505a\u4e86 \u4e0b\u91c7\u6837 (\u540e\u9762\u6211\u4eec\u4f1a\u8bb2\u5982\u4f55\u8ba1\u7b97\u4e0b\u91c7\u6837)\uff0c\u5f97\u5230\u4e86\u4e09\u4e2a\u66f4\u5c0f\u7684Feature Map\u3002\u63a5\u7740\uff0c\u662f\u7b2c\u4e8c\u4e2a \u5377\u79ef\u5c42 \uff0c\u5b83\u67095\u4e2aFilter\u3002\u6bcf\u4e2aFitler\u90fd\u628a\u524d\u9762\u4e0b\u91c7\u6837\u4e4b\u540e\u76843\u4e2a Feature Map\u5377\u79ef\u5728\u4e00\u8d77\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Feature Map\u3002\u8fd9\u6837\uff0c5\u4e2aFilter\u5c31\u5f97\u5230\u4e865\u4e2aFeature Map\u3002\u63a5\u7740\uff0c\u662f\u7b2c\u4e8c\u4e2aPooling\uff0c\u7ee7\u7eed\u5bf95\u4e2aFeature Map\u8fdb\u884c\u4e0b\u91c7\u6837 \uff0c\u5f97\u5230\u4e865\u4e2a\u66f4\u5c0f\u7684Feature Map\u3002 \u4e0a\u56fe\u6240\u793a\u7f51\u7edc\u7684\u6700\u540e\u4e24\u5c42\u662f\u5168\u8fde\u63a5\u5c42\u3002\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u548c\u4e0a\u4e00\u5c425\u4e2aFeature Map\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u7b2c\u4e8c\u4e2a\u5168\u8fde\u63a5\u5c42(\u4e5f\u5c31\u662f\u8f93\u51fa\u5c42)\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u5219\u548c\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u8fd9\u6837\u5f97\u5230\u4e86\u6574\u4e2a\u7f51\u7edc\u7684\u8f93\u51fa\u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u5bf9\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6709\u4e86\u6700\u57fa\u672c\u7684\u611f\u6027\u8ba4\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u5404\u79cd\u5c42\u7684\u8ba1\u7b97\u3002 \u8ba1\u7b97 \u00b6 \u5377\u79ef(Convolution)\u5c42\u8f93\u51fa\u503c\u8ba1\u7b97 \u00b6 \u6211\u4eec\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bb2\u8ff0\u5982\u4f55\u8ba1\u7b97\u5377\u79ef\uff0c\u7136\u540e\uff0c\u6211\u4eec\u62bd\u8c61\u51fa\u5377\u79ef\u5c42\u7684\u4e00\u4e9b\u91cd\u8981\u6982\u5ff5\u548c\u8ba1\u7b97\u65b9\u6cd5\u3002 \u5047\u8bbe\u6709\u4e00\u4e2a5 5\u7684\u56fe\u50cf\uff0c\u4f7f\u7528\u4e00\u4e2a3 3\u7684filter\u8fdb\u884c\u5377\u79ef\uff0c\u60f3\u5f97\u5230\u4e00\u4e2a3*3\u7684Feature Map\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u4e3a\u4e86\u6e05\u695a\u7684\u63cf\u8ff0\u5377\u79ef\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u6211\u4eec\u9996\u5148\u5bf9\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u8fdb\u884c\u7f16\u53f7\uff0c\u7528Xi,j\u8868\u793a\u56fe\u50cf\u7684\u7b2ci\u884c\u7b2cj\u5217\u5143\u7d20\uff1b\u5bf9filter\u7684\u6bcf\u4e2a\u6743\u91cd\u8fdb\u884c\u7f16\u53f7\uff0c\u7528Wm,n\u8868\u793a\u7b2cm\u884c\u7b2cn\u5217\u6743\u91cd\uff0c\u7528Wb\u8868\u793afilter\u7684\u504f\u7f6e\u9879\uff1b\u5bf9Feature Map\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u7f16\u53f7\uff0c\u7528ai,j\u8868\u793aFeature Map\u7684\u7b2ci\u884c\u7b2cj\u5217\u5143\u7d20\uff1b\u7528f\u8868\u793a\u6fc0\u6d3b\u51fd\u6570(\u8fd9\u4e2a\u4f8b\u5b50\u9009\u62e9relu\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570)\u3002\u7136\u540e\uff0c\u4f7f\u7528\u4e0b\u5217\u516c\u5f0f\u8ba1\u7b97\u5377\u79ef\uff1a \u8ba1\u7b97\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u53ef\u4ee5\u4f9d\u6b21\u8ba1\u7b97\u51faFeature Map\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\u3002\u4e0b\u9762\u7684\u52a8\u753b\u663e\u793a\u4e86\u6574\u4e2aFeature Map\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff1a \u4e0a\u9762\u7684\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u6b65\u5e45(stride)\u4e3a1\u3002\u6b65\u5e45\u53ef\u4ee5\u8bbe\u4e3a\u5927\u4e8e1\u7684\u6570\u3002\u4f8b\u5982\uff0c\u5f53\u6b65\u5e45\u4e3a2\u65f6\uff0cFeature Map\u8ba1\u7b97\u5982\u4e0b\uff1a \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5f53\u6b65\u5e45\u8bbe\u7f6e\u4e3a2\u7684\u65f6\u5019\uff0cFeature Map\u5c31\u53d8\u62102*2\u4e86\u3002\u8fd9\u8bf4\u660e\u56fe\u50cf\u5927\u5c0f\u3001\u6b65\u5e45\u548c\u5377\u79ef\u540e\u7684Feature Map\u5927\u5c0f\u662f\u6709\u5173\u7cfb\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u6ee1\u8db3\u4e0b\u9762\u7684\u5173\u7cfb\uff1a \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u8bb2\u4e86\u6df1\u5ea6\u4e3a1\u7684\u5377\u79ef\u5c42\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5982\u679c\u6df1\u5ea6\u5927\u4e8e1\u600e\u4e48\u8ba1\u7b97\u5462\uff1f\u5176\u5b9e\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\u5982\u679c\u5377\u79ef\u524d\u7684\u56fe\u50cf\u6df1\u5ea6\u4e3aD\uff0c\u90a3\u4e48\u76f8\u5e94\u7684filter\u7684\u6df1\u5ea6\u4e5f\u5fc5\u987b\u4e3aD\u3002\u6211\u4eec\u6269\u5c55\u4e00\u4e0b\u5f0f1\uff0c\u5f97\u5230\u4e86\u6df1\u5ea6\u5927\u4e8e1\u7684\u5377\u79ef\u8ba1\u7b97\u516c\u5f0f\uff1a \u5728\u5f0f4\u4e2d\uff0cD\u662f\u6df1\u5ea6\uff1bF\u662ffilter\u7684\u5927\u5c0f(\u5bbd\u5ea6\u6216\u9ad8\u5ea6\uff0c\u4e24\u8005\u76f8\u540c)\uff1b\u8868\u793afilter\u7684\u7b2c\u5c42\u7b2c\u884c\u7b2c\u5217\u6743\u91cd\uff1bWd,m,n\u8868\u793a\u56fe\u50cf\u7684\u7b2cd\u5c42\u7b2cm\u884c\u7b2cn\u5217\u50cf\u7d20\uff1b\u5176\u5b83\u7684\u7b26\u53f7\u542b\u4e49\u548c\u5f0f1\u662f\u76f8\u540c\u7684\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 \u6211\u4eec\u524d\u9762\u8fd8\u66fe\u63d0\u5230\uff0c\u6bcf\u4e2a\u5377\u79ef\u5c42\u53ef\u4ee5\u6709\u591a\u4e2afilter\u3002\u6bcf\u4e2afilter\u548c\u539f\u59cb\u56fe\u50cf\u8fdb\u884c\u5377\u79ef\u540e\uff0c\u90fd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2aFeature Map\u3002\u56e0\u6b64\uff0c\u5377\u79ef\u540eFeature Map\u7684\u6df1\u5ea6(\u4e2a\u6570)\u548c\u5377\u79ef\u5c42\u7684filter\u4e2a\u6570\u662f\u76f8\u540c\u7684\u3002 \u4e0b\u9762\u7684\u52a8\u753b\u663e\u793a\u4e86\u5305\u542b\u4e24\u4e2afilter\u7684\u5377\u79ef\u5c42\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u52307*7*3\u8f93\u5165\uff0c\u7ecf\u8fc7\u4e24\u4e2a3*3*3filter\u7684\u5377\u79ef(\u6b65\u5e45\u4e3a2)\uff0c\u5f97\u5230\u4e863*3*2\u7684\u8f93\u51fa\u3002\u53e6\u5916\u6211\u4eec\u4e5f\u4f1a\u770b\u5230\u4e0b\u56fe\u7684Zero padding\u662f1\uff0c\u4e5f\u5c31\u662f\u5728\u8f93\u5165\u5143\u7d20\u7684\u5468\u56f4\u8865\u4e86\u4e00\u57080\u3002Zero padding\u5bf9\u4e8e\u56fe\u50cf\u8fb9\u7f18\u90e8\u5206\u7684\u7279\u5f81\u63d0\u53d6\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002 \u4ee5\u4e0a\u5c31\u662f\u5377\u79ef\u5c42\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u8fd9\u91cc\u9762\u4f53\u73b0\u4e86 \u5c40\u90e8\u8fde\u63a5 \u548c \u6743\u503c\u5171\u4eab \uff1a\u6bcf\u5c42\u795e\u7ecf\u5143\u53ea\u548c\u4e0a\u4e00\u5c42\u90e8\u5206\u795e\u7ecf\u5143\u76f8\u8fde(\u5377\u79ef\u8ba1\u7b97\u89c4\u5219)\uff0c\u4e14filter\u7684\u6743\u503c\u5bf9\u4e8e\u4e0a\u4e00\u5c42\u6240\u6709\u795e\u7ecf\u5143\u90fd\u662f\u4e00\u6837\u7684\u3002\u5bf9\u4e8e\u5305\u542b\u4e24\u4e2a3*3*3\u7684fitler\u7684\u5377\u79ef\u5c42\u6765\u8bf4\uff0c\u5176\u53c2\u6570\u6570\u91cf\u4ec5\u6709(3*3*3+1)*2=56\u4e2a\uff0c\u4e14\u53c2\u6570\u6570\u91cf\u4e0e\u4e0a\u4e00\u5c42\u795e\u7ecf\u5143\u4e2a\u6570\u65e0\u5173\u3002\u4e0e\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u76f8\u6bd4\uff0c\u5176\u53c2\u6570\u6570\u91cf\u5927\u5927\u51cf\u5c11\u4e86\u3002 \u5f0f4\u7684\u8868\u8fbe\u5f88\u662f\u7e41\u5197\uff0c\u6700\u597d\u80fd\u7b80\u5316\u4e00\u4e0b\u3002\u5c31\u50cf\u5229\u7528\u77e9\u9635\u53ef\u4ee5\u7b80\u5316\u8868\u8fbe\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u7684\u8ba1\u7b97\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 \u5377\u79ef\u516c\u5f0f\u6765\u7b80\u5316\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u8868\u8fbe \u3002 \u6c60\u5316(Pooling)\u5c42\u8f93\u51fa\u503c\u8ba1\u7b97 \u00b6 Pooling\u5c42\u4e3b\u8981\u7684\u4f5c\u7528\u662f \u4e0b\u91c7\u6837 \uff0c\u901a\u8fc7\u53bb\u6389Feature Map\u4e2d\u4e0d\u91cd\u8981\u7684\u6837\u672c\uff0c\u8fdb\u4e00\u6b65\u51cf\u5c11\u53c2\u6570\u6570\u91cf\u3002Pooling\u7684\u65b9\u6cd5\u5f88\u591a\uff0c\u6700\u5e38\u7528\u7684\u662f Max Pooling \u3002Max Pooling\u5b9e\u9645\u4e0a\u5c31\u662f\u5728n*n\u7684\u6837\u672c\u4e2d\u53d6\u6700\u5927\u503c\uff0c\u4f5c\u4e3a\u91c7\u6837\u540e\u7684\u6837\u672c\u503c\u3002\u4e0b\u56fe\u662f2*2 max pooling\uff1a \u9664\u4e86Max Pooing\u4e4b\u5916\uff0c\u5e38\u7528\u7684\u8fd8\u6709 Mean Pooling \u2014\u2014\u53d6\u5404\u6837\u672c\u7684\u5e73\u5747\u503c\u3002 \u5bf9\u4e8e\u6df1\u5ea6\u4e3aD\u7684Feature Map\uff0c\u5404\u5c42\u72ec\u7acb\u505aPooling\uff0c\u56e0\u6b64Pooling\u540e\u7684\u6df1\u5ea6\u4ecd\u7136\u4e3aD\u3002 \u5168\u8fde\u63a5(Connected)\u5c42\u8f93\u51fa\u503c\u8ba1\u7b97 \u00b6 \u5168\u8fde\u63a5\u5c42\u8f93\u51fa\u503c\u7684\u8ba1\u7b97\u548c\u4e0a\u4e00\u7bc7\u6587\u7ae0 \u795e\u7ecf\u7f51\u7edc \u8bb2\u8fc7\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002 \u8bad\u7ec3 \u00b6 \u548c\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u76f8\u6bd4\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u8981\u590d\u6742\u4e00\u4e9b\u3002\u4f46\u8bad\u7ec3\u7684\u539f\u7406\u662f\u4e00\u6837\u7684\uff1a\u5229\u7528 \u94fe\u5f0f\u6c42\u5bfc \u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5bf9\u6bcf\u4e2a\u6743\u91cd\u7684\u504f\u5bfc\u6570\uff08\u68af\u5ea6\uff09\uff0c\u7136\u540e\u6839\u636e\u68af\u5ea6\u4e0b\u964d\u516c\u5f0f\u66f4\u65b0\u6743\u91cd\u3002\u8bad\u7ec3\u7b97\u6cd5\u4f9d\u7136\u662f\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002 \u6211\u4eec\u5148\u56de\u5fc6\u4e00\u4e0b\u4e0a\u4e00\u7bc7\u6587\u7ae0 \u795e\u7ecf\u7f51\u7edc \u4ecb\u7ecd\u7684\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\uff0c\u6574\u4e2a\u7b97\u6cd5\u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4\uff1a \u5bf9\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u7531\u4e8e\u6d89\u53ca\u5230 \u5c40\u90e8\u8fde\u63a5 \u3001 \u4e0b\u91c7\u6837 \u7684\u7b49\u64cd\u4f5c\uff0c\u5f71\u54cd\u5230\u4e86\u7b2c\u4e8c\u6b65\u8bef\u5dee\u9879\u03b4\u7684\u5177\u4f53\u8ba1\u7b97\u65b9\u6cd5\uff0c\u800c\u6743\u503c\u5171\u4eab\u5f71\u54cd\u4e86\u7b2c\u4e09\u6b65\u6743\u91cd\u7684\u68af\u5ea6\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5206\u522b\u4ecb\u7ecd\u5377\u79ef\u5c42\u548cPooling\u5c42\u7684\u8bad\u7ec3\u7b97\u6cd5\u3002 \u5377\u79ef\u5c42\u8bad\u7ec3 \u00b6 \u5bf9\u4e8e\u5377\u79ef\u5c42\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u4e0a\u9762\u7684\u7b2c\u4e8c\u6b65\uff0c\u5373\u5982\u4f55\u5c06\u8bef\u5dee\u9879\u03b4\u4f20\u9012\u5230\u4e0a\u4e00\u5c42\uff1b\u7136\u540e\u518d\u6765\u770b\u770b\u7b2c\u4e09\u6b65\uff0c\u5373\u5982\u4f55\u8ba1\u7b97filter\u6bcf\u4e2a\u6743\u503c\u7684\u68af\u5ea6\u3002 \u5377\u79ef\u5c42\u8bef\u5dee\u9879\u7684\u4f20\u9012 \u00b6 \u6700\u7b80\u5355\u60c5\u51b5\u4e0b\u8bef\u5dee\u9879\u7684\u4f20\u9012 \u00b6 \u5377\u79ef\u6b65\u957f\u4e3aS\u65f6\u7684\u8bef\u5dee\u4f20\u9012 \u00b6 \u8f93\u5165\u5c42\u6df1\u5ea6\u4e3aD\u65f6\u7684\u8bef\u5dee\u4f20\u9012 \u00b6 filter\u6570\u91cf\u4e3aN\u65f6\u7684\u8bef\u5dee\u4f20\u9012 \u00b6 \u5377\u79ef\u5c42filter\u6743\u91cd\u68af\u5ea6\u7684\u8ba1\u7b97 \u00b6 \u6c60\u5316\u5c42\u8bad\u7ec3 \u00b6 Max Pooling\u8bef\u5dee\u9879\u7684\u4f20\u9012 \u00b6 Mean Pooling\u8bef\u5dee\u9879\u7684\u4f20\u9012 \u00b6 \u7ecf\u5178\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u00b6 LeNet LeNet\u8bde\u751f\u4e8e1994\u5e74\uff0c\u7531\u6df1\u5ea6\u5b66\u4e60\u4e09\u5de8\u5934\u4e4b\u4e00\u7684Yan LeCun\u63d0\u51fa\uff0c\u4ed6\u4e5f\u88ab\u79f0\u4e3a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e4b\u7236\u3002LeNet\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u624b\u5199\u5b57\u7b26\u7684\u8bc6\u522b\u4e0e\u5206\u7c7b\uff0c\u51c6\u786e\u7387\u8fbe\u5230\u4e8698%\uff0c\u5e76\u5728\u7f8e\u56fd\u7684\u94f6\u884c\u4e2d\u6295\u5165\u4e86\u4f7f\u7528\uff0c\u88ab\u7528\u4e8e\u8bfb\u53d6\u5317\u7f8e\u7ea610%\u7684\u652f\u7968\u3002LeNet\u5960\u5b9a\u4e86\u73b0\u4ee3\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u7840\u3002 AlexNet AlexNet\u7531Hinton\u7684\u5b66\u751fAlex Krizhevsky\u4e8e2012\u5e74\u63d0\u51fa\uff0c\u5e76\u5728\u5f53\u5e74\u53d6\u5f97\u4e86Imagenet\u6bd4\u8d5b\u51a0\u519b\u3002AlexNet\u53ef\u4ee5\u7b97\u662fLeNet\u7684\u4e00\u79cd\u66f4\u6df1\u66f4\u5bbd\u7684\u7248\u672c\uff0c\u8bc1\u660e\u4e86\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u590d\u6742\u6a21\u578b\u4e0b\u7684\u6709\u6548\u6027\uff0c\u7b97\u662f\u795e\u7ecf\u7f51\u7edc\u5728\u4f4e\u8c37\u671f\u7684\u7b2c\u4e00\u6b21\u53d1\u58f0\uff0c\u786e\u7acb\u4e86\u6df1\u5ea6\u5b66\u4e60\uff0c\u6216\u8005\u8bf4\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u7edf\u6cbb\u5730\u4f4d\u3002 VGGNet VGGNet\u662f\u725b\u6d25\u5927\u5b66\u8ba1\u7b97\u673a\u89c6\u89c9\u7ec4\u548cGoogle DeepMind\u516c\u53f8\u4e00\u8d77\u7814\u53d1\u7684\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u53d6\u5f97\u4e862014\u5e74Imagenet\u6bd4\u8d5b\u5b9a\u4f4d\u9879\u76ee\u7b2c\u4e00\u540d\u548c\u5206\u7c7b\u9879\u76ee\u7b2c\u4e8c\u540d\u3002\u8be5\u7f51\u7edc\u4e3b\u8981\u662f\u6cdb\u5316\u6027\u80fd\u5f88\u597d\uff0c\u5bb9\u6613\u8fc1\u79fb\u5230\u5176\u4ed6\u7684\u56fe\u50cf\u8bc6\u522b\u9879\u76ee\u4e0a\uff0c\u53ef\u4ee5\u4e0b\u8f7dVGGNet\u8bad\u7ec3\u597d\u7684\u53c2\u6570\u8fdb\u884c\u5f88\u597d\u7684\u521d\u59cb\u5316\u6743\u91cd\u64cd\u4f5c\uff0c\u5f88\u591a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u90fd\u662f\u4ee5\u8be5\u7f51\u7edc\u4e3a\u57fa\u7840\uff0c\u6bd4\u5982FCN\uff0cUNet\uff0cSegNet\u7b49\u3002vgg\u7248\u672c\u5f88\u591a\uff0c\u5e38\u7528\u7684\u662fVGG16\uff0cVGG19\u7f51\u7edc\u3002 ResNet ResNet\uff08\u6b8b\u5dee\u795e\u7ecf\u7f51\u7edc\uff09\u7531\u5fae\u8f6f\u7814\u7a76\u9662\u7684\u4f55\u51ef\u660e\u7b494\u540d\u534e\u4eba\u4e8e2015\u5e74\u63d0\u51fa\uff0c\u6210\u529f\u8bad\u7ec3\u4e86152\u5c42\u8d85\u7ea7\u6df1\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u6548\u679c\u975e\u5e38\u7a81\u51fa\uff0c\u800c\u4e14\u5bb9\u6613\u7ed3\u5408\u5230\u5176\u4ed6\u7f51\u7edc\u7ed3\u6784\u4e2d\u3002\u5728\u4e94\u4e2a\u4e3b\u8981\u4efb\u52a1\u8f68\u8ff9\u4e2d\u90fd\u83b7\u5f97\u4e86\u7b2c\u4e00\u540d\u7684\u6210\u7ee9\uff1a 1 2 3 4 5 6 7 8 9 ImageNet\u5206\u7c7b\u4efb\u52a1\uff1a\u9519\u8bef\u73873.57% ImageNet\u68c0\u6d4b\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d16% ImageNet\u5b9a\u4f4d\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d27% COCO\u68c0\u6d4b\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d11% COCO\u5206\u5272\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d12% \u53d1\u5c55\u56fe: \u4ee3\u7801\u5b9e\u73b0 \u00b6 \u57fa\u4e8eTensorflow\u7684CNN\u5b9e\u73b0\u624b\u5199\u4f53\u8bc6\u522b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 #coding:utf-8 import tensorflow as tf #import MNIST_data.input_data as input_data from tensorflow.examples.tutorials.mnist import input_data import time \"\"\" \u6743\u91cd\u521d\u59cb\u5316 \u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u63a5\u8fd10\u7684\u5f88\u5c0f\u7684\u6b63\u6570 \"\"\" def weight_variable ( shape ): initial = tf . truncated_normal ( shape , stddev = 0.1 ) return tf . Variable ( initial ) def bias_variable ( shape ): initial = tf . constant ( 0.1 , shape = shape ) return tf . Variable ( initial ) \"\"\" \u5377\u79ef\u548c\u6c60\u5316\uff0c\u4f7f\u7528\u5377\u79ef\u6b65\u957f\u4e3a1\uff08stride size\uff09,0\u8fb9\u8ddd\uff08padding size\uff09 \u6c60\u5316\u7528\u7b80\u5355\u4f20\u7edf\u76842x2\u5927\u5c0f\u7684\u6a21\u677f\u505amax pooling \"\"\" def conv2d ( x , W ): return tf . nn . conv2d ( x , W , strides = [ 1 , 1 , 1 , 1 ], padding = 'SAME' ) # tf.nn.conv2d(input, filter, strides, padding, use_cudnn_on_gpu=None, data_format=None, name=None) # x(input) : [batch, in_height, in_width, in_channels] # W(filter) : [filter_height, filter_width, in_channels, out_channels] # strides : The stride of the sliding window for each dimension of input. # For the most common case of the same horizontal and vertices strides, strides = [1, stride, stride, 1] def max_pool_2x2 ( x ): return tf . nn . max_pool ( x , ksize = [ 1 , 2 , 2 , 1 ], strides = [ 1 , 2 , 2 , 1 ], padding = 'SAME' ) # tf.nn.max_pool(value, ksize, strides, padding, data_format='NHWC', name=None) # x(value) : [batch, height, width, channels] # ksize(pool\u5927\u5c0f) : A list of ints that has length >= 4. The size of the window for each dimension of the input tensor. # strides(pool\u6ed1\u52a8\u5927\u5c0f) : A list of ints that has length >= 4. The stride of the sliding window for each dimension of the input tensor. start = time . clock () #\u8ba1\u7b97\u5f00\u59cb\u65f6\u95f4 mnist = input_data . read_data_sets ( \"MNIST_data/\" , one_hot = True ) #MNIST\u6570\u636e\u8f93\u5165 \"\"\" \u7b2c\u4e00\u5c42 \u5377\u79ef\u5c42 x_image(batch, 28, 28, 1) -> h_pool1(batch, 14, 14, 32) \"\"\" x = tf . placeholder ( tf . float32 ,[ None , 784 ]) x_image = tf . reshape ( x , [ - 1 , 28 , 28 , 1 ]) #\u6700\u540e\u4e00\u7ef4\u4ee3\u8868\u901a\u9053\u6570\u76ee\uff0c\u5982\u679c\u662frgb\u5219\u4e3a3 W_conv1 = weight_variable ([ 5 , 5 , 1 , 32 ]) b_conv1 = bias_variable ([ 32 ]) h_conv1 = tf . nn . relu ( conv2d ( x_image , W_conv1 ) + b_conv1 ) # x_image -> [batch, in_height, in_width, in_channels] # [batch, 28, 28, 1] # W_conv1 -> [filter_height, filter_width, in_channels, out_channels] # [5, 5, 1, 32] # output -> [batch, out_height, out_width, out_channels] # [batch, 28, 28, 32] h_pool1 = max_pool_2x2 ( h_conv1 ) # h_conv1 -> [batch, in_height, in_weight, in_channels] # [batch, 28, 28, 32] # output -> [batch, out_height, out_weight, out_channels] # [batch, 14, 14, 32] \"\"\" \u7b2c\u4e8c\u5c42 \u5377\u79ef\u5c42 h_pool1(batch, 14, 14, 32) -> h_pool2(batch, 7, 7, 64) \"\"\" W_conv2 = weight_variable ([ 5 , 5 , 32 , 64 ]) b_conv2 = bias_variable ([ 64 ]) h_conv2 = tf . nn . relu ( conv2d ( h_pool1 , W_conv2 ) + b_conv2 ) # h_pool1 -> [batch, 14, 14, 32] # W_conv2 -> [5, 5, 32, 64] # output -> [batch, 14, 14, 64] h_pool2 = max_pool_2x2 ( h_conv2 ) # h_conv2 -> [batch, 14, 14, 64] # output -> [batch, 7, 7, 64] \"\"\" \u7b2c\u4e09\u5c42 \u5168\u8fde\u63a5\u5c42 h_pool2(batch, 7, 7, 64) -> h_fc1(1, 1024) \"\"\" W_fc1 = weight_variable ([ 7 * 7 * 64 , 1024 ]) b_fc1 = bias_variable ([ 1024 ]) h_pool2_flat = tf . reshape ( h_pool2 , [ - 1 , 7 * 7 * 64 ]) h_fc1 = tf . nn . relu ( tf . matmul ( h_pool2_flat , W_fc1 ) + b_fc1 ) \"\"\" Dropout h_fc1 -> h_fc1_drop, \u8bad\u7ec3\u4e2d\u542f\u7528\uff0c\u6d4b\u8bd5\u4e2d\u5173\u95ed \"\"\" keep_prob = tf . placeholder ( \"float\" ) h_fc1_drop = tf . nn . dropout ( h_fc1 , keep_prob ) \"\"\" \u7b2c\u56db\u5c42 Softmax\u8f93\u51fa\u5c42 \"\"\" W_fc2 = weight_variable ([ 1024 , 10 ]) b_fc2 = bias_variable ([ 10 ]) y_conv = tf . nn . softmax ( tf . matmul ( h_fc1_drop , W_fc2 ) + b_fc2 ) \"\"\" \u8bad\u7ec3\u548c\u8bc4\u4f30\u6a21\u578b ADAM\u4f18\u5316\u5668\u6765\u505a\u68af\u5ea6\u6700\u901f\u4e0b\u964d,feed_dict\u4e2d\u52a0\u5165\u53c2\u6570keep_prob\u63a7\u5236dropout\u6bd4\u4f8b \"\"\" y_ = tf . placeholder ( \"float\" , [ None , 10 ]) cross_entropy = - tf . reduce_sum ( y_ * tf . log ( y_conv )) #\u8ba1\u7b97\u4ea4\u53c9\u71b5 train_step = tf . train . AdamOptimizer ( 1e-4 ) . minimize ( cross_entropy ) #\u4f7f\u7528adam\u4f18\u5316\u5668\u6765\u4ee50.0001\u7684\u5b66\u4e60\u7387\u6765\u8fdb\u884c\u5fae\u8c03 correct_prediction = tf . equal ( tf . argmax ( y_conv , 1 ), tf . argmax ( y_ , 1 )) #\u5224\u65ad\u9884\u6d4b\u6807\u7b7e\u548c\u5b9e\u9645\u6807\u7b7e\u662f\u5426\u5339\u914d accuracy = tf . reduce_mean ( tf . cast ( correct_prediction , \"float\" )) sess = tf . Session () #\u542f\u52a8\u521b\u5efa\u7684\u6a21\u578b sess . run ( tf . initialize_all_variables ()) #\u65e7\u7248\u672c #sess.run(tf.global_variables_initializer()) #\u521d\u59cb\u5316\u53d8\u91cf for i in range ( 1000 ): #\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b\uff0c\u5faa\u73af\u8bad\u7ec35000\u6b21 batch = mnist . train . next_batch ( 50 ) #batch\u5927\u5c0f\u8bbe\u7f6e\u4e3a50 if i % 100 == 0 : train_accuracy = accuracy . eval ( session = sess , feed_dict = { x : batch [ 0 ], y_ : batch [ 1 ], keep_prob : 1.0 }) print ( \"step %d , train_accuracy %g \" % ( i , train_accuracy )) train_step . run ( session = sess , feed_dict = { x : batch [ 0 ], y_ : batch [ 1 ], keep_prob : 0.5 }) #\u795e\u7ecf\u5143\u8f93\u51fa\u4fdd\u6301\u4e0d\u53d8\u7684\u6982\u7387 keep_prob \u4e3a0.5 print ( \"test accuracy %g \" % accuracy . eval ( session = sess , feed_dict = { x : mnist . test . images , y_ : mnist . test . labels , keep_prob : 1.0 })) #\u795e\u7ecf\u5143\u8f93\u51fa\u4fdd\u6301\u4e0d\u53d8\u7684\u6982\u7387 keep_prob \u4e3a 1\uff0c\u5373\u4e0d\u53d8\uff0c\u4e00\u76f4\u4fdd\u6301\u8f93\u51fa end = time . clock () #\u8ba1\u7b97\u7a0b\u5e8f\u7ed3\u675f\u65f6\u95f4 print ( \"running time is:\" ,( end - start )) \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fd0\u884c\u7ed3\u679c\u67e5\u770b \u5176\u4ed6\u5b9e\u73b0 \u00b6 (\u540e\u7eed\u66f4\u65b0...) \u6587\u7ae0\u672b\u5c3e\u5c0f\u5f69\u86cb :\u4e00\u4efd\u6df1\u5ea6\u5b66\u4e60\u7684\u8d44\u6599 \u2460 \u84dd\u594f\u4e91\u4e0b\u8f7d \u2461 \u767e\u5ea6\u7f51\u76d8\u5907\u7528\u4e0b\u8f7d(\u63d0\u53d6\u7801:41j3)","title":"3. \u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"ai/jj/#_1","text":"\u5728\u524d\u9762\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5168\u8fde\u63a5 \u795e\u7ecf\u7f51\u7edc \uff0c\u7136\u800c\u8fd9\u79cd\u7ed3\u6784\u7684\u7f51\u7edc\u5bf9\u4e8e\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\u6765\u8bf4\u5e76\u4e0d\u662f\u5f88\u5408\u9002\u3002\u672c\u6587\u5c06\u8981\u4ecb\u7ecd\u4e00\u79cd\u66f4\u9002\u5408\u56fe\u50cf\u3001\u8bed\u97f3\u8bc6\u522b\u4efb\u52a1\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u2014\u2014\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(Convolutional Neural Network, CNN)\u3002\u8bf4\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u662f\u6700\u91cd\u8981\u7684\u4e00\u79cd\u795e\u7ecf\u7f51\u7edc\u4e5f\u4e0d\u4e3a\u8fc7\uff0c\u5b83\u5728\u6700\u8fd1\u51e0\u5e74\u5927\u653e\u5f02\u5f69\uff0c\u51e0\u4e4e\u6240\u6709\u56fe\u50cf\u3001\u8bed\u97f3\u8bc6\u522b\u9886\u57df\u7684\u91cd\u8981\u7a81\u7834\u90fd\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u53d6\u5f97\u7684\uff0c\u6bd4\u5982\u8c37\u6b4c\u7684GoogleNet\u3001\u5fae\u8f6f\u7684ResNet\u7b49\uff0c\u6253\u8d25\u674e\u4e16\u77f3\u7684AlphaGo\u4e5f\u7528\u5230\u4e86\u8fd9\u79cd\u7f51\u7edc\u3002\u672c\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u3002","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6982\u8ff0"},{"location":"ai/jj/#_2","text":"","title":"\u4ecb\u7ecd"},{"location":"ai/jj/#vs","text":"\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u4e4b\u6240\u4ee5\u4e0d\u592a\u9002\u5408\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u95ee\u9898\uff1a \u53c2\u6570\u6570\u91cf\u592a\u591a \u8003\u8651\u4e00\u4e2a\u8f93\u51651000*1000\u50cf\u7d20\u7684\u56fe\u7247(\u4e00\u767e\u4e07\u50cf\u7d20\uff0c\u73b0\u5728\u5df2\u7ecf\u4e0d\u80fd\u7b97\u5927\u56fe\u4e86)\uff0c\u8f93\u5165\u5c42\u67091000*1000=100\u4e07\u8282\u70b9\u3002\u5047\u8bbe\u7b2c\u4e00\u4e2a\u9690\u85cf\u5c42\u6709100\u4e2a\u8282\u70b9(\u8fd9\u4e2a\u6570\u91cf\u5e76\u4e0d\u591a)\uff0c\u90a3\u4e48\u4ec5\u8fd9\u4e00\u5c42\u5c31\u6709(1000*1000+1)*100=1\u4ebf\u53c2\u6570\uff0c\u8fd9\u5b9e\u5728\u662f\u592a\u591a\u4e86\uff01\u6211\u4eec\u770b\u5230\u56fe\u50cf\u53ea\u6269\u5927\u4e00\u70b9\uff0c\u53c2\u6570\u6570\u91cf\u5c31\u4f1a\u591a\u5f88\u591a\uff0c\u56e0\u6b64\u5b83\u7684\u6269\u5c55\u6027\u5f88\u5dee\u3002 \u6ca1\u6709\u5229\u7528\u50cf\u7d20\u4e4b\u95f4\u7684\u4f4d\u7f6e\u4fe1\u606f \u5bf9\u4e8e\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\u6765\u8bf4\uff0c\u6bcf\u4e2a\u50cf\u7d20\u548c\u5176\u5468\u56f4\u50cf\u7d20\u7684\u8054\u7cfb\u662f\u6bd4\u8f83\u7d27\u5bc6\u7684\uff0c\u548c\u79bb\u5f97\u5f88\u8fdc\u7684\u50cf\u7d20\u7684\u8054\u7cfb\u53ef\u80fd\u5c31\u5f88\u5c0f\u4e86\u3002\u5982\u679c\u4e00\u4e2a\u795e\u7ecf\u5143\u548c\u4e0a\u4e00\u5c42\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u5bf9\u4e8e\u4e00\u4e2a\u50cf\u7d20\u6765\u8bf4\uff0c\u628a\u56fe\u50cf\u7684\u6240\u6709\u50cf\u7d20\u90fd\u7b49\u540c\u770b\u5f85\uff0c\u8fd9\u4e0d\u7b26\u5408\u524d\u9762\u7684\u5047\u8bbe\u3002\u5f53\u6211\u4eec\u5b8c\u6210\u6bcf\u4e2a\u8fde\u63a5\u6743\u91cd\u7684\u5b66\u4e60\u4e4b\u540e\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u6709\u5927\u91cf\u7684\u6743\u91cd\uff0c\u5b83\u4eec\u7684\u503c\u90fd\u662f\u5f88\u5c0f\u7684(\u4e5f\u5c31\u662f\u8fd9\u4e9b\u8fde\u63a5\u5176\u5b9e\u65e0\u5173\u7d27\u8981)\u3002\u52aa\u529b\u5b66\u4e60\u5927\u91cf\u5e76\u4e0d\u91cd\u8981\u7684\u6743\u91cd\uff0c\u8fd9\u6837\u7684\u5b66\u4e60\u5fc5\u5c06\u662f\u975e\u5e38\u4f4e\u6548\u7684\u3002 \u7f51\u7edc\u5c42\u6570\u9650\u5236 \u6211\u4eec\u77e5\u9053\u7f51\u7edc\u5c42\u6570\u8d8a\u591a\u5176\u8868\u8fbe\u80fd\u529b\u8d8a\u5f3a\uff0c\u4f46\u662f\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u65b9\u6cd5\u8bad\u7ec3\u6df1\u5ea6\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u7684\u68af\u5ea6\u5f88\u96be\u4f20\u9012\u8d85\u8fc73\u5c42\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u5f97\u5230\u4e00\u4e2a\u5f88\u6df1\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\uff0c\u4e5f\u5c31\u9650\u5236\u4e86\u5b83\u7684\u80fd\u529b\u3002 \u90a3\u4e48\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u53c8\u662f\u600e\u6837\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u5462\uff1f\u4e3b\u8981\u6709\u4e09\u4e2a\u601d\u8def\uff1a \u5c40\u90e8\u8fde\u63a5 \u8fd9\u4e2a\u662f\u6700\u5bb9\u6613\u60f3\u5230\u7684\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u4e0d\u518d\u548c\u4e0a\u4e00\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u800c\u53ea\u548c\u4e00\u5c0f\u90e8\u5206\u795e\u7ecf\u5143\u76f8\u8fde\u3002\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u53c2\u6570\u3002 \u6743\u503c\u5171\u4eab \u4e00\u7ec4\u8fde\u63a5\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u6743\u91cd\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u8fde\u63a5\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u6743\u91cd\uff0c\u8fd9\u6837\u53c8\u51cf\u5c11\u4e86\u5f88\u591a\u53c2\u6570\u3002 \u4e0b\u91c7\u6837 \u53ef\u4ee5\u4f7f\u7528Pooling\u6765\u51cf\u5c11\u6bcf\u5c42\u7684\u6837\u672c\u6570\uff0c\u8fdb\u4e00\u6b65\u51cf\u5c11\u53c2\u6570\u6570\u91cf\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u63d0\u5347\u6a21\u578b\u7684\u9c81\u68d2\u6027\u3002 \u5bf9\u4e8e\u56fe\u50cf\u8bc6\u522b\u4efb\u52a1\u6765\u8bf4\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u901a\u8fc7\u5c3d\u53ef\u80fd\u4fdd\u7559\u91cd\u8981\u7684\u53c2\u6570\uff0c\u53bb\u6389\u5927\u91cf\u4e0d\u91cd\u8981\u7684\u53c2\u6570\uff0c\u6765\u8fbe\u5230\u66f4\u597d\u7684\u5b66\u4e60\u6548\u679c\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8be6\u8ff0\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5230\u5e95\u662f\u4f55\u65b9\u795e\u5723\u3002","title":"\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc VS \u5377\u79ef\u7f51\u7edc"},{"location":"ai/jj/#_3","text":"\u9996\u5148\uff0c\u6211\u4eec\u5148\u83b7\u53d6\u4e00\u4e2a\u611f\u6027\u8ba4\u8bc6\uff0c\u4e0b\u56fe\u662f\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u793a\u610f\u56fe\uff1a \u7f51\u7edc\u67b6\u6784 \u5982\u56fe\u6240\u793a\uff0c\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7531\u82e5\u5e72 \u5377\u79ef\u5c42 \u3001 Pooling\u5c42 \u3001 \u5168\u8fde\u63a5\u5c42 \u7ec4\u6210\u3002\u4f60\u53ef\u4ee5\u6784\u5efa\u5404\u79cd\u4e0d\u540c\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5b83\u7684\u5e38\u7528\u67b6\u6784\u6a21\u5f0f\u4e3a\uff1a INPUT -> [[CONV] N -> POOL?] M -> [FC]*K \u4e5f\u5c31\u662fN\u4e2a\u5377\u79ef\u5c42\u53e0\u52a0\uff0c\u7136\u540e(\u53ef\u9009)\u53e0\u52a0\u4e00\u4e2aPooling\u5c42\uff0c\u91cd\u590d\u8fd9\u4e2a\u7ed3\u6784M\u6b21\uff0c\u6700\u540e\u53e0\u52a0K\u4e2a\u5168\u8fde\u63a5\u5c42\u3002 \u5bf9\u4e8e\u4e0a\u56fe\u5c55\u793a\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff1a INPUT -> CONV -> POOL -> CONV -> POOL -> FC -> FC \u6309\u7167\u4e0a\u8ff0\u6a21\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a INPUT -> [[CONV] 1 -> POOL] 2 -> [FC]*2 \u4e5f\u5c31\u662f\uff1aN=1, M=2, K=2\u3002","title":"\u8ba4\u8bc6"},{"location":"ai/jj/#_4","text":"\u4ece\u4e0a\u56fe\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u7684\u5c42\u7ed3\u6784\u548c \u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc \u7684\u5c42\u7ed3\u6784\u6709\u5f88\u5927\u4e0d\u540c\u3002 \u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc \u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u662f\u6309\u7167 \u4e00\u7ef4 \u6392\u5217\u7684\uff0c\u4e5f\u5c31\u662f\u6392\u6210\u4e00\u6761\u7ebf\u7684\u6837\u5b50\uff1b\u800c \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u6bcf\u5c42\u7684\u795e\u7ecf\u5143\u662f\u6309\u7167 \u4e09\u7ef4 \u6392\u5217\u7684\uff0c\u4e5f\u5c31\u662f\u6392\u6210\u4e00\u4e2a\u957f\u65b9\u4f53\u7684\u6837\u5b50\uff0c\u6709 \u5bbd\u5ea6 \u3001 \u9ad8\u5ea6 \u548c \u6df1\u5ea6 \u3002 \u5bf9\u4e8e\u4e0a\u56fe\u5c55\u793a\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u6211\u4eec\u770b\u5230\u8f93\u5165\u5c42\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5bf9\u5e94\u4e8e\u8f93\u5165\u56fe\u50cf\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u800c\u5b83\u7684\u6df1\u5ea6\u4e3a1\u3002\u63a5\u7740\uff0c\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u5bf9\u8fd9\u5e45\u56fe\u50cf\u8fdb\u884c\u4e86\u5377\u79ef\u64cd\u4f5c(\u540e\u9762\u6211\u4eec\u4f1a\u8bb2\u5982\u4f55\u8ba1\u7b97\u5377\u79ef)\uff0c\u5f97\u5230\u4e86\u4e09\u4e2aFeature Map\u3002\u8fd9\u91cc\u7684\"3\"\u53ef\u80fd\u662f\u8ba9\u5f88\u591a\u521d\u5b66\u8005\u8ff7\u60d1\u7684\u5730\u65b9\uff0c\u5b9e\u9645\u4e0a\uff0c\u5c31\u662f\u8fd9\u4e2a\u5377\u79ef\u5c42\u5305\u542b\u4e09\u4e2aFilter\uff0c\u4e5f\u5c31\u662f\u4e09\u5957\u53c2\u6570\uff0c\u6bcf\u4e2aFilter\u90fd\u53ef\u4ee5\u628a\u539f\u59cb\u8f93\u5165\u56fe\u50cf\u5377\u79ef\u5f97\u5230\u4e00\u4e2aFeature Map\uff0c\u4e09\u4e2aFilter\u5c31\u53ef\u4ee5\u5f97\u5230\u4e09\u4e2aFeature Map\u3002\u81f3\u4e8e\u4e00\u4e2a\u5377\u79ef\u5c42\u53ef\u4ee5\u6709\u591a\u5c11\u4e2aFilter\uff0c\u90a3\u662f\u53ef\u4ee5\u81ea\u7531\u8bbe\u5b9a\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5377\u79ef\u5c42\u7684Filter\u4e2a\u6570\u4e5f\u662f\u4e00\u4e2a \u8d85\u53c2\u6570 \u3002\u6211\u4eec\u53ef\u4ee5\u628aFeature Map\u53ef\u4ee5\u770b\u505a\u662f\u901a\u8fc7\u5377\u79ef\u53d8\u6362\u63d0\u53d6\u5230\u7684\u56fe\u50cf\u7279\u5f81\uff0c\u4e09\u4e2aFilter\u5c31\u5bf9\u539f\u59cb\u56fe\u50cf\u63d0\u53d6\u51fa\u4e09\u7ec4\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u4e5f\u5c31\u662f\u5f97\u5230\u4e86\u4e09\u4e2aFeature Map\uff0c\u4e5f\u79f0\u505a\u4e09\u4e2a \u901a\u9053(channel) \u3002 \u7ee7\u7eed\u89c2\u5bdf\u4e0a\u56fe\uff0c\u5728\u7b2c\u4e00\u4e2a\u5377\u79ef\u5c42\u4e4b\u540e\uff0cPooling\u5c42\u5bf9\u4e09\u4e2aFeature Map\u505a\u4e86 \u4e0b\u91c7\u6837 (\u540e\u9762\u6211\u4eec\u4f1a\u8bb2\u5982\u4f55\u8ba1\u7b97\u4e0b\u91c7\u6837)\uff0c\u5f97\u5230\u4e86\u4e09\u4e2a\u66f4\u5c0f\u7684Feature Map\u3002\u63a5\u7740\uff0c\u662f\u7b2c\u4e8c\u4e2a \u5377\u79ef\u5c42 \uff0c\u5b83\u67095\u4e2aFilter\u3002\u6bcf\u4e2aFitler\u90fd\u628a\u524d\u9762\u4e0b\u91c7\u6837\u4e4b\u540e\u76843\u4e2a Feature Map\u5377\u79ef\u5728\u4e00\u8d77\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u7684Feature Map\u3002\u8fd9\u6837\uff0c5\u4e2aFilter\u5c31\u5f97\u5230\u4e865\u4e2aFeature Map\u3002\u63a5\u7740\uff0c\u662f\u7b2c\u4e8c\u4e2aPooling\uff0c\u7ee7\u7eed\u5bf95\u4e2aFeature Map\u8fdb\u884c\u4e0b\u91c7\u6837 \uff0c\u5f97\u5230\u4e865\u4e2a\u66f4\u5c0f\u7684Feature Map\u3002 \u4e0a\u56fe\u6240\u793a\u7f51\u7edc\u7684\u6700\u540e\u4e24\u5c42\u662f\u5168\u8fde\u63a5\u5c42\u3002\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u548c\u4e0a\u4e00\u5c425\u4e2aFeature Map\u4e2d\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u7b2c\u4e8c\u4e2a\u5168\u8fde\u63a5\u5c42(\u4e5f\u5c31\u662f\u8f93\u51fa\u5c42)\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\uff0c\u5219\u548c\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u7684\u6bcf\u4e2a\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u8fd9\u6837\u5f97\u5230\u4e86\u6574\u4e2a\u7f51\u7edc\u7684\u8f93\u51fa\u3002 \u81f3\u6b64\uff0c\u6211\u4eec\u5bf9\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6709\u4e86\u6700\u57fa\u672c\u7684\u611f\u6027\u8ba4\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u5404\u79cd\u5c42\u7684\u8ba1\u7b97\u3002","title":"\u7ed3\u6784"},{"location":"ai/jj/#_5","text":"","title":"\u8ba1\u7b97"},{"location":"ai/jj/#convolution","text":"\u6211\u4eec\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bb2\u8ff0\u5982\u4f55\u8ba1\u7b97\u5377\u79ef\uff0c\u7136\u540e\uff0c\u6211\u4eec\u62bd\u8c61\u51fa\u5377\u79ef\u5c42\u7684\u4e00\u4e9b\u91cd\u8981\u6982\u5ff5\u548c\u8ba1\u7b97\u65b9\u6cd5\u3002 \u5047\u8bbe\u6709\u4e00\u4e2a5 5\u7684\u56fe\u50cf\uff0c\u4f7f\u7528\u4e00\u4e2a3 3\u7684filter\u8fdb\u884c\u5377\u79ef\uff0c\u60f3\u5f97\u5230\u4e00\u4e2a3*3\u7684Feature Map\uff0c\u5982\u4e0b\u6240\u793a\uff1a \u4e3a\u4e86\u6e05\u695a\u7684\u63cf\u8ff0\u5377\u79ef\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u6211\u4eec\u9996\u5148\u5bf9\u56fe\u50cf\u7684\u6bcf\u4e2a\u50cf\u7d20\u8fdb\u884c\u7f16\u53f7\uff0c\u7528Xi,j\u8868\u793a\u56fe\u50cf\u7684\u7b2ci\u884c\u7b2cj\u5217\u5143\u7d20\uff1b\u5bf9filter\u7684\u6bcf\u4e2a\u6743\u91cd\u8fdb\u884c\u7f16\u53f7\uff0c\u7528Wm,n\u8868\u793a\u7b2cm\u884c\u7b2cn\u5217\u6743\u91cd\uff0c\u7528Wb\u8868\u793afilter\u7684\u504f\u7f6e\u9879\uff1b\u5bf9Feature Map\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u7f16\u53f7\uff0c\u7528ai,j\u8868\u793aFeature Map\u7684\u7b2ci\u884c\u7b2cj\u5217\u5143\u7d20\uff1b\u7528f\u8868\u793a\u6fc0\u6d3b\u51fd\u6570(\u8fd9\u4e2a\u4f8b\u5b50\u9009\u62e9relu\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570)\u3002\u7136\u540e\uff0c\u4f7f\u7528\u4e0b\u5217\u516c\u5f0f\u8ba1\u7b97\u5377\u79ef\uff1a \u8ba1\u7b97\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u53ef\u4ee5\u4f9d\u6b21\u8ba1\u7b97\u51faFeature Map\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\u3002\u4e0b\u9762\u7684\u52a8\u753b\u663e\u793a\u4e86\u6574\u4e2aFeature Map\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff1a \u4e0a\u9762\u7684\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u6b65\u5e45(stride)\u4e3a1\u3002\u6b65\u5e45\u53ef\u4ee5\u8bbe\u4e3a\u5927\u4e8e1\u7684\u6570\u3002\u4f8b\u5982\uff0c\u5f53\u6b65\u5e45\u4e3a2\u65f6\uff0cFeature Map\u8ba1\u7b97\u5982\u4e0b\uff1a \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5f53\u6b65\u5e45\u8bbe\u7f6e\u4e3a2\u7684\u65f6\u5019\uff0cFeature Map\u5c31\u53d8\u62102*2\u4e86\u3002\u8fd9\u8bf4\u660e\u56fe\u50cf\u5927\u5c0f\u3001\u6b65\u5e45\u548c\u5377\u79ef\u540e\u7684Feature Map\u5927\u5c0f\u662f\u6709\u5173\u7cfb\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u6ee1\u8db3\u4e0b\u9762\u7684\u5173\u7cfb\uff1a \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u8bb2\u4e86\u6df1\u5ea6\u4e3a1\u7684\u5377\u79ef\u5c42\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5982\u679c\u6df1\u5ea6\u5927\u4e8e1\u600e\u4e48\u8ba1\u7b97\u5462\uff1f\u5176\u5b9e\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002\u5982\u679c\u5377\u79ef\u524d\u7684\u56fe\u50cf\u6df1\u5ea6\u4e3aD\uff0c\u90a3\u4e48\u76f8\u5e94\u7684filter\u7684\u6df1\u5ea6\u4e5f\u5fc5\u987b\u4e3aD\u3002\u6211\u4eec\u6269\u5c55\u4e00\u4e0b\u5f0f1\uff0c\u5f97\u5230\u4e86\u6df1\u5ea6\u5927\u4e8e1\u7684\u5377\u79ef\u8ba1\u7b97\u516c\u5f0f\uff1a \u5728\u5f0f4\u4e2d\uff0cD\u662f\u6df1\u5ea6\uff1bF\u662ffilter\u7684\u5927\u5c0f(\u5bbd\u5ea6\u6216\u9ad8\u5ea6\uff0c\u4e24\u8005\u76f8\u540c)\uff1b\u8868\u793afilter\u7684\u7b2c\u5c42\u7b2c\u884c\u7b2c\u5217\u6743\u91cd\uff1bWd,m,n\u8868\u793a\u56fe\u50cf\u7684\u7b2cd\u5c42\u7b2cm\u884c\u7b2cn\u5217\u50cf\u7d20\uff1b\u5176\u5b83\u7684\u7b26\u53f7\u542b\u4e49\u548c\u5f0f1\u662f\u76f8\u540c\u7684\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002 \u6211\u4eec\u524d\u9762\u8fd8\u66fe\u63d0\u5230\uff0c\u6bcf\u4e2a\u5377\u79ef\u5c42\u53ef\u4ee5\u6709\u591a\u4e2afilter\u3002\u6bcf\u4e2afilter\u548c\u539f\u59cb\u56fe\u50cf\u8fdb\u884c\u5377\u79ef\u540e\uff0c\u90fd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2aFeature Map\u3002\u56e0\u6b64\uff0c\u5377\u79ef\u540eFeature Map\u7684\u6df1\u5ea6(\u4e2a\u6570)\u548c\u5377\u79ef\u5c42\u7684filter\u4e2a\u6570\u662f\u76f8\u540c\u7684\u3002 \u4e0b\u9762\u7684\u52a8\u753b\u663e\u793a\u4e86\u5305\u542b\u4e24\u4e2afilter\u7684\u5377\u79ef\u5c42\u7684\u8ba1\u7b97\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u52307*7*3\u8f93\u5165\uff0c\u7ecf\u8fc7\u4e24\u4e2a3*3*3filter\u7684\u5377\u79ef(\u6b65\u5e45\u4e3a2)\uff0c\u5f97\u5230\u4e863*3*2\u7684\u8f93\u51fa\u3002\u53e6\u5916\u6211\u4eec\u4e5f\u4f1a\u770b\u5230\u4e0b\u56fe\u7684Zero padding\u662f1\uff0c\u4e5f\u5c31\u662f\u5728\u8f93\u5165\u5143\u7d20\u7684\u5468\u56f4\u8865\u4e86\u4e00\u57080\u3002Zero padding\u5bf9\u4e8e\u56fe\u50cf\u8fb9\u7f18\u90e8\u5206\u7684\u7279\u5f81\u63d0\u53d6\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002 \u4ee5\u4e0a\u5c31\u662f\u5377\u79ef\u5c42\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u8fd9\u91cc\u9762\u4f53\u73b0\u4e86 \u5c40\u90e8\u8fde\u63a5 \u548c \u6743\u503c\u5171\u4eab \uff1a\u6bcf\u5c42\u795e\u7ecf\u5143\u53ea\u548c\u4e0a\u4e00\u5c42\u90e8\u5206\u795e\u7ecf\u5143\u76f8\u8fde(\u5377\u79ef\u8ba1\u7b97\u89c4\u5219)\uff0c\u4e14filter\u7684\u6743\u503c\u5bf9\u4e8e\u4e0a\u4e00\u5c42\u6240\u6709\u795e\u7ecf\u5143\u90fd\u662f\u4e00\u6837\u7684\u3002\u5bf9\u4e8e\u5305\u542b\u4e24\u4e2a3*3*3\u7684fitler\u7684\u5377\u79ef\u5c42\u6765\u8bf4\uff0c\u5176\u53c2\u6570\u6570\u91cf\u4ec5\u6709(3*3*3+1)*2=56\u4e2a\uff0c\u4e14\u53c2\u6570\u6570\u91cf\u4e0e\u4e0a\u4e00\u5c42\u795e\u7ecf\u5143\u4e2a\u6570\u65e0\u5173\u3002\u4e0e\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u76f8\u6bd4\uff0c\u5176\u53c2\u6570\u6570\u91cf\u5927\u5927\u51cf\u5c11\u4e86\u3002 \u5f0f4\u7684\u8868\u8fbe\u5f88\u662f\u7e41\u5197\uff0c\u6700\u597d\u80fd\u7b80\u5316\u4e00\u4e0b\u3002\u5c31\u50cf\u5229\u7528\u77e9\u9635\u53ef\u4ee5\u7b80\u5316\u8868\u8fbe\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u7684\u8ba1\u7b97\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 \u5377\u79ef\u516c\u5f0f\u6765\u7b80\u5316\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u8868\u8fbe \u3002","title":"\u5377\u79ef(Convolution)\u5c42\u8f93\u51fa\u503c\u8ba1\u7b97"},{"location":"ai/jj/#pooling","text":"Pooling\u5c42\u4e3b\u8981\u7684\u4f5c\u7528\u662f \u4e0b\u91c7\u6837 \uff0c\u901a\u8fc7\u53bb\u6389Feature Map\u4e2d\u4e0d\u91cd\u8981\u7684\u6837\u672c\uff0c\u8fdb\u4e00\u6b65\u51cf\u5c11\u53c2\u6570\u6570\u91cf\u3002Pooling\u7684\u65b9\u6cd5\u5f88\u591a\uff0c\u6700\u5e38\u7528\u7684\u662f Max Pooling \u3002Max Pooling\u5b9e\u9645\u4e0a\u5c31\u662f\u5728n*n\u7684\u6837\u672c\u4e2d\u53d6\u6700\u5927\u503c\uff0c\u4f5c\u4e3a\u91c7\u6837\u540e\u7684\u6837\u672c\u503c\u3002\u4e0b\u56fe\u662f2*2 max pooling\uff1a \u9664\u4e86Max Pooing\u4e4b\u5916\uff0c\u5e38\u7528\u7684\u8fd8\u6709 Mean Pooling \u2014\u2014\u53d6\u5404\u6837\u672c\u7684\u5e73\u5747\u503c\u3002 \u5bf9\u4e8e\u6df1\u5ea6\u4e3aD\u7684Feature Map\uff0c\u5404\u5c42\u72ec\u7acb\u505aPooling\uff0c\u56e0\u6b64Pooling\u540e\u7684\u6df1\u5ea6\u4ecd\u7136\u4e3aD\u3002","title":"\u6c60\u5316(Pooling)\u5c42\u8f93\u51fa\u503c\u8ba1\u7b97"},{"location":"ai/jj/#connected","text":"\u5168\u8fde\u63a5\u5c42\u8f93\u51fa\u503c\u7684\u8ba1\u7b97\u548c\u4e0a\u4e00\u7bc7\u6587\u7ae0 \u795e\u7ecf\u7f51\u7edc \u8bb2\u8fc7\u7684\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002","title":"\u5168\u8fde\u63a5(Connected)\u5c42\u8f93\u51fa\u503c\u8ba1\u7b97"},{"location":"ai/jj/#_6","text":"\u548c\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u76f8\u6bd4\uff0c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3\u8981\u590d\u6742\u4e00\u4e9b\u3002\u4f46\u8bad\u7ec3\u7684\u539f\u7406\u662f\u4e00\u6837\u7684\uff1a\u5229\u7528 \u94fe\u5f0f\u6c42\u5bfc \u8ba1\u7b97\u635f\u5931\u51fd\u6570\u5bf9\u6bcf\u4e2a\u6743\u91cd\u7684\u504f\u5bfc\u6570\uff08\u68af\u5ea6\uff09\uff0c\u7136\u540e\u6839\u636e\u68af\u5ea6\u4e0b\u964d\u516c\u5f0f\u66f4\u65b0\u6743\u91cd\u3002\u8bad\u7ec3\u7b97\u6cd5\u4f9d\u7136\u662f\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u3002 \u6211\u4eec\u5148\u56de\u5fc6\u4e00\u4e0b\u4e0a\u4e00\u7bc7\u6587\u7ae0 \u795e\u7ecf\u7f51\u7edc \u4ecb\u7ecd\u7684\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\uff0c\u6574\u4e2a\u7b97\u6cd5\u5206\u4e3a\u4e09\u4e2a\u6b65\u9aa4\uff1a \u5bf9\u4e8e\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u7531\u4e8e\u6d89\u53ca\u5230 \u5c40\u90e8\u8fde\u63a5 \u3001 \u4e0b\u91c7\u6837 \u7684\u7b49\u64cd\u4f5c\uff0c\u5f71\u54cd\u5230\u4e86\u7b2c\u4e8c\u6b65\u8bef\u5dee\u9879\u03b4\u7684\u5177\u4f53\u8ba1\u7b97\u65b9\u6cd5\uff0c\u800c\u6743\u503c\u5171\u4eab\u5f71\u54cd\u4e86\u7b2c\u4e09\u6b65\u6743\u91cd\u7684\u68af\u5ea6\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5206\u522b\u4ecb\u7ecd\u5377\u79ef\u5c42\u548cPooling\u5c42\u7684\u8bad\u7ec3\u7b97\u6cd5\u3002","title":"\u8bad\u7ec3"},{"location":"ai/jj/#_7","text":"\u5bf9\u4e8e\u5377\u79ef\u5c42\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u4e0a\u9762\u7684\u7b2c\u4e8c\u6b65\uff0c\u5373\u5982\u4f55\u5c06\u8bef\u5dee\u9879\u03b4\u4f20\u9012\u5230\u4e0a\u4e00\u5c42\uff1b\u7136\u540e\u518d\u6765\u770b\u770b\u7b2c\u4e09\u6b65\uff0c\u5373\u5982\u4f55\u8ba1\u7b97filter\u6bcf\u4e2a\u6743\u503c\u7684\u68af\u5ea6\u3002","title":"\u5377\u79ef\u5c42\u8bad\u7ec3"},{"location":"ai/jj/#_8","text":"","title":"\u5377\u79ef\u5c42\u8bef\u5dee\u9879\u7684\u4f20\u9012"},{"location":"ai/jj/#_9","text":"","title":"\u6700\u7b80\u5355\u60c5\u51b5\u4e0b\u8bef\u5dee\u9879\u7684\u4f20\u9012"},{"location":"ai/jj/#s","text":"","title":"\u5377\u79ef\u6b65\u957f\u4e3aS\u65f6\u7684\u8bef\u5dee\u4f20\u9012"},{"location":"ai/jj/#d","text":"","title":"\u8f93\u5165\u5c42\u6df1\u5ea6\u4e3aD\u65f6\u7684\u8bef\u5dee\u4f20\u9012"},{"location":"ai/jj/#filtern","text":"","title":"filter\u6570\u91cf\u4e3aN\u65f6\u7684\u8bef\u5dee\u4f20\u9012"},{"location":"ai/jj/#filter","text":"","title":"\u5377\u79ef\u5c42filter\u6743\u91cd\u68af\u5ea6\u7684\u8ba1\u7b97"},{"location":"ai/jj/#_10","text":"","title":"\u6c60\u5316\u5c42\u8bad\u7ec3"},{"location":"ai/jj/#max-pooling","text":"","title":"Max Pooling\u8bef\u5dee\u9879\u7684\u4f20\u9012"},{"location":"ai/jj/#mean-pooling","text":"","title":"Mean Pooling\u8bef\u5dee\u9879\u7684\u4f20\u9012"},{"location":"ai/jj/#_11","text":"LeNet LeNet\u8bde\u751f\u4e8e1994\u5e74\uff0c\u7531\u6df1\u5ea6\u5b66\u4e60\u4e09\u5de8\u5934\u4e4b\u4e00\u7684Yan LeCun\u63d0\u51fa\uff0c\u4ed6\u4e5f\u88ab\u79f0\u4e3a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e4b\u7236\u3002LeNet\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u624b\u5199\u5b57\u7b26\u7684\u8bc6\u522b\u4e0e\u5206\u7c7b\uff0c\u51c6\u786e\u7387\u8fbe\u5230\u4e8698%\uff0c\u5e76\u5728\u7f8e\u56fd\u7684\u94f6\u884c\u4e2d\u6295\u5165\u4e86\u4f7f\u7528\uff0c\u88ab\u7528\u4e8e\u8bfb\u53d6\u5317\u7f8e\u7ea610%\u7684\u652f\u7968\u3002LeNet\u5960\u5b9a\u4e86\u73b0\u4ee3\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u7840\u3002 AlexNet AlexNet\u7531Hinton\u7684\u5b66\u751fAlex Krizhevsky\u4e8e2012\u5e74\u63d0\u51fa\uff0c\u5e76\u5728\u5f53\u5e74\u53d6\u5f97\u4e86Imagenet\u6bd4\u8d5b\u51a0\u519b\u3002AlexNet\u53ef\u4ee5\u7b97\u662fLeNet\u7684\u4e00\u79cd\u66f4\u6df1\u66f4\u5bbd\u7684\u7248\u672c\uff0c\u8bc1\u660e\u4e86\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u590d\u6742\u6a21\u578b\u4e0b\u7684\u6709\u6548\u6027\uff0c\u7b97\u662f\u795e\u7ecf\u7f51\u7edc\u5728\u4f4e\u8c37\u671f\u7684\u7b2c\u4e00\u6b21\u53d1\u58f0\uff0c\u786e\u7acb\u4e86\u6df1\u5ea6\u5b66\u4e60\uff0c\u6216\u8005\u8bf4\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u7edf\u6cbb\u5730\u4f4d\u3002 VGGNet VGGNet\u662f\u725b\u6d25\u5927\u5b66\u8ba1\u7b97\u673a\u89c6\u89c9\u7ec4\u548cGoogle DeepMind\u516c\u53f8\u4e00\u8d77\u7814\u53d1\u7684\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u53d6\u5f97\u4e862014\u5e74Imagenet\u6bd4\u8d5b\u5b9a\u4f4d\u9879\u76ee\u7b2c\u4e00\u540d\u548c\u5206\u7c7b\u9879\u76ee\u7b2c\u4e8c\u540d\u3002\u8be5\u7f51\u7edc\u4e3b\u8981\u662f\u6cdb\u5316\u6027\u80fd\u5f88\u597d\uff0c\u5bb9\u6613\u8fc1\u79fb\u5230\u5176\u4ed6\u7684\u56fe\u50cf\u8bc6\u522b\u9879\u76ee\u4e0a\uff0c\u53ef\u4ee5\u4e0b\u8f7dVGGNet\u8bad\u7ec3\u597d\u7684\u53c2\u6570\u8fdb\u884c\u5f88\u597d\u7684\u521d\u59cb\u5316\u6743\u91cd\u64cd\u4f5c\uff0c\u5f88\u591a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u90fd\u662f\u4ee5\u8be5\u7f51\u7edc\u4e3a\u57fa\u7840\uff0c\u6bd4\u5982FCN\uff0cUNet\uff0cSegNet\u7b49\u3002vgg\u7248\u672c\u5f88\u591a\uff0c\u5e38\u7528\u7684\u662fVGG16\uff0cVGG19\u7f51\u7edc\u3002 ResNet ResNet\uff08\u6b8b\u5dee\u795e\u7ecf\u7f51\u7edc\uff09\u7531\u5fae\u8f6f\u7814\u7a76\u9662\u7684\u4f55\u51ef\u660e\u7b494\u540d\u534e\u4eba\u4e8e2015\u5e74\u63d0\u51fa\uff0c\u6210\u529f\u8bad\u7ec3\u4e86152\u5c42\u8d85\u7ea7\u6df1\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u6548\u679c\u975e\u5e38\u7a81\u51fa\uff0c\u800c\u4e14\u5bb9\u6613\u7ed3\u5408\u5230\u5176\u4ed6\u7f51\u7edc\u7ed3\u6784\u4e2d\u3002\u5728\u4e94\u4e2a\u4e3b\u8981\u4efb\u52a1\u8f68\u8ff9\u4e2d\u90fd\u83b7\u5f97\u4e86\u7b2c\u4e00\u540d\u7684\u6210\u7ee9\uff1a 1 2 3 4 5 6 7 8 9 ImageNet\u5206\u7c7b\u4efb\u52a1\uff1a\u9519\u8bef\u73873.57% ImageNet\u68c0\u6d4b\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d16% ImageNet\u5b9a\u4f4d\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d27% COCO\u68c0\u6d4b\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d11% COCO\u5206\u5272\u4efb\u52a1\uff1a\u8d85\u8fc7\u7b2c\u4e8c\u540d12% \u53d1\u5c55\u56fe:","title":"\u7ecf\u5178\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"ai/jj/#_12","text":"","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/jj/#tensorflowcnn","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 #coding:utf-8 import tensorflow as tf #import MNIST_data.input_data as input_data from tensorflow.examples.tutorials.mnist import input_data import time \"\"\" \u6743\u91cd\u521d\u59cb\u5316 \u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u63a5\u8fd10\u7684\u5f88\u5c0f\u7684\u6b63\u6570 \"\"\" def weight_variable ( shape ): initial = tf . truncated_normal ( shape , stddev = 0.1 ) return tf . Variable ( initial ) def bias_variable ( shape ): initial = tf . constant ( 0.1 , shape = shape ) return tf . Variable ( initial ) \"\"\" \u5377\u79ef\u548c\u6c60\u5316\uff0c\u4f7f\u7528\u5377\u79ef\u6b65\u957f\u4e3a1\uff08stride size\uff09,0\u8fb9\u8ddd\uff08padding size\uff09 \u6c60\u5316\u7528\u7b80\u5355\u4f20\u7edf\u76842x2\u5927\u5c0f\u7684\u6a21\u677f\u505amax pooling \"\"\" def conv2d ( x , W ): return tf . nn . conv2d ( x , W , strides = [ 1 , 1 , 1 , 1 ], padding = 'SAME' ) # tf.nn.conv2d(input, filter, strides, padding, use_cudnn_on_gpu=None, data_format=None, name=None) # x(input) : [batch, in_height, in_width, in_channels] # W(filter) : [filter_height, filter_width, in_channels, out_channels] # strides : The stride of the sliding window for each dimension of input. # For the most common case of the same horizontal and vertices strides, strides = [1, stride, stride, 1] def max_pool_2x2 ( x ): return tf . nn . max_pool ( x , ksize = [ 1 , 2 , 2 , 1 ], strides = [ 1 , 2 , 2 , 1 ], padding = 'SAME' ) # tf.nn.max_pool(value, ksize, strides, padding, data_format='NHWC', name=None) # x(value) : [batch, height, width, channels] # ksize(pool\u5927\u5c0f) : A list of ints that has length >= 4. The size of the window for each dimension of the input tensor. # strides(pool\u6ed1\u52a8\u5927\u5c0f) : A list of ints that has length >= 4. The stride of the sliding window for each dimension of the input tensor. start = time . clock () #\u8ba1\u7b97\u5f00\u59cb\u65f6\u95f4 mnist = input_data . read_data_sets ( \"MNIST_data/\" , one_hot = True ) #MNIST\u6570\u636e\u8f93\u5165 \"\"\" \u7b2c\u4e00\u5c42 \u5377\u79ef\u5c42 x_image(batch, 28, 28, 1) -> h_pool1(batch, 14, 14, 32) \"\"\" x = tf . placeholder ( tf . float32 ,[ None , 784 ]) x_image = tf . reshape ( x , [ - 1 , 28 , 28 , 1 ]) #\u6700\u540e\u4e00\u7ef4\u4ee3\u8868\u901a\u9053\u6570\u76ee\uff0c\u5982\u679c\u662frgb\u5219\u4e3a3 W_conv1 = weight_variable ([ 5 , 5 , 1 , 32 ]) b_conv1 = bias_variable ([ 32 ]) h_conv1 = tf . nn . relu ( conv2d ( x_image , W_conv1 ) + b_conv1 ) # x_image -> [batch, in_height, in_width, in_channels] # [batch, 28, 28, 1] # W_conv1 -> [filter_height, filter_width, in_channels, out_channels] # [5, 5, 1, 32] # output -> [batch, out_height, out_width, out_channels] # [batch, 28, 28, 32] h_pool1 = max_pool_2x2 ( h_conv1 ) # h_conv1 -> [batch, in_height, in_weight, in_channels] # [batch, 28, 28, 32] # output -> [batch, out_height, out_weight, out_channels] # [batch, 14, 14, 32] \"\"\" \u7b2c\u4e8c\u5c42 \u5377\u79ef\u5c42 h_pool1(batch, 14, 14, 32) -> h_pool2(batch, 7, 7, 64) \"\"\" W_conv2 = weight_variable ([ 5 , 5 , 32 , 64 ]) b_conv2 = bias_variable ([ 64 ]) h_conv2 = tf . nn . relu ( conv2d ( h_pool1 , W_conv2 ) + b_conv2 ) # h_pool1 -> [batch, 14, 14, 32] # W_conv2 -> [5, 5, 32, 64] # output -> [batch, 14, 14, 64] h_pool2 = max_pool_2x2 ( h_conv2 ) # h_conv2 -> [batch, 14, 14, 64] # output -> [batch, 7, 7, 64] \"\"\" \u7b2c\u4e09\u5c42 \u5168\u8fde\u63a5\u5c42 h_pool2(batch, 7, 7, 64) -> h_fc1(1, 1024) \"\"\" W_fc1 = weight_variable ([ 7 * 7 * 64 , 1024 ]) b_fc1 = bias_variable ([ 1024 ]) h_pool2_flat = tf . reshape ( h_pool2 , [ - 1 , 7 * 7 * 64 ]) h_fc1 = tf . nn . relu ( tf . matmul ( h_pool2_flat , W_fc1 ) + b_fc1 ) \"\"\" Dropout h_fc1 -> h_fc1_drop, \u8bad\u7ec3\u4e2d\u542f\u7528\uff0c\u6d4b\u8bd5\u4e2d\u5173\u95ed \"\"\" keep_prob = tf . placeholder ( \"float\" ) h_fc1_drop = tf . nn . dropout ( h_fc1 , keep_prob ) \"\"\" \u7b2c\u56db\u5c42 Softmax\u8f93\u51fa\u5c42 \"\"\" W_fc2 = weight_variable ([ 1024 , 10 ]) b_fc2 = bias_variable ([ 10 ]) y_conv = tf . nn . softmax ( tf . matmul ( h_fc1_drop , W_fc2 ) + b_fc2 ) \"\"\" \u8bad\u7ec3\u548c\u8bc4\u4f30\u6a21\u578b ADAM\u4f18\u5316\u5668\u6765\u505a\u68af\u5ea6\u6700\u901f\u4e0b\u964d,feed_dict\u4e2d\u52a0\u5165\u53c2\u6570keep_prob\u63a7\u5236dropout\u6bd4\u4f8b \"\"\" y_ = tf . placeholder ( \"float\" , [ None , 10 ]) cross_entropy = - tf . reduce_sum ( y_ * tf . log ( y_conv )) #\u8ba1\u7b97\u4ea4\u53c9\u71b5 train_step = tf . train . AdamOptimizer ( 1e-4 ) . minimize ( cross_entropy ) #\u4f7f\u7528adam\u4f18\u5316\u5668\u6765\u4ee50.0001\u7684\u5b66\u4e60\u7387\u6765\u8fdb\u884c\u5fae\u8c03 correct_prediction = tf . equal ( tf . argmax ( y_conv , 1 ), tf . argmax ( y_ , 1 )) #\u5224\u65ad\u9884\u6d4b\u6807\u7b7e\u548c\u5b9e\u9645\u6807\u7b7e\u662f\u5426\u5339\u914d accuracy = tf . reduce_mean ( tf . cast ( correct_prediction , \"float\" )) sess = tf . Session () #\u542f\u52a8\u521b\u5efa\u7684\u6a21\u578b sess . run ( tf . initialize_all_variables ()) #\u65e7\u7248\u672c #sess.run(tf.global_variables_initializer()) #\u521d\u59cb\u5316\u53d8\u91cf for i in range ( 1000 ): #\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b\uff0c\u5faa\u73af\u8bad\u7ec35000\u6b21 batch = mnist . train . next_batch ( 50 ) #batch\u5927\u5c0f\u8bbe\u7f6e\u4e3a50 if i % 100 == 0 : train_accuracy = accuracy . eval ( session = sess , feed_dict = { x : batch [ 0 ], y_ : batch [ 1 ], keep_prob : 1.0 }) print ( \"step %d , train_accuracy %g \" % ( i , train_accuracy )) train_step . run ( session = sess , feed_dict = { x : batch [ 0 ], y_ : batch [ 1 ], keep_prob : 0.5 }) #\u795e\u7ecf\u5143\u8f93\u51fa\u4fdd\u6301\u4e0d\u53d8\u7684\u6982\u7387 keep_prob \u4e3a0.5 print ( \"test accuracy %g \" % accuracy . eval ( session = sess , feed_dict = { x : mnist . test . images , y_ : mnist . test . labels , keep_prob : 1.0 })) #\u795e\u7ecf\u5143\u8f93\u51fa\u4fdd\u6301\u4e0d\u53d8\u7684\u6982\u7387 keep_prob \u4e3a 1\uff0c\u5373\u4e0d\u53d8\uff0c\u4e00\u76f4\u4fdd\u6301\u8f93\u51fa end = time . clock () #\u8ba1\u7b97\u7a0b\u5e8f\u7ed3\u675f\u65f6\u95f4 print ( \"running time is:\" ,( end - start )) \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u57fa\u4e8eTensorflow\u7684CNN\u5b9e\u73b0\u624b\u5199\u4f53\u8bc6\u522b"},{"location":"ai/jj/#_13","text":"(\u540e\u7eed\u66f4\u65b0...) \u6587\u7ae0\u672b\u5c3e\u5c0f\u5f69\u86cb :\u4e00\u4efd\u6df1\u5ea6\u5b66\u4e60\u7684\u8d44\u6599 \u2460 \u84dd\u594f\u4e91\u4e0b\u8f7d \u2461 \u767e\u5ea6\u7f51\u76d8\u5907\u7528\u4e0b\u8f7d(\u63d0\u53d6\u7801:41j3)","title":"\u5176\u4ed6\u5b9e\u73b0"},{"location":"ai/k-means/","text":"K-\u5747\u503c\u7b97\u6cd5\u6982\u8ff0 \u00b6 \u4ecb\u7ecd \u00b6 \u805a\u7c7b\u4e0e\u5206\u7c7b\u7b97\u6cd5\u7684\u6700\u5927\u533a\u522b\u5728\u4e8e, \u5206\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u5df2\u77e5(\u76d1\u7763\u5b66\u4e60), \u800c\u805a\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u662f\u672a\u77e5\u7684(\u65e0\u76d1\u7763\u5b66\u4e60)\u3002K-Means\u7b97\u6cd5(K-\u5747\u503c\u7b97\u6cd5)\u5c31\u662f\u65e0\u76d1\u7763\u7b97\u6cd5\u4e4b\u4e00\uff0c\u4e3b\u8981\u7528\u4e8e\u6837\u672c\u7684\u805a\u7c7b\u3002\u5176\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6837\u672c\u96c6\uff0c\u6309\u7167\u6837\u672c\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u5c0f\uff0c\u5c06\u6837\u672c\u96c6\u5212\u5206\u4e3aK\u4e2a\u7c07\u3002\u8ba9\u7c07\u5185\u7684\u70b9\u5c3d\u91cf\u7d27\u5bc6\u7684\u8fde\u63a5\u5728\u4e00\u8d77,\u8ba9\u7c07\u95f4\u7684\u8ddd\u79bb\u5c3d\u91cf\u7684\u5927\u3002 \u4e0a\u56fea\u8868\u8fbe\u4e86\u521d\u59cb\u7684\u6570\u636e\u96c6\uff0c\u5047\u8bbek=2\u3002\u5728\u56feb\u4e2d\uff0c\u6211\u4eec\u968f\u673a\u9009\u62e9\u4e86\u4e24\u4e2ak\u7c7b\u6240\u5bf9\u5e94\u7684\u7c7b\u522b\u8d28\u5fc3\uff0c\u5373\u56fe\u4e2d\u7684\u7ea2\u8272\u8d28\u5fc3\u548c\u84dd\u8272\u8d28\u5fc3\uff0c\u7136\u540e\u5206\u522b\u6c42\u6837\u672c\u4e2d\u6240\u6709\u70b9\u5230\u8fd9\u4e24\u4e2a\u8d28\u5fc3\u7684\u8ddd\u79bb\uff0c\u5e76\u6807\u8bb0\u6bcf\u4e2a\u6837\u672c\u7684\u7c7b\u522b\u4e3a\u548c\u8be5\u6837\u672c\u8ddd\u79bb\u6700\u5c0f\u7684\u8d28\u5fc3\u7684\u7c7b\u522b\uff0c\u5982\u56fec\u6240\u793a\uff0c\u7ecf\u8fc7\u8ba1\u7b97\u6837\u672c\u548c\u7ea2\u8272\u8d28\u5fc3\u548c\u84dd\u8272\u8d28\u5fc3\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6240\u6709\u6837\u672c\u70b9\u7684\u7b2c\u4e00\u8f6e\u8fed\u4ee3\u540e\u7684\u7c7b\u522b\u3002\u6b64\u65f6\u6211\u4eec\u5bf9\u6211\u4eec\u5f53\u524d\u6807\u8bb0\u4e3a\u7ea2\u8272\u548c\u84dd\u8272\u7684\u70b9\u5206\u522b\u6c42\u5176\u65b0\u7684\u8d28\u5fc3\uff0c\u5982\u56fe4\u6240\u793a\uff0c\u65b0\u7684\u7ea2\u8272\u8d28\u5fc3\u548c\u84dd\u8272\u8d28\u5fc3\u7684\u4f4d\u7f6e\u5df2\u7ecf\u53d1\u751f\u4e86\u53d8\u52a8\u3002\u56fee\u548c\u56fef\u91cd\u590d\u4e86\u6211\u4eec\u5728\u56fec\u548c\u56fed\u7684\u8fc7\u7a0b\uff0c\u5373\u5c06\u6240\u6709\u70b9\u7684\u7c7b\u522b\u6807\u8bb0\u4e3a\u8ddd\u79bb\u6700\u8fd1\u7684\u8d28\u5fc3\u7684\u7c7b\u522b\u5e76\u6c42\u65b0\u7684\u8d28\u5fc3\u3002\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7684\u4e24\u4e2a\u7c7b\u522b\u5982\u56fef\u3002 \u5f53\u7136\u5728\u5b9e\u9645K-Mean\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u591a\u6b21\u8fd0\u884c\u56fec\u548c\u56fed\uff0c\u624d\u80fd\u8fbe\u5230\u6700\u7ec8\u7684\u6bd4\u8f83\u4f18\u7684\u7c7b\u522b\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u00b6 \u6b65\u9aa4\u63cf\u8ff0 \u00b6 1\uff09\u6570\u636e\u51c6\u5907:\u9700\u8981\u6570\u503c\u578b\u6570\u636e\u7c7b\u8ba1\u7b97\u8ddd\u79bb, \u4e5f\u53ef\u4ee5\u5c06\u6807\u79f0\u578b\u6570\u636e\u6620\u5c04\u4e3a\u4e8c\u503c\u578b\u6570\u636e\u518d\u7528\u4e8e\u8ddd\u79bb\u8ba1\u7b97\u3002 2\uff09\u5bf9\u4e8e\u672a\u805a\u7c7b\u6570\u636e\u96c6\uff0c\u9996\u5148\u968f\u673a\u521d\u59cb\u5316 K \u4e2a\uff08\u4ee3\u8868\u62df\u805a\u7c7b\u7c07\u4e2a\u6570\uff09\u4e2d\u5fc3\u70b9\uff0c\u5982\u56fe\u7ea2\u8272\u4e94\u89d2\u661f\u6240\u793a\u3002 3\uff09\u6bcf\u4e00\u4e2a\u6837\u672c\u6309\u7167\u8ddd\u79bb\u81ea\u8eab\u6700\u8fd1\u7684\u4e2d\u5fc3\u70b9\u8fdb\u884c\u805a\u7c7b( \u8ba1\u7b97\u8ddd\u79bb )\uff0c\u7b49\u6548\u4e8e\u901a\u8fc7\u4e24\u4e2d\u5fc3\u70b9\u8fde\u7ebf\u7684\u4e2d\u5782\u7ebf\u5212\u5206\u533a\u57df\u3002 4\uff09\u4f9d\u636e\u4e0a\u6b21\u805a\u7c7b\u7ed3\u679c\uff0c\u79fb\u52a8\u4e2d\u5fc3\u70b9\u5230\u4e2a\u7c07\u7684\u8d28\u5fc3\u4f4d\u7f6e(\u65b0\u7684\u8d28\u5fc3\u7684\u4f4d\u7f6e\u4e3a\u65b0\u7c07\u5185\u70b9\u7684x\u548cy\u5206\u522b\u7684\u7684\u5e73\u5747\u503c)\uff0c\u5e76\u5c06\u6b64\u8d28\u5fc3\u4f5c\u4e3a\u65b0\u7684\u4e2d\u5fc3\u70b9\u3002 5\uff09\u53cd\u590d\u8fed\u4ee3\uff0c\u76f4\u81f3\u4e2d\u5fc3\u70b9\u7684\u53d8\u5316\u6ee1\u8db3\u6536\u655b\u6761\u4ef6\uff08\u53d8\u5316\u5f88\u5c0f\u6216\u51e0\u4e4e\u4e0d\u53d8\u5316\uff09\uff0c\u6700\u7ec8\u5f97\u5230\u805a\u7c7b\u7ed3\u679c\u3002 \u5173\u4e8e\u8ddd\u79bb\u7684\u8ba1\u7b97 \u00b6 \u8fd9\u91cc\u7684\u8ddd\u79bb\u6307\u7684\u662f\u5e73\u9762\u4e0a\u4e24\u4e2a\u70b9\u7684\u76f4\u7ebf\u8ddd\u79bb\u3002\u5e38\u7528\u7684\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\u6709\uff1a \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb \u66fc\u54c8\u987f\u8ddd\u79bb \u5207\u6bd4\u96ea\u592b\u8ddd\u79bb \u9a6c\u6c0f\u8ddd\u79bb \u4f59\u5f26\u76f8\u4f3c\u5ea6 \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 \u6c49\u660e\u8ddd\u79bb \u6770\u5361\u5fb7\u76f8\u4f3c\u7cfb\u6570 \u7f16\u8f91\u8ddd\u79bb DTW \u8ddd\u79bb KL \u6563\u5ea6 \u5173\u4e8eK\u503c\u7684\u9009\u62e9 \u00b6 1\uff09\u624b\u8098\u6cd5 \u5728\u4ecb\u7ecd\u4e4b\u524d\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e2a\u6982\u5ff5:SSE(sum of the squared errors\uff0c\u8bef\u5dee\u5e73\u65b9\u548c) \u624b\u8098\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\uff1a \u968f\u7740\u805a\u7c7b\u6570k\u7684\u589e\u5927\uff0c\u6837\u672c\u5212\u5206\u4f1a\u66f4\u52a0\u7cbe\u7ec6\uff0c\u6bcf\u4e2a\u7c07\u7684\u805a\u5408\u7a0b\u5ea6\u4f1a\u9010\u6e10\u63d0\u9ad8\uff0c\u90a3\u4e48\u8bef\u5dee\u5e73\u65b9\u548cSSE\u81ea\u7136\u4f1a\u9010\u6e10\u53d8\u5c0f\u3002 \u5f53k\u5c0f\u4e8e\u771f\u5b9e\u805a\u7c7b\u6570\u65f6\uff0c\u7531\u4e8ek\u7684\u589e\u5927\u4f1a\u5927\u5e45\u589e\u52a0\u6bcf\u4e2a\u7c07\u7684\u805a\u5408\u7a0b\u5ea6\uff0c\u6545SSE\u7684\u4e0b\u964d\u5e45\u5ea6\u4f1a\u5f88\u5927\uff0c\u800c\u5f53k\u5230\u8fbe\u771f\u5b9e\u805a\u7c7b\u6570\u65f6\uff0c\u518d\u589e\u52a0k\u6240\u5f97\u5230\u7684\u805a\u5408\u7a0b\u5ea6\u56de\u62a5\u4f1a\u8fc5\u901f\u53d8\u5c0f\uff0c\u6240\u4ee5SSE\u7684\u4e0b\u964d\u5e45\u5ea6\u4f1a\u9aa4\u51cf\uff0c\u7136\u540e\u968f\u7740k\u503c\u7684\u7ee7\u7eed\u589e\u5927\u800c\u8d8b\u4e8e\u5e73\u7f13\uff0c\u4e5f\u5c31\u662f\u8bf4SSE\u548ck\u7684\u5173\u7cfb\u56fe\u662f\u4e00\u4e2a\u624b\u8098\u7684\u5f62\u72b6\uff0c\u800c\u8fd9\u4e2a\u8098\u90e8\u5bf9\u5e94\u7684k\u503c\u5c31\u662f\u6570\u636e\u7684\u771f\u5b9e\u805a\u7c7b\u6570\u3002 2\uff09\u8f6e\u5ed3\u7cfb\u6570 \u4f7f\u7528\u8f6e\u5ed3\u7cfb\u6570(silhouette coefficient)\u6765\u786e\u5b9a\uff0c\u9009\u62e9\u4f7f\u7cfb\u6570\u8f83\u5927\u6240\u5bf9\u5e94\u7684k\u503c\u3002 \u4f18\u7f3a\u70b9 \u00b6 \u4f18\u70b9: \u00b6 \u5c5e\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u65e0\u987b\u51c6\u5907\u8bad\u7ec3\u96c6\uff1b \u539f\u7406\u7b80\u5355\uff0c\u5b9e\u73b0\u8d77\u6765\u8f83\u4e3a\u5bb9\u6613\uff1b \u7ed3\u679c\u53ef\u89e3\u91ca\u6027\u8f83\u597d\u3002 \u7f3a\u70b9: \u00b6 \u805a\u7c7b\u6570\u76eek\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u3002\u9009\u62e9\u4e0d\u6070\u5f53\u7684k\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7cdf\u7cd5\u7684\u805a\u7c7b\u7ed3\u679c\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u7279\u5f81\u68c0\u67e5\u6765\u51b3\u5b9a\u6570\u636e\u96c6\u7684\u805a\u7c7b\u6570\u76ee\u4e86\uff1b \u53ef\u80fd\u6536\u655b\u5230\u5c40\u90e8\u6700\u5c0f\u503c, \u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u6536\u655b\u8f83\u6162\uff1b \u5bf9\u4e8e\u5f02\u5e38\u70b9\u3001\u79bb\u7fa4\u70b9\u654f\u611f\u3002 \u63a8\u5bfc \u00b6 \u4e0b\u9762\u7ed9\u5927\u5bb6\u4e00\u4e2a\u5b9e\u4f8b,\u4f9b\u5927\u5bb6\u53c2\u8003: \u4f20\u7edfK-means\u6539\u8fdb \u00b6 \u5728\u5b66\u4e60\u4e86\u4f20\u7edfK-means\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a,\u6211\u4eec\u6e05\u695a\u4e86K-means\u7684\u5c40\u9650\u6027,\u56e0\u6b64\u6211\u4eec\u5c06\u8981\u8bf4\u4e00\u4e0bK-Means\u7684\u4f18\u5316\u53d8\u4f53\u65b9\u6cd5\u3002\u8fd9\u5176\u4e2d\u5305\u62ec\u521d\u59cb\u5316\u4f18\u5316K-Means++, \u8ddd\u79bb\u8ba1\u7b97\u4f18\u5316elkan K-Means\u7b97\u6cd5\u548c\u5927\u6570\u636e\u60c5\u51b5\u4e0b\u7684\u4f18\u5316Mini Batch K-Means\u7b97\u6cd5\u3002 K-means++ \u00b6 \u5728\u5b66\u4e60K-means\u7b97\u6cd5\u65f6\u6211\u4eec\u63d0\u5230\uff0ck\u4e2a\u521d\u59cb\u5316\u7684\u8d28\u5fc3\u7684\u4f4d\u7f6e\u9009\u62e9\u5bf9\u6700\u540e\u7684\u805a\u7c7b\u7ed3\u679c\u548c\u8fd0\u884c\u65f6\u95f4\u90fd\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u9700\u8981\u9009\u62e9\u5408\u9002\u7684k\u4e2a\u8d28\u5fc3\u3002\u5982\u679c\u4ec5\u4ec5\u662f\u5b8c\u5168\u968f\u673a\u7684\u9009\u62e9\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u7b97\u6cd5\u6536\u655b\u5f88\u6162\u3002K-Means++\u7b97\u6cd5\u5c31\u662f\u5bf9K-Means\u968f\u673a\u521d\u59cb\u5316\u8d28\u5fc3\u7684\u65b9\u6cd5\u7684\u4f18\u5316\u3002 elkan K-means \u00b6 \u5728\u4f20\u7edf\u7684K-Means\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u5728\u6bcf\u8f6e\u8fed\u4ee3\u65f6\uff0c\u8981\u8ba1\u7b97\u6240\u6709\u7684\u6837\u672c\u70b9\u5230\u6240\u6709\u7684\u8d28\u5fc3\u7684\u8ddd\u79bb\uff0c\u8fd9\u6837\u4f1a\u6bd4\u8f83\u7684\u8017\u65f6\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8ddd\u79bb\u7684\u8ba1\u7b97\u6709\u6ca1\u6709\u80fd\u591f\u7b80\u5316\u7684\u5730\u65b9\u5462\uff1felkan K-Means\u7b97\u6cd5\u5c31\u662f\u4ece\u8fd9\u5757\u5165\u624b\u52a0\u4ee5\u6539\u8fdb\u3002\u5b83\u7684\u76ee\u6807\u662f\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u8ddd\u79bb\u7684\u8ba1\u7b97\u3002 Mini Batch K-means \u00b6 \u5728\u7edf\u7684K-Means\u7b97\u6cd5\u4e2d\uff0c\u8981\u8ba1\u7b97\u6240\u6709\u7684\u6837\u672c\u70b9\u5230\u6240\u6709\u7684\u8d28\u5fc3\u7684\u8ddd\u79bb\u3002\u5982\u679c\u6837\u672c\u91cf\u975e\u5e38\u5927\uff0c\u6bd4\u5982\u8fbe\u523010\u4e07\u4ee5\u4e0a\uff0c\u7279\u5f81\u6709100\u4ee5\u4e0a\uff0c\u6b64\u65f6\u7528\u4f20\u7edf\u7684K-Means\u7b97\u6cd5\u975e\u5e38\u7684\u8017\u65f6\uff0c\u5c31\u7b97\u52a0\u4e0aelkan K-Means\u4f18\u5316\u4e5f\u4f9d\u65e7\u3002\u5728\u5927\u6570\u636e\u65f6\u4ee3\uff0c\u8fd9\u6837\u7684\u573a\u666f\u8d8a\u6765\u8d8a\u591a\u3002\u6b64\u65f6Mini Batch K-Means\u5e94\u8fd0\u800c\u751f\u3002 \u987e\u540d\u601d\u4e49\uff0cMini Batch\uff0c\u4e5f\u5c31\u662f\u7528\u6837\u672c\u96c6\u4e2d\u7684\u4e00\u90e8\u5206\u7684\u6837\u672c\u6765\u505a\u4f20\u7edf\u7684K-Means\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u6837\u672c\u91cf\u592a\u5927\u65f6\u7684\u8ba1\u7b97\u96be\u9898\uff0c\u7b97\u6cd5\u6536\u655b\u901f\u5ea6\u5927\u5927\u52a0\u5feb\u3002\u5f53\u7136\u6b64\u65f6\u7684\u4ee3\u4ef7\u5c31\u662f\u6211\u4eec\u7684\u805a\u7c7b\u7684\u7cbe\u786e\u5ea6\u4e5f\u4f1a\u6709\u4e00\u4e9b\u964d\u4f4e\u3002\u4e00\u822c\u6765\u8bf4\u8fd9\u4e2a\u964d\u4f4e\u7684\u5e45\u5ea6\u5728\u53ef\u4ee5\u63a5\u53d7\u7684\u8303\u56f4\u4e4b\u5185\u3002 \u6ce8\u610f: \u6b64\u90e8\u5206\u4e3a\u6269\u5c55\u5185\u5bb9,\u5982\u679c\u4f60\u60f3\u771f\u6b63\u7684\u53bb\u4f18\u5316\u4f60\u7684\u7b97\u6cd5,\u66f4\u8be6\u7ec6\u7684\u4f18\u5316\u6b65\u9aa4\u4f60\u53ef\u4ee5\u53bb \u5218\u5efa\u5e73Pinard-K-Means\u805a\u7c7b\u7b97\u6cd5\u539f\u7406 \u6216\u8005\u662f \u767e\u5ea6\u4e00\u4e0b \u3002 \u4ee3\u7801\u5b9e\u73b0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 import numpy import random import matplotlib.pyplot as plt def findCentroids ( data_get , k ): # \u968f\u673a\u83b7\u53d6k\u4e2a\u8d28\u5fc3 return random . sample ( data_get , k ) def calculateDistance ( vecA , vecB ): # \u8ba1\u7b97\u5411\u91cfvecA\u548c\u5411\u91cfvecB\u4e4b\u95f4\u7684\u6b27\u6c0f\u8ddd\u79bb return numpy . sqrt ( numpy . sum ( numpy . square ( vecA - vecB ))) def minDistance ( data_get , centroidList ): # \u8ba1\u7b97data_get\u4e2d\u7684\u5143\u7d20\u4e0ecentroidList\u4e2dk\u4e2a\u805a\u7c7b\u4e2d\u5fc3\u7684\u6b27\u5f0f\u8ddd\u79bb\uff0c\u627e\u51fa\u8ddd\u79bb\u6700\u5c0f\u7684 # \u5c06\u8be5\u5143\u7d20\u52a0\u5165\u76f8\u5e94\u7684\u805a\u7c7b\u4e2d clusterDict = dict () # \u7528\u5b57\u5178\u5b58\u50a8\u805a\u7c7b\u7ed3\u679c for element in data_get : vecA = numpy . array ( element ) # \u8f6c\u6362\u6210\u6570\u7ec4\u5f62\u5f0f flag = 0 # \u5143\u7d20\u5206\u7c7b\u6807\u8bb0\uff0c\u8bb0\u5f55\u4e0e\u76f8\u5e94\u805a\u7c7b\u8ddd\u79bb\u6700\u8fd1\u7684\u90a3\u4e2a\u7c7b minDis = float ( \"inf\" ) # \u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c for i in range ( len ( centroidList )): vecB = numpy . array ( centroidList [ i ]) distance = calculateDistance ( vecA , vecB ) # \u4e24\u5411\u91cf\u95f4\u7684\u6b27\u5f0f\u8ddd\u79bb if distance < minDis : minDis = distance flag = i # \u4fdd\u5b58\u4e0e\u5f53\u524ditem\u8ddd\u79bb\u6700\u8fd1\u7684\u90a3\u4e2a\u805a\u7c7b\u7684\u6807\u8bb0 if flag not in clusterDict . keys (): # \u7c07\u6807\u8bb0\u4e0d\u5b58\u5728\uff0c\u8fdb\u884c\u521d\u59cb\u5316 clusterDict [ flag ] = list () clusterDict [ flag ] . append ( element ) # \u52a0\u5165\u76f8\u5e94\u7684\u7c7b\u4e2d return clusterDict # \u8fd4\u56de\u65b0\u7684\u805a\u7c7b\u7ed3\u679c def getCentroids ( clusterDict ): centroidList = list () for key in clusterDict . keys (): centroid = numpy . mean ( numpy . array ( clusterDict [ key ]), axis = 0 ) # \u6c42\u805a\u7c7b\u4e2d\u5fc3\u5373\u6c42\u89e3\u6bcf\u5217\u7684\u5747\u503c centroidList . append ( centroid ) return numpy . array ( centroidList ) . tolist () def calculate_Var ( clusterDict , centroidList ): # \u8ba1\u7b97\u805a\u7c7b\u95f4\u7684\u5747\u65b9\u8bef\u5dee # \u5c06\u7c7b\u4e2d\u5404\u4e2a\u5411\u91cf\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u8fdb\u884c\u7d2f\u52a0\u6c42\u548c sum = 0.0 for key in clusterDict . keys (): vecA = numpy . array ( centroidList [ key ]) distance = 0.0 for item in clusterDict [ key ]: vecB = numpy . array ( item ) distance += calculateDistance ( vecA , vecB ) sum += distance return sum def showCluster ( centroidList , clusterDict ): # \u753b\u805a\u7c7b\u7ed3\u679c colorMark = [ 'or' , 'ob' , 'og' , 'ok' , 'oy' , 'ow' ] # \u5143\u7d20\u6807\u8bb0 centroidMark = [ 'dr' , 'db' , 'dg' , 'dk' , 'dy' , 'dw' ] # \u805a\u7c7b\u4e2d\u5fc3\u6807\u8bb0 for key in clusterDict . keys (): plt . plot ( centroidList [ key ][ 0 ], centroidList [ key ][ 1 ], centroidMark [ key ], markersize = 12 ) # \u753b\u805a\u7c7b\u4e2d\u5fc3 for item in clusterDict [ key ]: plt . plot ( item [ 0 ], item [ 1 ], colorMark [ key ]) # \u753b\u7c7b\u4e0b\u7684\u70b9 plt . show () data = [[ 0.0 , 0.0 ], [ 3.0 , 8.0 ], [ 2.0 , 2.0 ], [ 1.0 , 1.0 ], [ 5.0 , 3.0 ], [ 4.0 , 8.0 ], [ 6.0 , 3.0 ], [ 5.0 , 4.0 ], [ 6.0 , 4.0 ], [ 7.0 , 5.0 ]] if __name__ == '__main__' : centroidList = findCentroids ( data , 3 ) # \u968f\u673a\u83b7\u53d63\u4e2a\u805a\u7c7b\u4e2d\u5fc3 clusterDict = minDistance ( data , centroidList ) # \u7b2c\u4e00\u6b21\u805a\u7c7b\u8fed\u4ee3 newVar = calculate_Var ( clusterDict , centroidList ) # \u8ba1\u7b97\u5747\u65b9\u8bef\u5dee\u503c\uff0c\u901a\u8fc7\u65b0\u65e7\u5747\u65b9\u8bef\u5dee\u6765\u83b7\u5f97\u8fed\u4ee3\u7ec8\u6b62\u6761\u4ef6 oldVar = - 0.0001 # \u521d\u59cb\u5316\u5747\u65b9\u8bef\u5dee print ( '***** \u7b2c1\u6b21\u8fed\u4ee3 *****' ) for key in clusterDict . keys (): print ( '\u805a\u7c7b\u4e2d\u5fc3: ' , centroidList [ key ]) print ( '\u5bf9\u5e94\u805a\u7c7b: ' , clusterDict [ key ]) print ( '\u5e73\u5747\u5747\u65b9\u8bef\u5dee: ' , newVar ) showCluster ( centroidList , clusterDict ) # \u5c55\u793a\u805a\u7c7b\u7ed3\u679c k = 2 while abs ( newVar - oldVar ) >= 0.0001 : # \u5f53\u8fde\u7eed\u4e24\u6b21\u805a\u7c7b\u7ed3\u679c\u5dee\u8ddd\u5c0f\u4e8e0.0001\u65f6\uff0c\u8fed\u4ee3\u7ed3\u675f centroidList = getCentroids ( clusterDict ) # \u83b7\u5f97\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3 clusterDict = minDistance ( data , centroidList ) # \u65b0\u7684\u805a\u7c7b\u7ed3\u679c oldVar = newVar newVar = calculate_Var ( clusterDict , centroidList ) print ( '***** \u7b2c %d \u6b21\u8fed\u4ee3 *****' % k ) for key in clusterDict . keys (): print ( '\u805a\u7c7b\u4e2d\u5fc3: ' , centroidList [ key ]) print ( '\u5bf9\u5e94\u805a\u7c7b: ' , clusterDict [ key ]) print ( '\u5e73\u5747\u5747\u65b9\u8bef\u5dee: ' , newVar ) showCluster ( centroidList , clusterDict ) # \u5c55\u793a\u805a\u7c7b\u7ed3\u679c k += 1 K-means\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"2. K-\u5747\u503c\u7b97\u6cd5"},{"location":"ai/k-means/#k-","text":"","title":"K-\u5747\u503c\u7b97\u6cd5\u6982\u8ff0"},{"location":"ai/k-means/#_1","text":"\u805a\u7c7b\u4e0e\u5206\u7c7b\u7b97\u6cd5\u7684\u6700\u5927\u533a\u522b\u5728\u4e8e, \u5206\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u5df2\u77e5(\u76d1\u7763\u5b66\u4e60), \u800c\u805a\u7c7b\u7684\u76ee\u6807\u7c7b\u522b\u662f\u672a\u77e5\u7684(\u65e0\u76d1\u7763\u5b66\u4e60)\u3002K-Means\u7b97\u6cd5(K-\u5747\u503c\u7b97\u6cd5)\u5c31\u662f\u65e0\u76d1\u7763\u7b97\u6cd5\u4e4b\u4e00\uff0c\u4e3b\u8981\u7528\u4e8e\u6837\u672c\u7684\u805a\u7c7b\u3002\u5176\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6837\u672c\u96c6\uff0c\u6309\u7167\u6837\u672c\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5927\u5c0f\uff0c\u5c06\u6837\u672c\u96c6\u5212\u5206\u4e3aK\u4e2a\u7c07\u3002\u8ba9\u7c07\u5185\u7684\u70b9\u5c3d\u91cf\u7d27\u5bc6\u7684\u8fde\u63a5\u5728\u4e00\u8d77,\u8ba9\u7c07\u95f4\u7684\u8ddd\u79bb\u5c3d\u91cf\u7684\u5927\u3002 \u4e0a\u56fea\u8868\u8fbe\u4e86\u521d\u59cb\u7684\u6570\u636e\u96c6\uff0c\u5047\u8bbek=2\u3002\u5728\u56feb\u4e2d\uff0c\u6211\u4eec\u968f\u673a\u9009\u62e9\u4e86\u4e24\u4e2ak\u7c7b\u6240\u5bf9\u5e94\u7684\u7c7b\u522b\u8d28\u5fc3\uff0c\u5373\u56fe\u4e2d\u7684\u7ea2\u8272\u8d28\u5fc3\u548c\u84dd\u8272\u8d28\u5fc3\uff0c\u7136\u540e\u5206\u522b\u6c42\u6837\u672c\u4e2d\u6240\u6709\u70b9\u5230\u8fd9\u4e24\u4e2a\u8d28\u5fc3\u7684\u8ddd\u79bb\uff0c\u5e76\u6807\u8bb0\u6bcf\u4e2a\u6837\u672c\u7684\u7c7b\u522b\u4e3a\u548c\u8be5\u6837\u672c\u8ddd\u79bb\u6700\u5c0f\u7684\u8d28\u5fc3\u7684\u7c7b\u522b\uff0c\u5982\u56fec\u6240\u793a\uff0c\u7ecf\u8fc7\u8ba1\u7b97\u6837\u672c\u548c\u7ea2\u8272\u8d28\u5fc3\u548c\u84dd\u8272\u8d28\u5fc3\u7684\u8ddd\u79bb\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u6240\u6709\u6837\u672c\u70b9\u7684\u7b2c\u4e00\u8f6e\u8fed\u4ee3\u540e\u7684\u7c7b\u522b\u3002\u6b64\u65f6\u6211\u4eec\u5bf9\u6211\u4eec\u5f53\u524d\u6807\u8bb0\u4e3a\u7ea2\u8272\u548c\u84dd\u8272\u7684\u70b9\u5206\u522b\u6c42\u5176\u65b0\u7684\u8d28\u5fc3\uff0c\u5982\u56fe4\u6240\u793a\uff0c\u65b0\u7684\u7ea2\u8272\u8d28\u5fc3\u548c\u84dd\u8272\u8d28\u5fc3\u7684\u4f4d\u7f6e\u5df2\u7ecf\u53d1\u751f\u4e86\u53d8\u52a8\u3002\u56fee\u548c\u56fef\u91cd\u590d\u4e86\u6211\u4eec\u5728\u56fec\u548c\u56fed\u7684\u8fc7\u7a0b\uff0c\u5373\u5c06\u6240\u6709\u70b9\u7684\u7c7b\u522b\u6807\u8bb0\u4e3a\u8ddd\u79bb\u6700\u8fd1\u7684\u8d28\u5fc3\u7684\u7c7b\u522b\u5e76\u6c42\u65b0\u7684\u8d28\u5fc3\u3002\u6700\u7ec8\u6211\u4eec\u5f97\u5230\u7684\u4e24\u4e2a\u7c7b\u522b\u5982\u56fef\u3002 \u5f53\u7136\u5728\u5b9e\u9645K-Mean\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u591a\u6b21\u8fd0\u884c\u56fec\u548c\u56fed\uff0c\u624d\u80fd\u8fbe\u5230\u6700\u7ec8\u7684\u6bd4\u8f83\u4f18\u7684\u7c7b\u522b\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/k-means/#_2","text":"","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"ai/k-means/#_3","text":"1\uff09\u6570\u636e\u51c6\u5907:\u9700\u8981\u6570\u503c\u578b\u6570\u636e\u7c7b\u8ba1\u7b97\u8ddd\u79bb, \u4e5f\u53ef\u4ee5\u5c06\u6807\u79f0\u578b\u6570\u636e\u6620\u5c04\u4e3a\u4e8c\u503c\u578b\u6570\u636e\u518d\u7528\u4e8e\u8ddd\u79bb\u8ba1\u7b97\u3002 2\uff09\u5bf9\u4e8e\u672a\u805a\u7c7b\u6570\u636e\u96c6\uff0c\u9996\u5148\u968f\u673a\u521d\u59cb\u5316 K \u4e2a\uff08\u4ee3\u8868\u62df\u805a\u7c7b\u7c07\u4e2a\u6570\uff09\u4e2d\u5fc3\u70b9\uff0c\u5982\u56fe\u7ea2\u8272\u4e94\u89d2\u661f\u6240\u793a\u3002 3\uff09\u6bcf\u4e00\u4e2a\u6837\u672c\u6309\u7167\u8ddd\u79bb\u81ea\u8eab\u6700\u8fd1\u7684\u4e2d\u5fc3\u70b9\u8fdb\u884c\u805a\u7c7b( \u8ba1\u7b97\u8ddd\u79bb )\uff0c\u7b49\u6548\u4e8e\u901a\u8fc7\u4e24\u4e2d\u5fc3\u70b9\u8fde\u7ebf\u7684\u4e2d\u5782\u7ebf\u5212\u5206\u533a\u57df\u3002 4\uff09\u4f9d\u636e\u4e0a\u6b21\u805a\u7c7b\u7ed3\u679c\uff0c\u79fb\u52a8\u4e2d\u5fc3\u70b9\u5230\u4e2a\u7c07\u7684\u8d28\u5fc3\u4f4d\u7f6e(\u65b0\u7684\u8d28\u5fc3\u7684\u4f4d\u7f6e\u4e3a\u65b0\u7c07\u5185\u70b9\u7684x\u548cy\u5206\u522b\u7684\u7684\u5e73\u5747\u503c)\uff0c\u5e76\u5c06\u6b64\u8d28\u5fc3\u4f5c\u4e3a\u65b0\u7684\u4e2d\u5fc3\u70b9\u3002 5\uff09\u53cd\u590d\u8fed\u4ee3\uff0c\u76f4\u81f3\u4e2d\u5fc3\u70b9\u7684\u53d8\u5316\u6ee1\u8db3\u6536\u655b\u6761\u4ef6\uff08\u53d8\u5316\u5f88\u5c0f\u6216\u51e0\u4e4e\u4e0d\u53d8\u5316\uff09\uff0c\u6700\u7ec8\u5f97\u5230\u805a\u7c7b\u7ed3\u679c\u3002","title":"\u6b65\u9aa4\u63cf\u8ff0"},{"location":"ai/k-means/#_4","text":"\u8fd9\u91cc\u7684\u8ddd\u79bb\u6307\u7684\u662f\u5e73\u9762\u4e0a\u4e24\u4e2a\u70b9\u7684\u76f4\u7ebf\u8ddd\u79bb\u3002\u5e38\u7528\u7684\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\u6709\uff1a \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb \u66fc\u54c8\u987f\u8ddd\u79bb \u5207\u6bd4\u96ea\u592b\u8ddd\u79bb \u9a6c\u6c0f\u8ddd\u79bb \u4f59\u5f26\u76f8\u4f3c\u5ea6 \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 \u6c49\u660e\u8ddd\u79bb \u6770\u5361\u5fb7\u76f8\u4f3c\u7cfb\u6570 \u7f16\u8f91\u8ddd\u79bb DTW \u8ddd\u79bb KL \u6563\u5ea6","title":"\u5173\u4e8e\u8ddd\u79bb\u7684\u8ba1\u7b97"},{"location":"ai/k-means/#k","text":"1\uff09\u624b\u8098\u6cd5 \u5728\u4ecb\u7ecd\u4e4b\u524d\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e2a\u6982\u5ff5:SSE(sum of the squared errors\uff0c\u8bef\u5dee\u5e73\u65b9\u548c) \u624b\u8098\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\uff1a \u968f\u7740\u805a\u7c7b\u6570k\u7684\u589e\u5927\uff0c\u6837\u672c\u5212\u5206\u4f1a\u66f4\u52a0\u7cbe\u7ec6\uff0c\u6bcf\u4e2a\u7c07\u7684\u805a\u5408\u7a0b\u5ea6\u4f1a\u9010\u6e10\u63d0\u9ad8\uff0c\u90a3\u4e48\u8bef\u5dee\u5e73\u65b9\u548cSSE\u81ea\u7136\u4f1a\u9010\u6e10\u53d8\u5c0f\u3002 \u5f53k\u5c0f\u4e8e\u771f\u5b9e\u805a\u7c7b\u6570\u65f6\uff0c\u7531\u4e8ek\u7684\u589e\u5927\u4f1a\u5927\u5e45\u589e\u52a0\u6bcf\u4e2a\u7c07\u7684\u805a\u5408\u7a0b\u5ea6\uff0c\u6545SSE\u7684\u4e0b\u964d\u5e45\u5ea6\u4f1a\u5f88\u5927\uff0c\u800c\u5f53k\u5230\u8fbe\u771f\u5b9e\u805a\u7c7b\u6570\u65f6\uff0c\u518d\u589e\u52a0k\u6240\u5f97\u5230\u7684\u805a\u5408\u7a0b\u5ea6\u56de\u62a5\u4f1a\u8fc5\u901f\u53d8\u5c0f\uff0c\u6240\u4ee5SSE\u7684\u4e0b\u964d\u5e45\u5ea6\u4f1a\u9aa4\u51cf\uff0c\u7136\u540e\u968f\u7740k\u503c\u7684\u7ee7\u7eed\u589e\u5927\u800c\u8d8b\u4e8e\u5e73\u7f13\uff0c\u4e5f\u5c31\u662f\u8bf4SSE\u548ck\u7684\u5173\u7cfb\u56fe\u662f\u4e00\u4e2a\u624b\u8098\u7684\u5f62\u72b6\uff0c\u800c\u8fd9\u4e2a\u8098\u90e8\u5bf9\u5e94\u7684k\u503c\u5c31\u662f\u6570\u636e\u7684\u771f\u5b9e\u805a\u7c7b\u6570\u3002 2\uff09\u8f6e\u5ed3\u7cfb\u6570 \u4f7f\u7528\u8f6e\u5ed3\u7cfb\u6570(silhouette coefficient)\u6765\u786e\u5b9a\uff0c\u9009\u62e9\u4f7f\u7cfb\u6570\u8f83\u5927\u6240\u5bf9\u5e94\u7684k\u503c\u3002","title":"\u5173\u4e8eK\u503c\u7684\u9009\u62e9"},{"location":"ai/k-means/#_5","text":"","title":"\u4f18\u7f3a\u70b9"},{"location":"ai/k-means/#_6","text":"\u5c5e\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u65e0\u987b\u51c6\u5907\u8bad\u7ec3\u96c6\uff1b \u539f\u7406\u7b80\u5355\uff0c\u5b9e\u73b0\u8d77\u6765\u8f83\u4e3a\u5bb9\u6613\uff1b \u7ed3\u679c\u53ef\u89e3\u91ca\u6027\u8f83\u597d\u3002","title":"\u4f18\u70b9:"},{"location":"ai/k-means/#_7","text":"\u805a\u7c7b\u6570\u76eek\u662f\u4e00\u4e2a\u8f93\u5165\u53c2\u6570\u3002\u9009\u62e9\u4e0d\u6070\u5f53\u7684k\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7cdf\u7cd5\u7684\u805a\u7c7b\u7ed3\u679c\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u7279\u5f81\u68c0\u67e5\u6765\u51b3\u5b9a\u6570\u636e\u96c6\u7684\u805a\u7c7b\u6570\u76ee\u4e86\uff1b \u53ef\u80fd\u6536\u655b\u5230\u5c40\u90e8\u6700\u5c0f\u503c, \u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u6536\u655b\u8f83\u6162\uff1b \u5bf9\u4e8e\u5f02\u5e38\u70b9\u3001\u79bb\u7fa4\u70b9\u654f\u611f\u3002","title":"\u7f3a\u70b9:"},{"location":"ai/k-means/#_8","text":"\u4e0b\u9762\u7ed9\u5927\u5bb6\u4e00\u4e2a\u5b9e\u4f8b,\u4f9b\u5927\u5bb6\u53c2\u8003:","title":"\u63a8\u5bfc"},{"location":"ai/k-means/#k-means","text":"\u5728\u5b66\u4e60\u4e86\u4f20\u7edfK-means\u7b97\u6cd5\u7684\u57fa\u7840\u4e0a,\u6211\u4eec\u6e05\u695a\u4e86K-means\u7684\u5c40\u9650\u6027,\u56e0\u6b64\u6211\u4eec\u5c06\u8981\u8bf4\u4e00\u4e0bK-Means\u7684\u4f18\u5316\u53d8\u4f53\u65b9\u6cd5\u3002\u8fd9\u5176\u4e2d\u5305\u62ec\u521d\u59cb\u5316\u4f18\u5316K-Means++, \u8ddd\u79bb\u8ba1\u7b97\u4f18\u5316elkan K-Means\u7b97\u6cd5\u548c\u5927\u6570\u636e\u60c5\u51b5\u4e0b\u7684\u4f18\u5316Mini Batch K-Means\u7b97\u6cd5\u3002","title":"\u4f20\u7edfK-means\u6539\u8fdb"},{"location":"ai/k-means/#k-means_1","text":"\u5728\u5b66\u4e60K-means\u7b97\u6cd5\u65f6\u6211\u4eec\u63d0\u5230\uff0ck\u4e2a\u521d\u59cb\u5316\u7684\u8d28\u5fc3\u7684\u4f4d\u7f6e\u9009\u62e9\u5bf9\u6700\u540e\u7684\u805a\u7c7b\u7ed3\u679c\u548c\u8fd0\u884c\u65f6\u95f4\u90fd\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u9700\u8981\u9009\u62e9\u5408\u9002\u7684k\u4e2a\u8d28\u5fc3\u3002\u5982\u679c\u4ec5\u4ec5\u662f\u5b8c\u5168\u968f\u673a\u7684\u9009\u62e9\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u7b97\u6cd5\u6536\u655b\u5f88\u6162\u3002K-Means++\u7b97\u6cd5\u5c31\u662f\u5bf9K-Means\u968f\u673a\u521d\u59cb\u5316\u8d28\u5fc3\u7684\u65b9\u6cd5\u7684\u4f18\u5316\u3002","title":"K-means++"},{"location":"ai/k-means/#elkan-k-means","text":"\u5728\u4f20\u7edf\u7684K-Means\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u5728\u6bcf\u8f6e\u8fed\u4ee3\u65f6\uff0c\u8981\u8ba1\u7b97\u6240\u6709\u7684\u6837\u672c\u70b9\u5230\u6240\u6709\u7684\u8d28\u5fc3\u7684\u8ddd\u79bb\uff0c\u8fd9\u6837\u4f1a\u6bd4\u8f83\u7684\u8017\u65f6\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u8ddd\u79bb\u7684\u8ba1\u7b97\u6709\u6ca1\u6709\u80fd\u591f\u7b80\u5316\u7684\u5730\u65b9\u5462\uff1felkan K-Means\u7b97\u6cd5\u5c31\u662f\u4ece\u8fd9\u5757\u5165\u624b\u52a0\u4ee5\u6539\u8fdb\u3002\u5b83\u7684\u76ee\u6807\u662f\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u8ddd\u79bb\u7684\u8ba1\u7b97\u3002","title":"elkan K-means"},{"location":"ai/k-means/#mini-batch-k-means","text":"\u5728\u7edf\u7684K-Means\u7b97\u6cd5\u4e2d\uff0c\u8981\u8ba1\u7b97\u6240\u6709\u7684\u6837\u672c\u70b9\u5230\u6240\u6709\u7684\u8d28\u5fc3\u7684\u8ddd\u79bb\u3002\u5982\u679c\u6837\u672c\u91cf\u975e\u5e38\u5927\uff0c\u6bd4\u5982\u8fbe\u523010\u4e07\u4ee5\u4e0a\uff0c\u7279\u5f81\u6709100\u4ee5\u4e0a\uff0c\u6b64\u65f6\u7528\u4f20\u7edf\u7684K-Means\u7b97\u6cd5\u975e\u5e38\u7684\u8017\u65f6\uff0c\u5c31\u7b97\u52a0\u4e0aelkan K-Means\u4f18\u5316\u4e5f\u4f9d\u65e7\u3002\u5728\u5927\u6570\u636e\u65f6\u4ee3\uff0c\u8fd9\u6837\u7684\u573a\u666f\u8d8a\u6765\u8d8a\u591a\u3002\u6b64\u65f6Mini Batch K-Means\u5e94\u8fd0\u800c\u751f\u3002 \u987e\u540d\u601d\u4e49\uff0cMini Batch\uff0c\u4e5f\u5c31\u662f\u7528\u6837\u672c\u96c6\u4e2d\u7684\u4e00\u90e8\u5206\u7684\u6837\u672c\u6765\u505a\u4f20\u7edf\u7684K-Means\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u6837\u672c\u91cf\u592a\u5927\u65f6\u7684\u8ba1\u7b97\u96be\u9898\uff0c\u7b97\u6cd5\u6536\u655b\u901f\u5ea6\u5927\u5927\u52a0\u5feb\u3002\u5f53\u7136\u6b64\u65f6\u7684\u4ee3\u4ef7\u5c31\u662f\u6211\u4eec\u7684\u805a\u7c7b\u7684\u7cbe\u786e\u5ea6\u4e5f\u4f1a\u6709\u4e00\u4e9b\u964d\u4f4e\u3002\u4e00\u822c\u6765\u8bf4\u8fd9\u4e2a\u964d\u4f4e\u7684\u5e45\u5ea6\u5728\u53ef\u4ee5\u63a5\u53d7\u7684\u8303\u56f4\u4e4b\u5185\u3002 \u6ce8\u610f: \u6b64\u90e8\u5206\u4e3a\u6269\u5c55\u5185\u5bb9,\u5982\u679c\u4f60\u60f3\u771f\u6b63\u7684\u53bb\u4f18\u5316\u4f60\u7684\u7b97\u6cd5,\u66f4\u8be6\u7ec6\u7684\u4f18\u5316\u6b65\u9aa4\u4f60\u53ef\u4ee5\u53bb \u5218\u5efa\u5e73Pinard-K-Means\u805a\u7c7b\u7b97\u6cd5\u539f\u7406 \u6216\u8005\u662f \u767e\u5ea6\u4e00\u4e0b \u3002","title":"Mini Batch K-means"},{"location":"ai/k-means/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 import numpy import random import matplotlib.pyplot as plt def findCentroids ( data_get , k ): # \u968f\u673a\u83b7\u53d6k\u4e2a\u8d28\u5fc3 return random . sample ( data_get , k ) def calculateDistance ( vecA , vecB ): # \u8ba1\u7b97\u5411\u91cfvecA\u548c\u5411\u91cfvecB\u4e4b\u95f4\u7684\u6b27\u6c0f\u8ddd\u79bb return numpy . sqrt ( numpy . sum ( numpy . square ( vecA - vecB ))) def minDistance ( data_get , centroidList ): # \u8ba1\u7b97data_get\u4e2d\u7684\u5143\u7d20\u4e0ecentroidList\u4e2dk\u4e2a\u805a\u7c7b\u4e2d\u5fc3\u7684\u6b27\u5f0f\u8ddd\u79bb\uff0c\u627e\u51fa\u8ddd\u79bb\u6700\u5c0f\u7684 # \u5c06\u8be5\u5143\u7d20\u52a0\u5165\u76f8\u5e94\u7684\u805a\u7c7b\u4e2d clusterDict = dict () # \u7528\u5b57\u5178\u5b58\u50a8\u805a\u7c7b\u7ed3\u679c for element in data_get : vecA = numpy . array ( element ) # \u8f6c\u6362\u6210\u6570\u7ec4\u5f62\u5f0f flag = 0 # \u5143\u7d20\u5206\u7c7b\u6807\u8bb0\uff0c\u8bb0\u5f55\u4e0e\u76f8\u5e94\u805a\u7c7b\u8ddd\u79bb\u6700\u8fd1\u7684\u90a3\u4e2a\u7c7b minDis = float ( \"inf\" ) # \u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c for i in range ( len ( centroidList )): vecB = numpy . array ( centroidList [ i ]) distance = calculateDistance ( vecA , vecB ) # \u4e24\u5411\u91cf\u95f4\u7684\u6b27\u5f0f\u8ddd\u79bb if distance < minDis : minDis = distance flag = i # \u4fdd\u5b58\u4e0e\u5f53\u524ditem\u8ddd\u79bb\u6700\u8fd1\u7684\u90a3\u4e2a\u805a\u7c7b\u7684\u6807\u8bb0 if flag not in clusterDict . keys (): # \u7c07\u6807\u8bb0\u4e0d\u5b58\u5728\uff0c\u8fdb\u884c\u521d\u59cb\u5316 clusterDict [ flag ] = list () clusterDict [ flag ] . append ( element ) # \u52a0\u5165\u76f8\u5e94\u7684\u7c7b\u4e2d return clusterDict # \u8fd4\u56de\u65b0\u7684\u805a\u7c7b\u7ed3\u679c def getCentroids ( clusterDict ): centroidList = list () for key in clusterDict . keys (): centroid = numpy . mean ( numpy . array ( clusterDict [ key ]), axis = 0 ) # \u6c42\u805a\u7c7b\u4e2d\u5fc3\u5373\u6c42\u89e3\u6bcf\u5217\u7684\u5747\u503c centroidList . append ( centroid ) return numpy . array ( centroidList ) . tolist () def calculate_Var ( clusterDict , centroidList ): # \u8ba1\u7b97\u805a\u7c7b\u95f4\u7684\u5747\u65b9\u8bef\u5dee # \u5c06\u7c7b\u4e2d\u5404\u4e2a\u5411\u91cf\u4e0e\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u8fdb\u884c\u7d2f\u52a0\u6c42\u548c sum = 0.0 for key in clusterDict . keys (): vecA = numpy . array ( centroidList [ key ]) distance = 0.0 for item in clusterDict [ key ]: vecB = numpy . array ( item ) distance += calculateDistance ( vecA , vecB ) sum += distance return sum def showCluster ( centroidList , clusterDict ): # \u753b\u805a\u7c7b\u7ed3\u679c colorMark = [ 'or' , 'ob' , 'og' , 'ok' , 'oy' , 'ow' ] # \u5143\u7d20\u6807\u8bb0 centroidMark = [ 'dr' , 'db' , 'dg' , 'dk' , 'dy' , 'dw' ] # \u805a\u7c7b\u4e2d\u5fc3\u6807\u8bb0 for key in clusterDict . keys (): plt . plot ( centroidList [ key ][ 0 ], centroidList [ key ][ 1 ], centroidMark [ key ], markersize = 12 ) # \u753b\u805a\u7c7b\u4e2d\u5fc3 for item in clusterDict [ key ]: plt . plot ( item [ 0 ], item [ 1 ], colorMark [ key ]) # \u753b\u7c7b\u4e0b\u7684\u70b9 plt . show () data = [[ 0.0 , 0.0 ], [ 3.0 , 8.0 ], [ 2.0 , 2.0 ], [ 1.0 , 1.0 ], [ 5.0 , 3.0 ], [ 4.0 , 8.0 ], [ 6.0 , 3.0 ], [ 5.0 , 4.0 ], [ 6.0 , 4.0 ], [ 7.0 , 5.0 ]] if __name__ == '__main__' : centroidList = findCentroids ( data , 3 ) # \u968f\u673a\u83b7\u53d63\u4e2a\u805a\u7c7b\u4e2d\u5fc3 clusterDict = minDistance ( data , centroidList ) # \u7b2c\u4e00\u6b21\u805a\u7c7b\u8fed\u4ee3 newVar = calculate_Var ( clusterDict , centroidList ) # \u8ba1\u7b97\u5747\u65b9\u8bef\u5dee\u503c\uff0c\u901a\u8fc7\u65b0\u65e7\u5747\u65b9\u8bef\u5dee\u6765\u83b7\u5f97\u8fed\u4ee3\u7ec8\u6b62\u6761\u4ef6 oldVar = - 0.0001 # \u521d\u59cb\u5316\u5747\u65b9\u8bef\u5dee print ( '***** \u7b2c1\u6b21\u8fed\u4ee3 *****' ) for key in clusterDict . keys (): print ( '\u805a\u7c7b\u4e2d\u5fc3: ' , centroidList [ key ]) print ( '\u5bf9\u5e94\u805a\u7c7b: ' , clusterDict [ key ]) print ( '\u5e73\u5747\u5747\u65b9\u8bef\u5dee: ' , newVar ) showCluster ( centroidList , clusterDict ) # \u5c55\u793a\u805a\u7c7b\u7ed3\u679c k = 2 while abs ( newVar - oldVar ) >= 0.0001 : # \u5f53\u8fde\u7eed\u4e24\u6b21\u805a\u7c7b\u7ed3\u679c\u5dee\u8ddd\u5c0f\u4e8e0.0001\u65f6\uff0c\u8fed\u4ee3\u7ed3\u675f centroidList = getCentroids ( clusterDict ) # \u83b7\u5f97\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3 clusterDict = minDistance ( data , centroidList ) # \u65b0\u7684\u805a\u7c7b\u7ed3\u679c oldVar = newVar newVar = calculate_Var ( clusterDict , centroidList ) print ( '***** \u7b2c %d \u6b21\u8fed\u4ee3 *****' % k ) for key in clusterDict . keys (): print ( '\u805a\u7c7b\u4e2d\u5fc3: ' , centroidList [ key ]) print ( '\u5bf9\u5e94\u805a\u7c7b: ' , clusterDict [ key ]) print ( '\u5e73\u5747\u5747\u65b9\u8bef\u5dee: ' , newVar ) showCluster ( centroidList , clusterDict ) # \u5c55\u793a\u805a\u7c7b\u7ed3\u679c k += 1 K-means\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/knn/","text":"K-\u6700\u8fd1\u90bb\u7b97\u6cd5\u6982\u8ff0 \u00b6 \u4ecb\u7ecd \u00b6 \u90bb\u8fd1\u7b97\u6cd5\uff0c\u6216\u8005\u8bf4K\u6700\u8fd1\u90bb(kNN\uff0ck-NearestNeighbor)\u5206\u7c7b\u7b97\u6cd5\u662f\u6570\u636e\u6316\u6398\u5206\u7c7b\u6280\u672f\u4e2d\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002\u6240\u8c13K\u6700\u8fd1\u90bb\uff0c\u5c31\u662fk\u4e2a\u6700\u8fd1\u7684\u90bb\u5c45\u7684\u610f\u601d\uff0c\u8bf4\u7684\u662f\u6bcf\u4e2a\u6837\u672c\u90fd\u53ef\u4ee5\u7528\u5b83\u6700\u63a5\u8fd1\u7684k\u4e2a\u90bb\u5c45\u6765\u4ee3\u8868\u3002KNN\u662f\u4e00\u79cd\u5206\u7c7b(classification)\u7b97\u6cd5\uff0c\u5b83\u8f93\u5165\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\uff08instance-based learning\uff09\uff0c\u5c5e\u4e8e\u61d2\u60f0\u5b66\u4e60\uff08lazy learning\uff09\u5373KNN\u6ca1\u6709\u663e\u5f0f\u7684\u5b66\u4e60\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u8bad\u7ec3\u9636\u6bb5\uff0c\u6570\u636e\u96c6\u4e8b\u5148\u5df2\u6709\u4e86\u5206\u7c7b\u548c\u7279\u5f81\u503c\uff0c\u5f85\u6536\u5230\u65b0\u6837\u672c\u540e\u76f4\u63a5\u8fdb\u884c\u5904\u7406\u3002\u4e0e\u6025\u5207\u5b66\u4e60\uff08eager learning\uff09\u76f8\u5bf9\u5e94\u3002 KNN\u7b97\u6cd5\u7684\u601d\u8def\u662f\uff1a\u5982\u679c\u4e00\u4e2a\u6837\u672c\u5728\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684k\u4e2a\u6700\u90bb\u8fd1\u7684\u6837\u672c\u4e2d\u7684\u5927\u591a\u6570\u5c5e\u4e8e\u67d0\u4e00\u4e2a\u7c7b\u522b\uff0c\u5219\u8be5\u6837\u672c\u4e5f\u5212\u5206\u4e3a\u8fd9\u4e2a\u7c7b\u522b\u3002KNN\u7b97\u6cd5\u4e2d\uff0c\u6240\u9009\u62e9\u7684\u90bb\u5c45\u90fd\u662f\u5df2\u7ecf\u6b63\u786e\u5206\u7c7b\u7684\u5bf9\u8c61\u3002\u8be5\u65b9\u6cd5\u5728\u5b9a\u7c7b\u51b3\u7b56\u4e0a\u53ea\u4f9d\u636e\u6700\u90bb\u8fd1\u7684\u4e00\u4e2a\u6216\u8005\u51e0\u4e2a\u6837\u672c\u7684\u7c7b\u522b\u6765\u51b3\u5b9a\u5f85\u5206\u6837\u672c\u6240\u5c5e\u7684\u7c7b\u522b\u3002 \u63d0\u5230KNN\uff0c\u7f51\u4e0a\u6700\u5e38\u89c1\u7684\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u3002\u6211\u4eec\u8981\u786e\u5b9a\u7eff\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u989c\u8272\uff08\u7ea2\u8272\u6216\u8005\u84dd\u8272\uff09\uff0c\u8981\u505a\u7684\u5c31\u662f\u9009\u51fa\u8ddd\u79bb\u76ee\u6807\u70b9\u8ddd\u79bb\u6700\u8fd1\u7684k\u4e2a\u70b9\uff0c\u770b\u8fd9k\u4e2a\u70b9\u7684\u5927\u591a\u6570\u989c\u8272\u662f\u4ec0\u4e48\u989c\u8272\u3002\u5f53k\u53d63\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8ddd\u79bb\u6700\u8fd1\u7684\u4e09\u4e2a\uff0c\u5206\u522b\u662f\u7ea2\u8272\u3001\u7ea2\u8272\u3001\u84dd\u8272\uff0c\u56e0\u6b64\u5f97\u5230\u76ee\u6807\u70b9\u4e3a\u7ea2\u8272\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u00b6 \u6b65\u9aa4\u63cf\u8ff0 \u00b6 1\uff09\u8ba1\u7b97\u6d4b\u8bd5\u6570\u636e\u4e0e\u5404\u4e2a\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1b 2\uff09\u6309\u7167\u8ddd\u79bb\u7684\u9012\u589e\u5173\u7cfb\u8fdb\u884c\u6392\u5e8f\uff1b 3\uff09\u9009\u53d6\u8ddd\u79bb\u6700\u5c0f\u7684K\u4e2a\u70b9\uff1b 4\uff09\u786e\u5b9a\u524dK\u4e2a\u70b9\u6240\u5728\u7c7b\u522b\u7684\u51fa\u73b0\u9891\u7387\uff1b 5\uff09\u8fd4\u56de\u524dK\u4e2a\u70b9\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u7c7b\u522b(\u51b3\u7b56\u4f9d\u636e\u65b9\u6cd5\u4e4b\u4e00)\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u7684\u9884\u6d4b\u5206\u7c7b\u3002 \u5173\u4e8e\u8ddd\u79bb\u7684\u8ba1\u7b97 \u00b6 \u8fd9\u91cc\u7684\u8ddd\u79bb\u6307\u7684\u662f\u5e73\u9762\u4e0a\u4e24\u4e2a\u70b9\u7684\u76f4\u7ebf\u8ddd\u79bb\u3002\u5e38\u7528\u7684\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\u6709\uff1a \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb \u66fc\u54c8\u987f\u8ddd\u79bb \u5207\u6bd4\u96ea\u592b\u8ddd\u79bb \u9a6c\u6c0f\u8ddd\u79bb \u4f59\u5f26\u76f8\u4f3c\u5ea6 \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 \u6c49\u660e\u8ddd\u79bb \u6770\u5361\u5fb7\u76f8\u4f3c\u7cfb\u6570 \u7f16\u8f91\u8ddd\u79bb DTW \u8ddd\u79bb KL \u6563\u5ea6 \u5173\u4e8eK\u503c\u7684\u9009\u62e9 \u00b6 K\u79f0\u4e3a\u4e34\u8fd1\u6570\uff0c\u5373\u5728\u9884\u6d4b\u76ee\u6807\u70b9\u65f6\u53d6\u51e0\u4e2a\u4e34\u8fd1\u7684\u70b9\u6765\u9884\u6d4b\u3002 K\u503c\u5f97\u9009\u53d6\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\uff1a \u5982\u679c\u5f53K\u7684\u53d6\u503c\u8fc7\u5c0f\u65f6\uff0c\u4e00\u65e6\u6709\u566a\u58f0\u5f97\u6210\u5206\u5b58\u5728\u4eec\u5c06\u4f1a\u5bf9\u9884\u6d4b\u4ea7\u751f\u6bd4\u8f83\u5927\u5f71\u54cd\uff0c\u4f8b\u5982\u53d6K\u503c\u4e3a1\u65f6\uff0c\u4e00\u65e6\u6700\u8fd1\u7684\u4e00\u4e2a\u70b9\u662f\u566a\u58f0\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u504f\u5dee\uff0cK\u503c\u7684\u51cf\u5c0f\u5c31\u610f\u5473\u7740\u6574\u4f53\u6a21\u578b\u53d8\u5f97\u590d\u6742\uff0c\u5bb9\u6613\u53d1\u751f \u8fc7\u62df\u5408 \uff1b \u5982\u679cK\u7684\u503c\u53d6\u7684\u8fc7\u5927\u65f6\uff0c\u5c31\u76f8\u5f53\u4e8e\u7528\u8f83\u5927\u90bb\u57df\u4e2d\u7684\u8bad\u7ec3\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\uff0c\u5b66\u4e60\u7684\u8fd1\u4f3c\u8bef\u5dee\u4f1a\u589e\u5927\u3002\u8fd9\u65f6\u4e0e\u8f93\u5165\u76ee\u6807\u70b9\u8f83\u8fdc\u5b9e\u4f8b\u4e5f\u4f1a\u5bf9\u9884\u6d4b\u8d77\u4f5c\u7528\uff0c\u4f7f\u9884\u6d4b\u53d1\u751f\u9519\u8bef\u3002K\u503c\u7684\u589e\u5927\u5c31\u610f\u5473\u7740\u6574\u4f53\u7684\u6a21\u578b\u53d8\u5f97\u7b80\u5355\uff0c\u4e5f\u5c31\u662f\u5bb9\u6613\u53d1\u751f \u6b20\u62df\u5408 \uff1b \u5982\u679cK=N\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u5c31\u662f\u53d6\u5168\u90e8\u7684\u5b9e\u4f8b\uff0c\u5373\u4e3a\u53d6\u5b9e\u4f8b\u4e2d\u67d0\u5206\u7c7b\u4e0b\u6700\u591a\u7684\u70b9\uff0c\u5c31\u5bf9\u9884\u6d4b\u6ca1\u6709\u4ec0\u4e48\u5b9e\u9645\u7684\u610f\u4e49\u4e86\uff1b \u4e3a\u6b64\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u53d6K\u7684\u503c: \u4ecek=1\u5f00\u59cb\uff0c\u4f7f\u7528\u68c0\u9a8c\u96c6\u4f30\u8ba1\u5206\u7c7b\u5668\u7684\u8bef\u5dee\u7387\u3002\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u6bcf\u6b21K\u589e\u503c1\uff0c\u5141\u8bb8\u589e\u52a0\u4e00\u4e2a\u8fd1\u90bb\u3002\u9009\u53d6\u4ea7\u751f\u6700\u5c0f\u8bef\u5dee\u7387\u7684K\uff1b \u4e00\u822ck\u7684\u53d6\u503c\u4e0d\u8d85\u8fc720\uff0c\u4e0a\u9650\u662fn\u7684\u5f00\u65b9\uff0c\u968f\u7740\u6570\u636e\u96c6\u7684\u589e\u5927\uff0cK\u7684\u503c\u4e5f\u8981\u589e\u5927\uff1b K\u7684\u53d6\u503c\u5c3d\u91cf\u8981 \u53d6\u5947\u6570 \uff0c\u4ee5\u4fdd\u8bc1\u5728\u8ba1\u7b97\u7ed3\u679c\u6700\u540e\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8f83\u591a\u7684\u7c7b\u522b\uff0c\u5982\u679c\u53d6\u5076\u6570\u53ef\u80fd\u4f1a\u4ea7\u751f\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u4e0d\u5229\u4e8e\u9884\u6d4b\u3002 \u5173\u4e8e\u51b3\u7b56\u4f9d\u636e/\u89c4\u5219 \u00b6 \u6700\u5e38\u7528\u7684\u51b3\u7b56\u89c4\u5219\u662f\uff1a \u591a\u6570\u8868\u51b3\u6cd5(\u66f4\u5e38\u7528)\uff1a\u591a\u6570\u8868\u51b3\u6cd5\u7c7b\u4f3c\u4e8e\u6295\u7968\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u5728 K \u4e2a\u90bb\u5c45\u4e2d\u9009\u62e9\u7c7b\u522b\u6700\u591a\u7684\u79cd\u7c7b\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\u7684\u7c7b\u522b\uff1b \u52a0\u6743\u8868\u51b3\u6cd5\uff1a\u6839\u636e\u8ddd\u79bb\u7684\u8fdc\u8fd1\uff0c\u5bf9\u8fd1\u90bb\u7684\u6295\u7968\u8fdb\u884c\u52a0\u6743\uff0c\u8ddd\u79bb\u8d8a\u8fd1\u5219\u6743\u91cd\u8d8a\u5927\uff0c\u901a\u8fc7\u6743\u91cd\u8ba1\u7b97\u7ed3\u679c\u6700\u5927\u503c\u7684\u7c7b\u4e3a\u6d4b\u8bd5\u6837\u672c\u7684\u7c7b\u522b\u3002 \u4f18\u7f3a\u70b9 \u00b6 \u4f18\u70b9: \u00b6 1\uff09\u7b80\u5355\u597d\u7528\uff0c\u5bb9\u6613\u7406\u89e3\uff0c\u7cbe\u5ea6\u9ad8\uff0c\u7406\u8bba\u6210\u719f\uff0c\u65e2\u53ef\u4ee5\u7528\u6765\u505a\u5206\u7c7b\u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u56de\u5f52\uff1b 2\uff09\u53ef\u7528\u4e8e\u6570\u503c\u578b\u6570\u636e\u548c\u79bb\u6563\u578b\u6570\u636e\uff1b 3\uff09\u8bad\u7ec3\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff1b\u65e0\u6570\u636e\u8f93\u5165\u5047\u5b9a\uff1b 4\uff09\u5bf9\u5f02\u5e38\u503c\u4e0d\u654f\u611f\u3002 \u7f3a\u70b9\uff1a \u00b6 1\uff09\u8ba1\u7b97\u590d\u6742\u6027\u9ad8\uff1b\u7a7a\u95f4\u590d\u6742\u6027\u9ad8\uff1b 2\uff09\u6837\u672c\u4e0d\u5e73\u8861\u95ee\u9898\uff08\u5373\u6709\u4e9b\u7c7b\u522b\u7684\u6837\u672c\u6570\u91cf\u5f88\u591a\uff0c\u800c\u5176\u5b83\u6837\u672c\u7684\u6570\u91cf\u5f88\u5c11\uff09\uff1b 3\uff09\u4e00\u822c\u6570\u503c\u5f88\u5927\u7684\u65f6\u5019\u4e0d\u7528\u8fd9\u4e2a\uff0c\u8ba1\u7b97\u91cf\u592a\u5927\u3002\u4f46\u662f\u5355\u4e2a\u6837\u672c\u53c8\u4e0d\u80fd\u592a\u5c11\uff0c\u5426\u5219\u5bb9\u6613\u53d1\u751f\u8bef\u5206\uff1b 4\uff09\u6700\u5927\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u7ed9\u51fa\u6570\u636e\u7684\u5185\u5728\u542b\u4e49\u3002 \u4ee3\u7801\u7ec3\u4e60 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #\u5f15\u5e93 import numpy as np import matplotlib.pyplot as plt from math import sqrt % matplotlib inline #\u539f\u59cb\u6570\u636e data = [[ 1 , 0.9 ],[ 1 , 1 ],[ 0.1 , 0.2 ],[ 0 , 0.1 ]] labels = [ \"A\" , \"A\" , \"B\" , \"B\" ] test_data = [[ 0.1 , 0.3 ]] #\u7ed8\u5236\u539f\u59cb\u6570\u636e\u6563\u70b9\u56fe print ( \"===============================\u6570\u636e\u51c6\u5907================================\" ) print ( \"\u539f\u59cb\u6570\u636e\u56fe\u50cf\u7ed8\u5236...\" ) for i in range ( len ( data )): plt . scatter ( data [ i ][ 0 ], data [ i ][ 1 ], color = \"b\" ) plt . scatter ( test_data [ 0 ][ 0 ], test_data [ 0 ][ 1 ], color = 'r' ) plt . show () #\u6d4b\u8bd5\u6570\u636ex=(0.1,0.3) #\u91c7\u7528\u6b27\u5f0f\u8ddd\u79bb\u8fdb\u884c\u8ba1\u7b97 print ( \"===============================\u8ddd\u79bb\u8ba1\u7b97================================\" ) x = [[ 0.1 , 0.3 ]] distance = [] labels_wz = [] for i in range ( len ( data )): d = 0 d = sqrt (( x [ 0 ][ 0 ] - data [ i ][ 0 ]) ** 2 + ( x [ 0 ][ 1 ] - data [ i ][ 1 ]) ** 2 ) distance . append ( d ) labels_wz . append ( i ) print ( \"\u8ba1\u7b97\u7684\u8ddd\u79bb\u4e3a: \\n \" , distance ) print ( \"\u73b0\u5728\u5bf9\u5e94\u7684\u6807\u7b7e\u4f4d\u7f6e\u4e3a: \\n \" , labels_wz ) #\u6309\u7167\u5347\u5e8f\u6392\u5e8f,\u5e76\u53d6\u8ddd\u79bb\u8f83\u5c0f\u7684\u524d3\u4e2a print ( \"===============================\u8ddd\u79bb\u6392\u5e8f================================\" ) for i in range ( len ( data ) - 1 ): for j in range ( i + 1 , len ( data )): if distance [ i ] > distance [ j ]: distance [ i ], distance [ j ] = distance [ j ], distance [ i ] labels_wz [ i ], labels_wz [ j ] = labels_wz [ j ], labels_wz [ i ] print ( \"\u6392\u5e8f\u540e\u7684\u8ddd\u79bb\u4e3a: \\n \" , distance ) print ( \"\u5bf9\u5e94\u7684\u6807\u7b7e\u7684\u4f4d\u7f6e\u4e3a: \\n \" , labels_wz ) print ( \"\u53d6\u8ddd\u79bb\u6700\u8fd1\u76843\u4e2a\u503c:\" , distance [ 0 : 3 ]) #\u8fdb\u884c\u6295\u7968\u8868\u51b3 print ( \"===============================\u8868\u51b3\u6295\u7968================================\" ) A = 0 B = 0 for i in range ( len ( labels_wz [ 0 : 3 ])): if labels [ labels_wz [ i ]] == \"A\" : A += 1 else : B += 1 print ( \"\u6295\u7968\u4e3aA\u7684\u6570\u91cf\u4e3a:\" , A ) print ( \"\u6295\u7968\u4e3aB\u7684\u6570\u91cf\u4e3a:\" , B ) print ( \" \\n \u5bf9\u7167\u521d\u59cb\u56fe\u4e2d\u7ea2\u8272\u70b9(\u6d4b\u8bd5\u70b9)\u4e0e\u524d\u4e24\u4e2a\u6807\u7b7e\u4e3aA\u7684\u79bb\u7684\u6700\u8fd1,\u6240\u4ee5\u6211\u4eec\u7684\u8ba1\u7b97\u4e0e\u56fe\u4e2d\u6240\u5448\u73b0\u7684\u7ed3\u679c\u4e00\u81f4!\" ) KNN\u7b97\u6cd5\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"1. K-\u6700\u8fd1\u90bb\u7b97\u6cd5"},{"location":"ai/knn/#k-","text":"","title":"K-\u6700\u8fd1\u90bb\u7b97\u6cd5\u6982\u8ff0"},{"location":"ai/knn/#_1","text":"\u90bb\u8fd1\u7b97\u6cd5\uff0c\u6216\u8005\u8bf4K\u6700\u8fd1\u90bb(kNN\uff0ck-NearestNeighbor)\u5206\u7c7b\u7b97\u6cd5\u662f\u6570\u636e\u6316\u6398\u5206\u7c7b\u6280\u672f\u4e2d\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002\u6240\u8c13K\u6700\u8fd1\u90bb\uff0c\u5c31\u662fk\u4e2a\u6700\u8fd1\u7684\u90bb\u5c45\u7684\u610f\u601d\uff0c\u8bf4\u7684\u662f\u6bcf\u4e2a\u6837\u672c\u90fd\u53ef\u4ee5\u7528\u5b83\u6700\u63a5\u8fd1\u7684k\u4e2a\u90bb\u5c45\u6765\u4ee3\u8868\u3002KNN\u662f\u4e00\u79cd\u5206\u7c7b(classification)\u7b97\u6cd5\uff0c\u5b83\u8f93\u5165\u57fa\u4e8e\u5b9e\u4f8b\u7684\u5b66\u4e60\uff08instance-based learning\uff09\uff0c\u5c5e\u4e8e\u61d2\u60f0\u5b66\u4e60\uff08lazy learning\uff09\u5373KNN\u6ca1\u6709\u663e\u5f0f\u7684\u5b66\u4e60\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u8bad\u7ec3\u9636\u6bb5\uff0c\u6570\u636e\u96c6\u4e8b\u5148\u5df2\u6709\u4e86\u5206\u7c7b\u548c\u7279\u5f81\u503c\uff0c\u5f85\u6536\u5230\u65b0\u6837\u672c\u540e\u76f4\u63a5\u8fdb\u884c\u5904\u7406\u3002\u4e0e\u6025\u5207\u5b66\u4e60\uff08eager learning\uff09\u76f8\u5bf9\u5e94\u3002 KNN\u7b97\u6cd5\u7684\u601d\u8def\u662f\uff1a\u5982\u679c\u4e00\u4e2a\u6837\u672c\u5728\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684k\u4e2a\u6700\u90bb\u8fd1\u7684\u6837\u672c\u4e2d\u7684\u5927\u591a\u6570\u5c5e\u4e8e\u67d0\u4e00\u4e2a\u7c7b\u522b\uff0c\u5219\u8be5\u6837\u672c\u4e5f\u5212\u5206\u4e3a\u8fd9\u4e2a\u7c7b\u522b\u3002KNN\u7b97\u6cd5\u4e2d\uff0c\u6240\u9009\u62e9\u7684\u90bb\u5c45\u90fd\u662f\u5df2\u7ecf\u6b63\u786e\u5206\u7c7b\u7684\u5bf9\u8c61\u3002\u8be5\u65b9\u6cd5\u5728\u5b9a\u7c7b\u51b3\u7b56\u4e0a\u53ea\u4f9d\u636e\u6700\u90bb\u8fd1\u7684\u4e00\u4e2a\u6216\u8005\u51e0\u4e2a\u6837\u672c\u7684\u7c7b\u522b\u6765\u51b3\u5b9a\u5f85\u5206\u6837\u672c\u6240\u5c5e\u7684\u7c7b\u522b\u3002 \u63d0\u5230KNN\uff0c\u7f51\u4e0a\u6700\u5e38\u89c1\u7684\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u3002\u6211\u4eec\u8981\u786e\u5b9a\u7eff\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u989c\u8272\uff08\u7ea2\u8272\u6216\u8005\u84dd\u8272\uff09\uff0c\u8981\u505a\u7684\u5c31\u662f\u9009\u51fa\u8ddd\u79bb\u76ee\u6807\u70b9\u8ddd\u79bb\u6700\u8fd1\u7684k\u4e2a\u70b9\uff0c\u770b\u8fd9k\u4e2a\u70b9\u7684\u5927\u591a\u6570\u989c\u8272\u662f\u4ec0\u4e48\u989c\u8272\u3002\u5f53k\u53d63\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8ddd\u79bb\u6700\u8fd1\u7684\u4e09\u4e2a\uff0c\u5206\u522b\u662f\u7ea2\u8272\u3001\u7ea2\u8272\u3001\u84dd\u8272\uff0c\u56e0\u6b64\u5f97\u5230\u76ee\u6807\u70b9\u4e3a\u7ea2\u8272\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/knn/#_2","text":"","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"ai/knn/#_3","text":"1\uff09\u8ba1\u7b97\u6d4b\u8bd5\u6570\u636e\u4e0e\u5404\u4e2a\u8bad\u7ec3\u6570\u636e\u4e4b\u95f4\u7684\u8ddd\u79bb\uff1b 2\uff09\u6309\u7167\u8ddd\u79bb\u7684\u9012\u589e\u5173\u7cfb\u8fdb\u884c\u6392\u5e8f\uff1b 3\uff09\u9009\u53d6\u8ddd\u79bb\u6700\u5c0f\u7684K\u4e2a\u70b9\uff1b 4\uff09\u786e\u5b9a\u524dK\u4e2a\u70b9\u6240\u5728\u7c7b\u522b\u7684\u51fa\u73b0\u9891\u7387\uff1b 5\uff09\u8fd4\u56de\u524dK\u4e2a\u70b9\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u7c7b\u522b(\u51b3\u7b56\u4f9d\u636e\u65b9\u6cd5\u4e4b\u4e00)\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u7684\u9884\u6d4b\u5206\u7c7b\u3002","title":"\u6b65\u9aa4\u63cf\u8ff0"},{"location":"ai/knn/#_4","text":"\u8fd9\u91cc\u7684\u8ddd\u79bb\u6307\u7684\u662f\u5e73\u9762\u4e0a\u4e24\u4e2a\u70b9\u7684\u76f4\u7ebf\u8ddd\u79bb\u3002\u5e38\u7528\u7684\u8ddd\u79bb\u8ba1\u7b97\u516c\u5f0f\u6709\uff1a \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb \u66fc\u54c8\u987f\u8ddd\u79bb \u5207\u6bd4\u96ea\u592b\u8ddd\u79bb \u9a6c\u6c0f\u8ddd\u79bb \u4f59\u5f26\u76f8\u4f3c\u5ea6 \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 \u6c49\u660e\u8ddd\u79bb \u6770\u5361\u5fb7\u76f8\u4f3c\u7cfb\u6570 \u7f16\u8f91\u8ddd\u79bb DTW \u8ddd\u79bb KL \u6563\u5ea6","title":"\u5173\u4e8e\u8ddd\u79bb\u7684\u8ba1\u7b97"},{"location":"ai/knn/#k","text":"K\u79f0\u4e3a\u4e34\u8fd1\u6570\uff0c\u5373\u5728\u9884\u6d4b\u76ee\u6807\u70b9\u65f6\u53d6\u51e0\u4e2a\u4e34\u8fd1\u7684\u70b9\u6765\u9884\u6d4b\u3002 K\u503c\u5f97\u9009\u53d6\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\uff1a \u5982\u679c\u5f53K\u7684\u53d6\u503c\u8fc7\u5c0f\u65f6\uff0c\u4e00\u65e6\u6709\u566a\u58f0\u5f97\u6210\u5206\u5b58\u5728\u4eec\u5c06\u4f1a\u5bf9\u9884\u6d4b\u4ea7\u751f\u6bd4\u8f83\u5927\u5f71\u54cd\uff0c\u4f8b\u5982\u53d6K\u503c\u4e3a1\u65f6\uff0c\u4e00\u65e6\u6700\u8fd1\u7684\u4e00\u4e2a\u70b9\u662f\u566a\u58f0\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u504f\u5dee\uff0cK\u503c\u7684\u51cf\u5c0f\u5c31\u610f\u5473\u7740\u6574\u4f53\u6a21\u578b\u53d8\u5f97\u590d\u6742\uff0c\u5bb9\u6613\u53d1\u751f \u8fc7\u62df\u5408 \uff1b \u5982\u679cK\u7684\u503c\u53d6\u7684\u8fc7\u5927\u65f6\uff0c\u5c31\u76f8\u5f53\u4e8e\u7528\u8f83\u5927\u90bb\u57df\u4e2d\u7684\u8bad\u7ec3\u5b9e\u4f8b\u8fdb\u884c\u9884\u6d4b\uff0c\u5b66\u4e60\u7684\u8fd1\u4f3c\u8bef\u5dee\u4f1a\u589e\u5927\u3002\u8fd9\u65f6\u4e0e\u8f93\u5165\u76ee\u6807\u70b9\u8f83\u8fdc\u5b9e\u4f8b\u4e5f\u4f1a\u5bf9\u9884\u6d4b\u8d77\u4f5c\u7528\uff0c\u4f7f\u9884\u6d4b\u53d1\u751f\u9519\u8bef\u3002K\u503c\u7684\u589e\u5927\u5c31\u610f\u5473\u7740\u6574\u4f53\u7684\u6a21\u578b\u53d8\u5f97\u7b80\u5355\uff0c\u4e5f\u5c31\u662f\u5bb9\u6613\u53d1\u751f \u6b20\u62df\u5408 \uff1b \u5982\u679cK=N\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u5c31\u662f\u53d6\u5168\u90e8\u7684\u5b9e\u4f8b\uff0c\u5373\u4e3a\u53d6\u5b9e\u4f8b\u4e2d\u67d0\u5206\u7c7b\u4e0b\u6700\u591a\u7684\u70b9\uff0c\u5c31\u5bf9\u9884\u6d4b\u6ca1\u6709\u4ec0\u4e48\u5b9e\u9645\u7684\u610f\u4e49\u4e86\uff1b \u4e3a\u6b64\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u53d6K\u7684\u503c: \u4ecek=1\u5f00\u59cb\uff0c\u4f7f\u7528\u68c0\u9a8c\u96c6\u4f30\u8ba1\u5206\u7c7b\u5668\u7684\u8bef\u5dee\u7387\u3002\u91cd\u590d\u8be5\u8fc7\u7a0b\uff0c\u6bcf\u6b21K\u589e\u503c1\uff0c\u5141\u8bb8\u589e\u52a0\u4e00\u4e2a\u8fd1\u90bb\u3002\u9009\u53d6\u4ea7\u751f\u6700\u5c0f\u8bef\u5dee\u7387\u7684K\uff1b \u4e00\u822ck\u7684\u53d6\u503c\u4e0d\u8d85\u8fc720\uff0c\u4e0a\u9650\u662fn\u7684\u5f00\u65b9\uff0c\u968f\u7740\u6570\u636e\u96c6\u7684\u589e\u5927\uff0cK\u7684\u503c\u4e5f\u8981\u589e\u5927\uff1b K\u7684\u53d6\u503c\u5c3d\u91cf\u8981 \u53d6\u5947\u6570 \uff0c\u4ee5\u4fdd\u8bc1\u5728\u8ba1\u7b97\u7ed3\u679c\u6700\u540e\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8f83\u591a\u7684\u7c7b\u522b\uff0c\u5982\u679c\u53d6\u5076\u6570\u53ef\u80fd\u4f1a\u4ea7\u751f\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u4e0d\u5229\u4e8e\u9884\u6d4b\u3002","title":"\u5173\u4e8eK\u503c\u7684\u9009\u62e9"},{"location":"ai/knn/#_5","text":"\u6700\u5e38\u7528\u7684\u51b3\u7b56\u89c4\u5219\u662f\uff1a \u591a\u6570\u8868\u51b3\u6cd5(\u66f4\u5e38\u7528)\uff1a\u591a\u6570\u8868\u51b3\u6cd5\u7c7b\u4f3c\u4e8e\u6295\u7968\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u5728 K \u4e2a\u90bb\u5c45\u4e2d\u9009\u62e9\u7c7b\u522b\u6700\u591a\u7684\u79cd\u7c7b\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\u7684\u7c7b\u522b\uff1b \u52a0\u6743\u8868\u51b3\u6cd5\uff1a\u6839\u636e\u8ddd\u79bb\u7684\u8fdc\u8fd1\uff0c\u5bf9\u8fd1\u90bb\u7684\u6295\u7968\u8fdb\u884c\u52a0\u6743\uff0c\u8ddd\u79bb\u8d8a\u8fd1\u5219\u6743\u91cd\u8d8a\u5927\uff0c\u901a\u8fc7\u6743\u91cd\u8ba1\u7b97\u7ed3\u679c\u6700\u5927\u503c\u7684\u7c7b\u4e3a\u6d4b\u8bd5\u6837\u672c\u7684\u7c7b\u522b\u3002","title":"\u5173\u4e8e\u51b3\u7b56\u4f9d\u636e/\u89c4\u5219"},{"location":"ai/knn/#_6","text":"","title":"\u4f18\u7f3a\u70b9"},{"location":"ai/knn/#_7","text":"1\uff09\u7b80\u5355\u597d\u7528\uff0c\u5bb9\u6613\u7406\u89e3\uff0c\u7cbe\u5ea6\u9ad8\uff0c\u7406\u8bba\u6210\u719f\uff0c\u65e2\u53ef\u4ee5\u7528\u6765\u505a\u5206\u7c7b\u4e5f\u53ef\u4ee5\u7528\u6765\u505a\u56de\u5f52\uff1b 2\uff09\u53ef\u7528\u4e8e\u6570\u503c\u578b\u6570\u636e\u548c\u79bb\u6563\u578b\u6570\u636e\uff1b 3\uff09\u8bad\u7ec3\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff1b\u65e0\u6570\u636e\u8f93\u5165\u5047\u5b9a\uff1b 4\uff09\u5bf9\u5f02\u5e38\u503c\u4e0d\u654f\u611f\u3002","title":"\u4f18\u70b9:"},{"location":"ai/knn/#_8","text":"1\uff09\u8ba1\u7b97\u590d\u6742\u6027\u9ad8\uff1b\u7a7a\u95f4\u590d\u6742\u6027\u9ad8\uff1b 2\uff09\u6837\u672c\u4e0d\u5e73\u8861\u95ee\u9898\uff08\u5373\u6709\u4e9b\u7c7b\u522b\u7684\u6837\u672c\u6570\u91cf\u5f88\u591a\uff0c\u800c\u5176\u5b83\u6837\u672c\u7684\u6570\u91cf\u5f88\u5c11\uff09\uff1b 3\uff09\u4e00\u822c\u6570\u503c\u5f88\u5927\u7684\u65f6\u5019\u4e0d\u7528\u8fd9\u4e2a\uff0c\u8ba1\u7b97\u91cf\u592a\u5927\u3002\u4f46\u662f\u5355\u4e2a\u6837\u672c\u53c8\u4e0d\u80fd\u592a\u5c11\uff0c\u5426\u5219\u5bb9\u6613\u53d1\u751f\u8bef\u5206\uff1b 4\uff09\u6700\u5927\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u7ed9\u51fa\u6570\u636e\u7684\u5185\u5728\u542b\u4e49\u3002","title":"\u7f3a\u70b9\uff1a"},{"location":"ai/knn/#_9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #\u5f15\u5e93 import numpy as np import matplotlib.pyplot as plt from math import sqrt % matplotlib inline #\u539f\u59cb\u6570\u636e data = [[ 1 , 0.9 ],[ 1 , 1 ],[ 0.1 , 0.2 ],[ 0 , 0.1 ]] labels = [ \"A\" , \"A\" , \"B\" , \"B\" ] test_data = [[ 0.1 , 0.3 ]] #\u7ed8\u5236\u539f\u59cb\u6570\u636e\u6563\u70b9\u56fe print ( \"===============================\u6570\u636e\u51c6\u5907================================\" ) print ( \"\u539f\u59cb\u6570\u636e\u56fe\u50cf\u7ed8\u5236...\" ) for i in range ( len ( data )): plt . scatter ( data [ i ][ 0 ], data [ i ][ 1 ], color = \"b\" ) plt . scatter ( test_data [ 0 ][ 0 ], test_data [ 0 ][ 1 ], color = 'r' ) plt . show () #\u6d4b\u8bd5\u6570\u636ex=(0.1,0.3) #\u91c7\u7528\u6b27\u5f0f\u8ddd\u79bb\u8fdb\u884c\u8ba1\u7b97 print ( \"===============================\u8ddd\u79bb\u8ba1\u7b97================================\" ) x = [[ 0.1 , 0.3 ]] distance = [] labels_wz = [] for i in range ( len ( data )): d = 0 d = sqrt (( x [ 0 ][ 0 ] - data [ i ][ 0 ]) ** 2 + ( x [ 0 ][ 1 ] - data [ i ][ 1 ]) ** 2 ) distance . append ( d ) labels_wz . append ( i ) print ( \"\u8ba1\u7b97\u7684\u8ddd\u79bb\u4e3a: \\n \" , distance ) print ( \"\u73b0\u5728\u5bf9\u5e94\u7684\u6807\u7b7e\u4f4d\u7f6e\u4e3a: \\n \" , labels_wz ) #\u6309\u7167\u5347\u5e8f\u6392\u5e8f,\u5e76\u53d6\u8ddd\u79bb\u8f83\u5c0f\u7684\u524d3\u4e2a print ( \"===============================\u8ddd\u79bb\u6392\u5e8f================================\" ) for i in range ( len ( data ) - 1 ): for j in range ( i + 1 , len ( data )): if distance [ i ] > distance [ j ]: distance [ i ], distance [ j ] = distance [ j ], distance [ i ] labels_wz [ i ], labels_wz [ j ] = labels_wz [ j ], labels_wz [ i ] print ( \"\u6392\u5e8f\u540e\u7684\u8ddd\u79bb\u4e3a: \\n \" , distance ) print ( \"\u5bf9\u5e94\u7684\u6807\u7b7e\u7684\u4f4d\u7f6e\u4e3a: \\n \" , labels_wz ) print ( \"\u53d6\u8ddd\u79bb\u6700\u8fd1\u76843\u4e2a\u503c:\" , distance [ 0 : 3 ]) #\u8fdb\u884c\u6295\u7968\u8868\u51b3 print ( \"===============================\u8868\u51b3\u6295\u7968================================\" ) A = 0 B = 0 for i in range ( len ( labels_wz [ 0 : 3 ])): if labels [ labels_wz [ i ]] == \"A\" : A += 1 else : B += 1 print ( \"\u6295\u7968\u4e3aA\u7684\u6570\u91cf\u4e3a:\" , A ) print ( \"\u6295\u7968\u4e3aB\u7684\u6570\u91cf\u4e3a:\" , B ) print ( \" \\n \u5bf9\u7167\u521d\u59cb\u56fe\u4e2d\u7ea2\u8272\u70b9(\u6d4b\u8bd5\u70b9)\u4e0e\u524d\u4e24\u4e2a\u6807\u7b7e\u4e3aA\u7684\u79bb\u7684\u6700\u8fd1,\u6240\u4ee5\u6211\u4eec\u7684\u8ba1\u7b97\u4e0e\u56fe\u4e2d\u6240\u5448\u73b0\u7684\u7ed3\u679c\u4e00\u81f4!\" ) KNN\u7b97\u6cd5\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u4ee3\u7801\u7ec3\u4e60"},{"location":"ai/lstm/","text":"\u957f\u77ed\u65f6\u8bb0\u5fc6\u7f51\u7edc \u00b6","title":"5. \u957f\u77ed\u65f6\u8bb0\u5fc6\u7f51\u7edc"},{"location":"ai/lstm/#_1","text":"","title":"\u957f\u77ed\u65f6\u8bb0\u5fc6\u7f51\u7edc"},{"location":"ai/mf/","text":"\u77e9\u9635\u5206\u89e3\u6982\u8ff0 \u00b6 \u63a8\u8350\u7cfb\u7edf \u00b6 \u4ecb\u7ecd \u00b6 \u968f\u7740\u4e92\u8054\u7f51\u7684\u53d1\u5c55\uff0c\u4eba\u4eec\u6b63\u5904\u4e8e\u4e00\u4e2a\u4fe1\u606f\u7206\u70b8\u7684\u65f6\u4ee3\u3002\u76f8\u6bd4\u4e8e\u8fc7\u53bb\u7684\u4fe1\u606f\u532e\u4e4f\uff0c\u9762\u5bf9\u73b0\u9636\u6bb5\u6d77\u91cf\u7684\u4fe1\u606f\u6570\u636e\uff0c\u5bf9\u4fe1\u606f\u7684\u7b5b\u9009\u548c\u8fc7\u6ee4\u6210\u4e3a\u4e86\u8861\u91cf\u4e00\u4e2a\u7cfb\u7edf\u597d\u574f\u7684\u91cd\u8981\u6307\u6807\u3002\u4e00\u4e2a\u5177\u6709\u826f\u597d\u7528\u6237\u4f53\u9a8c\u7684\u7cfb\u7edf\uff0c\u4f1a\u5c06\u6d77\u91cf\u4fe1\u606f\u8fdb\u884c\u7b5b\u9009\u3001\u8fc7\u6ee4\uff0c\u5c06\u7528\u6237\u6700\u5173\u6ce8\u6700\u611f\u5174\u8da3\u7684\u4fe1\u606f\u5c55\u73b0\u5728\u7528\u6237\u9762\u524d\u3002\u8fd9\u5927\u5927\u589e\u52a0\u4e86\u7cfb\u7edf\u5de5\u4f5c\u7684\u6548\u7387\uff0c\u4e5f\u8282\u7701\u4e86\u7528\u6237\u7b5b\u9009\u4fe1\u606f\u7684\u65f6\u95f4\u3002 \u641c\u7d22\u5f15\u64ce\u7684\u51fa\u73b0\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u4fe1\u606f\u7b5b\u9009\u95ee\u9898\uff0c\u4f46\u8fd8\u8fdc\u8fdc\u4e0d\u591f\u3002\u641c\u7d22\u5f15\u64ce\u9700\u8981\u7528\u6237\u4e3b\u52a8\u63d0\u4f9b\u5173\u952e\u8bcd\u6765\u5bf9\u6d77\u91cf\u4fe1\u606f\u8fdb\u884c\u7b5b\u9009\u3002\u5f53\u7528\u6237\u65e0\u6cd5\u51c6\u786e\u63cf\u8ff0\u81ea\u5df1\u7684\u9700\u6c42\u65f6\uff0c\u641c\u7d22\u5f15\u64ce\u7684\u7b5b\u9009\u6548\u679c\u5c06\u5927\u6253\u6298\u6263\uff0c\u800c\u7528\u6237\u5c06\u81ea\u5df1\u7684\u9700\u6c42\u548c\u610f\u56fe\u8f6c\u5316\u6210\u5173\u952e\u8bcd\u7684\u8fc7\u7a0b\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5e76\u4e0d\u8f7b\u677e\u7684\u8fc7\u7a0b\u3002 \u5728\u6b64\u80cc\u666f\u4e0b\uff0c\u63a8\u8350\u7cfb\u7edf\u51fa\u73b0\u4e86\uff0c\u63a8\u8350\u7cfb\u7edf\u7684\u4efb\u52a1\u5c31\u662f\u89e3\u51b3\u4e0a\u8ff0\u7684\u95ee\u9898\uff0c\u8054\u7cfb\u7528\u6237\u548c\u4fe1\u606f\uff0c\u4e00\u65b9\u9762\u5e2e\u52a9\u7528\u6237\u53d1\u73b0\u5bf9\u81ea\u5df1\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u53e6\u4e00\u65b9\u9762\u8ba9\u4fe1\u606f\u80fd\u591f\u5c55\u73b0\u5728\u5bf9\u4ed6\u611f\u5174\u8da3\u7684\u4eba\u7fa4\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u4fe1\u606f\u63d0\u4f9b\u5546\u4e0e\u7528\u6237\u7684\u53cc\u8d62\u3002 \u5206\u7c7b \u00b6 \u57fa\u4e8e\u4eba\u53e3\u7edf\u8ba1\u5b66\u7684\u63a8\u8350 \u00b6 \u8fd9\u662f\u6700\u4e3a\u7b80\u5355\u7684\u4e00\u79cd\u63a8\u8350\u7b97\u6cd5\uff0c\u7cfb\u7edf\u9996\u5148\u4f1a\u6839\u636e\u7528\u6237\u7684\u5c5e\u6027\u5efa\u6a21\uff0c\u6bd4\u5982\u7528\u6237\u7684\u5e74\u9f84\uff0c\u6027\u522b\uff0c\u5174\u8da3\u7b49\u4fe1\u606f\u3002\u6839\u636e\u8fd9\u4e9b\u7279\u5f81\u8ba1\u7b97\u7528\u6237\u95f4\u7684\u76f8\u4f3c\u5ea6\u3002\u6bd4\u5982\u7cfb\u7edf\u901a\u8fc7\u8ba1\u7b97\u53d1\u73b0\u7528\u6237A\u548cC\u6bd4\u8f83\u76f8\u4f3c\u3002\u5c31\u4f1a\u628aA\u559c\u6b22\u7684\u7269\u54c1\u63a8\u8350\u7ed9C\u3002 \u57fa\u4e8e\u5185\u5bb9\u7684\u63a8\u8350 \u00b6 \u4e0e\u4e0a\u9762\u7684\u65b9\u6cd5\u76f8\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u7684\u4e2d\u5fc3\u8f6c\u5230\u4e86\u7269\u54c1\u672c\u8eab\u3002\u4f7f\u7528\u7269\u54c1\u672c\u8eab\u7684\u76f8\u4f3c\u5ea6\u800c\u4e0d\u662f\u7528\u6237\u7684\u76f8\u4f3c\u5ea6\u3002 \u534f\u540c\u8fc7\u6ee4 \u00b6 \u534f\u540c\u8fc7\u6ee4\u53c8\u5206\u4e3a\u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4\u548c\u57fa\u4e8e\u7269\u54c1\u7684\u534f\u540c\u8fc7\u6ee4,\u8fd9\u4e9b\u5728\u540e\u7eed\u7684\u6587\u7ae0,\u6211\u4e5f\u4f1a\u4ecb\u7ecd\u3002 \u6df7\u5408\u63a8\u8350\u7b97\u6cd5 \u00b6 \u4ee5\u4e0a\u4ecb\u7ecd\u7684\u65b9\u6cd5\u662f\u63a8\u8350\u9886\u57df\u6700\u5e38\u89c1\u7684\u51e0\u79cd\u65b9\u6cd5\u3002\u4f46\u662f\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u4e0d\u662f\u5b8c\u7f8e\u7684\u3002\u56e0\u6b64\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5411Amazon\u8fd9\u6837\u7684\u7cfb\u7edf\u90fd\u662f\u6df7\u5408\u4f7f\u7528\u5404\u79cd\u63a8\u8350\u7b97\u6cd5\uff0c\u5404\u53d6\u6240\u957f\u3002\u56e0\u6b64\u6211\u4eec\u5728\u4f7f\u7528\u65f6\uff0c\u4e5f\u53ef\u4ee5\u591a\u8003\u8651\u4e00\u4e0b\u4ec0\u4e48\u60c5\u51b5\u4e0b\u66f4\u9002\u5408\u4f7f\u7528\u54ea\u79cd\u7b97\u6cd5\uff0c\u6765\u63d0\u9ad8\u6211\u4eec\u7cfb\u7edf\u7684\u6548\u7387\u3002 \u5728\u4ecb\u7ecd\u5b8c\u4e0a\u9762\u7684\u5206\u7c7b\u4e4b\u540e\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u6211\u4eec\u4eca\u5929\u6240\u8981\u5b66\u4e60\u5230\u73b0\u5728\u5e76\u672a\u63d0\u5230,\u4f46\u5b9e\u9645\u5374\u662f\u6211\u4eec\u65e9\u5c31\u63d0\u53ca,\u53ea\u4e0d\u8fc7\u6ca1\u6709\u7ec6\u5316\u51fa\u6765,\u4e0b\u9762\u6211\u5c06\u5f00\u59cb\u8bf4\u660e\u4ecb\u7ecd: \u77e9\u9635\u5206\u89e3 \u00b6 \u4ecb\u7ecd \u00b6 \u901a\u8fc7\u4e0a\u9762\u4ecb\u7ecd,\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86:\u63a8\u8350\u7cfb\u7edf\u4e2d\u6700\u4e3a\u4e3b\u6d41\u4e0e\u7ecf\u5178\u7684\u6280\u672f\u4e4b\u4e00\u662f \u534f\u540c\u8fc7\u6ee4\u6280\u672f\uff08Collaborative Filtering\uff09 \uff0c\u5b83\u662f\u57fa\u4e8e\u8fd9\u6837\u7684\u5047\u8bbe\uff1a\u7528\u6237\u5982\u679c\u5728\u8fc7\u53bb\u5bf9\u67d0\u4e9b\u9879\u76ee\u4ea7\u751f\u8fc7\u5174\u8da3\uff0c\u90a3\u4e48\u5c06\u6765\u4ed6\u5f88\u53ef\u80fd\u4f9d\u7136\u5bf9\u5176\u4fdd\u6301\u70ed\u5ff1\u3002\u5176\u4e2d\u534f\u540c\u8fc7\u6ee4\u6280\u672f\u53c8\u53ef\u6839\u636e\u662f\u5426\u91c7\u7528\u4e86\u673a\u5668\u5b66\u4e60\u601d\u60f3\u5efa\u6a21\u7684\u4e0d\u540c\u5212\u5206\u4e3a \u57fa\u4e8e\u5185\u5b58\u7684\u534f\u540c\u8fc7\u6ee4\uff08Memory-based CF\uff09 \u4e0e \u57fa\u4e8e\u6a21\u578b\u7684\u534f\u540c\u8fc7\u6ee4\u6280\u672f\uff08Model-based CF\uff09 \u3002\u5176\u4e2d\u57fa\u4e8e\u5185\u5b58\u7684\u534f\u540c\u8fc7\u6ee4\u53c8\u53ef\u4ee5\u5206\u4e3a \u57fa\u4e8e\u9879\u76ee\u7684\u534f\u540c\u8fc7\u6ee4(ItemCF) \u548c \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4(UserCF) ,\u800c\u5728\u57fa\u4e8e\u6a21\u578b\u7684\u534f\u540c\u8fc7\u6ee4\u6280\u672f\u4e2d\u5c24\u4e3a \u77e9\u9635\u5206\u89e3\uff08Matrix Factorization,MF\uff09 \u6280\u672f\u6700\u4e3a\u666e\u904d\u548c\u6d41\u884c\uff0c\u56e0\u4e3a\u5b83\u7684\u53ef\u6269\u5c55\u6027\u6781\u597d\u5e76\u4e14\u6613\u4e8e\u5b9e\u73b0\uff0c\u56e0\u6b64\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u68b3\u7406\u4e0b\u63a8\u8350\u7cfb\u7edf\u4e2d\u51fa\u73b0\u8fc7\u7684\u7ecf\u5178\u7684\u77e9\u9635\u5206\u89e3\u65b9\u6cd5\u3002 \u63a8\u5bfc \u00b6 \u6211\u4eec\u77e5\u9053\uff0c\u8981\u505a\u63a8\u8350\u7cfb\u7edf\uff0c\u6700\u57fa\u672c\u7684\u4e00\u4e2a\u6570\u636e\u5c31\u662f\uff0c\u7528\u6237-\u7269\u54c1\u7684\u8bc4\u5206\u77e9\u9635: \u77e9\u9635\u4e2d\uff0c\u63cf\u8ff0\u4e865\u4e2a\u7528\u6237(U1,U2,U3,U4 ,U5)\u5bf94\u4e2a\u7269\u54c1(D1,D2,D3,D4)\u7684\u8bc4\u5206(1-5\u5206)\uff0c- \u8868\u793a\u6ca1\u6709\u8bc4\u5206\uff0c\u73b0\u5728\u76ee\u7684\u662f\u628a\u6ca1\u6709\u8bc4\u5206\u7684 \u7ed9\u9884\u6d4b\u51fa\u6765\uff0c\u7136\u540e\u6309\u9884\u6d4b\u7684\u5206\u6570\u9ad8\u4f4e\uff0c\u7ed9\u7528\u6237\u8fdb\u884c\u63a8\u8350\u3002 \u63a8\u5bfc\u5f00\u59cb: \u5982\u4f55\u9884\u6d4b\u7f3a\u5931\u7684\u8bc4\u5206\u5462\uff1f\u5bf9\u4e8e\u7f3a\u5931\u7684\u8bc4\u5206\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u56de\u5f52\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8fde\u7eed\u503c\u7684\u9884\u6d4b\uff0c\u5bf9\u4e8e\u77e9\u9635\u5206\u89e3\u6709\u5982\u4e0b\u5f0f\u5b50\uff0cR\u662f\u7c7b\u4f3c\u4e0a\u56fe\u7684\u8bc4\u5206\u77e9\u9635\uff0c\u5047\u8bbeN*M\u7ef4(N\u8868\u793a\u884c\u6570\uff0cM\u8868\u793a\u5217\u6570)\uff0c\u53ef\u4ee5\u5206\u89e3\u4e3aP\u8ddfQ\u77e9\u9635\uff0c\u5176\u4e2dP\u77e9\u9635\u7ef4\u5ea6N*K\uff0cP\u77e9\u9635\u7ef4\u5ea6K*M\u3002 \u5f0f\u5b501 \u5bf9\u4e8eP,Q\u77e9\u9635\u7684\u89e3\u91ca\uff0c\u76f4\u89c2\u4e0a\uff0cP\u77e9\u9635\u662fN\u4e2a\u7528\u6237\u5bf9K\u4e2a\u4e3b\u9898\u7684\u5173\u7cfb\uff0cQ\u77e9\u9635\u662fK\u4e2a\u4e3b\u9898\u8ddfM\u4e2a\u7269\u54c1\u7684\u5173\u7cfb\uff0c\u81f3\u4e8eK\u4e2a\u4e3b\u9898\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u5728\u7b97\u6cd5\u91cc\u9762K\u662f\u4e00\u4e2a\u53c2\u6570\uff0c\u9700\u8981\u8c03\u8282\u7684\uff0c\u901a\u5e3810~100\u4e4b\u95f4\u3002 \u5f0f\u5b502 \u5bf9\u4e8e\u5f0f\u5b502\u7684\u5de6\u8fb9\u9879\uff0c\u8868\u793a\u7684\u662fR^ \u7b2ci\u884c\uff0c\u7b2cj\u5217\u7684\u5143\u7d20\u503c\uff0c\u5bf9\u4e8e\u5982\u4f55\u8861\u91cf\uff0c\u6211\u4eec\u5206\u89e3\u7684\u597d\u574f\u5462\uff0c\u5f0f\u5b503\uff0c\u7ed9\u51fa\u4e86\u8861\u91cf\u6807\u51c6\uff0c\u4e5f\u5c31\u662f\u635f\u5931\u51fd\u6570\uff0c\u5e73\u65b9\u9879\u635f\u5931\uff0c\u6700\u540e\u7684\u76ee\u6807\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20(\u975e\u7f3a\u5931\u503c)\u7684e(i,j)\u7684\u603b\u548c \u6700\u5c0f \u5f0f\u5b503 OK\uff0c\u76ee\u524d\u73b0\u5728\u8bc4\u5206\u77e9\u9635\u6709\u4e86\uff0c\u635f\u5931\u51fd\u6570\u4e5f\u6709\u4e86\uff0c\u8be5\u4f18\u5316\u7b97\u6cd5\u767b\u573a\u4e86\uff0c\u4e0b\u9762\u5f0f\u5b504\u662f\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u7684\u4f18\u5316\u7b97\u6cd5\uff0cp,q\u91cc\u9762\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u66f4\u65b0\u65b9\u5f0f \u5f0f\u5b504 \u7136\u800c\uff0c\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u90fd\u559c\u6b22\u52a0\u4e00\u4e2a\u6b63\u5219\u9879\uff0c\u8fd9\u91cc\u9762\u5bf9\u5f0f\u5b503\u7a0d\u4f5c\u4fee\u6539\uff0c\u5f97\u5230\u5982\u4e0b\u5f0f\u5b505\uff0cbeita \u662f\u6b63\u5219\u53c2\u6570 \u5f0f\u5b505 \u76f8\u5e94\u7684p,q\u77e9\u9635\u5404\u4e2a\u5143\u7d20\u7684\u66f4\u65b0\u4e5f\u6362\u6210\u4e86\u5982\u4e0b\u65b9\u5f0f \u5f0f\u5b506 \u81f3\u6b64\uff0cP,Q\u77e9\u9635\u5143\u7d20\u6c42\u51fa\u6765\u4e86\u4e4b\u540e\uff0c\u8ba1\u7b97\u67d0\u4e2a\u7528\u6237i\u5bf9\u67d0\u4e2a\u7269\u54c1j\u7684\u8bc4\u5206\u8ba1\u7b97\u5c31\u662fp(i,1) q(1,j)+p(i,2) q(2,j)+....+p(i,k)*q(k,j)\u3002 \u7b97\u6cd5\u6b65\u9aa4 \u00b6 1\uff09\u968f\u673a\u751f\u6210\u4e24\u4e2a\u77e9\u9635P,Q\uff1b 2\uff09\u4e3a\u4e86\u80fd\u591f\u6709\u8f83\u597d\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u4f1a\u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u5165\u6b63\u5219\u9879\u5bf9\u53c2\u6570\u8fdb\u884c\u7ea6\u675f\uff1b 3\uff09\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u83b7\u5f97\u4fee\u6b63\u7684p\u548cq\uff1b 4\uff09\u4e0d\u505c\u8fed\u4ee3\u76f4\u81f3\u7b97\u6cd5\u6700\u7ec8\u6536\u655b\uff0c\u5373\uff1a\u76f4\u5230sum\uff08e^2\uff09<=\u9608\u503c\u6216\u8005\u8fbe\u5230\u6307\u5b9a\u7684\u8bad\u7ec3\u6b21\u6570\u3002 \u6ce8\u610f: \u7b97\u6cd5\u6b65\u9aa4\u4e2d\u7684\u66f4\u65b0\u516c\u5f0f\u548c\u635f\u5931\u51fd\u6570\u90fd\u5df2\u7ecf\u8fdb\u884c\u4e86 \u6b63\u5219\u5316 \u3002 (\u2605\u8865\u5145) \u6b63\u5219\u5316: 1\uff09\u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408 \u4e00\u3001\u6b20\u62df\u5408 \u8bad\u7ec3\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u90fd\u5f88\u5927\uff0c\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a\u6b20\u62df\u5408\u3002\u51fa\u73b0\u6b20\u62df\u5408\u7684\u539f\u56e0\u662f\u6a21\u578b\u5c1a\u672a\u5b66\u4e60\u5230\u6570\u636e\u7684\u771f\u5b9e\u7ed3\u6784\u3002\u56e0\u6b64\uff0c\u6a21\u62df\u5728\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e0a\u7684\u6027\u80fd\u90fd\u5f88\u5dee\u3002 \u4e8c\u3001\u8fc7\u62df\u5408 \u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u662f\u5728\u6d4b\u8bd5\u96c6\u4e0a\u5374\u4e0d\u80fd\u4fdd\u6301\u51c6\u786e\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u5f88\u5dee\u3002\u8fd9\u79cd\u60c5\u51b5\u5f88\u53ef\u80fd\u662f\u6a21\u578b\u8fc7\u62df\u5408\u3002 \u533a\u5206\u8bad\u7ec3\u96c6,\u6d4b\u8bd5\u96c6,\u9a8c\u8bc1\u96c6: \u8bad\u7ec3\u96c6 \u4f5c\u7528\uff1a\u4f30\u8ba1\u6a21\u578b \u5b66\u4e60\u6837\u672c\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u5339\u914d\u4e00\u4e9b\u53c2\u6570\u6765\u5efa\u7acb\u4e00\u4e2a\u5206\u7c7b\u5668\u3002\u5efa\u7acb\u4e00\u79cd\u5206\u7c7b\u7684\u65b9\u5f0f\uff0c\u4e3b\u8981\u662f\u7528\u6765\u8bad\u7ec3\u6a21\u578b\u7684\u3002 \u9a8c\u8bc1\u96c6 \u4f5c\u7528\uff1a\u786e\u5b9a\u7f51\u7edc\u7ed3\u6784\u6216\u8005\u63a7\u5236\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u7684\u53c2\u6570 \u5bf9\u5b66\u4e60\u51fa\u6765\u7684\u6a21\u578b\uff0c\u8c03\u6574\u5206\u7c7b\u5668\u7684\u53c2\u6570\uff0c\u5982\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u9009\u62e9\u9690\u85cf\u5355\u5143\u6570\u3002\u9a8c\u8bc1\u96c6\u8fd8\u7528\u6765\u786e\u5b9a\u7f51\u7edc\u7ed3\u6784\u6216\u8005\u63a7\u5236\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u7684\u53c2\u6570\u3002 \u6d4b\u8bd5\u96c6 \u4f5c\u7528\uff1a\u68c0\u9a8c\u6700\u7ec8\u9009\u62e9\u6700\u4f18\u7684\u6a21\u578b\u7684\u6027\u80fd\u5982\u4f55 \u4e3b\u8981\u662f\u6d4b\u8bd5\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u7684\u5206\u8fa8\u80fd\u529b\uff08\u8bc6\u522b\u7387\u7b49\uff09 \u603b\u7ed3\u4e3a: \u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u6548\u679c \u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u6548\u679c \u5177\u4f53\u60c5\u51b5 \u4e0d\u597d \u4e0d\u597d \u6b20\u62df\u5408 \u597d \u4e0d\u597d \u8fc7\u62df\u5408 \u597d \u597d \u6b63\u5e38 2\uff09 \u89e3\u51b3\u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408\u95ee\u9898 \u4e00\u3001\u89e3\u51b3\u6b20\u62df\u5408 (1)\u589e\u52a0\u65b0\u7279\u5f81\uff0c\u53ef\u4ee5\u8003\u8651\u52a0\u5165\u8fdb\u7279\u5f81\u7ec4\u5408\u3001\u9ad8\u6b21\u7279\u5f81\uff0c\u6765\u589e\u5927\u5047\u8bbe\u7a7a\u95f4; (2)\u5c1d\u8bd5\u975e\u7ebf\u6027\u6a21\u578b\uff0c\u6bd4\u5982\u6838SVM \u3001\u51b3\u7b56\u6811\u3001DNN\u7b49\u6a21\u578b; (3)\u5982\u679c\u6709\u6b63\u5219\u9879\u53ef\u4ee5\u8f83\u5c0f\u6b63\u5219\u9879\u53c2\u6570 \u03bb; (4)\u589e\u5927\u6570\u636e\u96c6(\u6700\u6839\u672c\u7684\u65b9\u6cd5); (5)Boosting ,Boosting \u5f80\u5f80\u4f1a\u6709\u8f83\u5c0f\u7684 Bias\uff0c\u6bd4\u5982 Gradient Boosting \u7b49. \u4e8c\u3001\u89e3\u51b3\u8fc7\u62df\u5408 (1)\u4ea4\u53c9\u68c0\u9a8c\uff0c\u901a\u8fc7\u4ea4\u53c9\u68c0\u9a8c\u5f97\u5230\u8f83\u4f18\u7684\u6a21\u578b\u53c2\u6570; (2)\u7279\u5f81\u9009\u62e9\uff0c\u51cf\u5c11\u7279\u5f81\u6570\u6216\u4f7f\u7528\u8f83\u5c11\u7684\u7279\u5f81\u7ec4\u5408\uff0c\u5bf9\u4e8e\u6309\u533a\u95f4\u79bb\u6563\u5316\u7684\u7279\u5f81\uff0c\u589e\u5927\u5212\u5206\u7684\u533a\u95f4; (3)\u6b63\u5219\u5316\uff0c\u5e38\u7528\u7684\u6709 L1\u3001L2 \u6b63\u5219\u3002\u800c\u4e14 L1\u6b63\u5219\u8fd8\u53ef\u4ee5\u81ea\u52a8\u8fdb\u884c\u7279\u5f81\u9009\u62e9; (4)\u5982\u679c\u6709\u6b63\u5219\u9879\u5219\u53ef\u4ee5\u8003\u8651\u589e\u5927\u6b63\u5219\u9879\u53c2\u6570 \u03bb; (5)\u589e\u52a0\u8bad\u7ec3\u6570\u636e\u53ef\u4ee5\u6709\u9650\u7684\u907f\u514d\u8fc7\u62df\u5408; (6)Bagging ,\u5c06\u591a\u4e2a\u5f31\u5b66\u4e60\u5668Bagging \u4e00\u4e0b\u6548\u679c\u4f1a\u597d\u5f88\u591a\uff0c\u6bd4\u5982\u968f\u673a\u68ee\u6797\u7b49; (7)\u795e\u7ecf\u7f51\u7edc\u4e2d\u89e3\u51b3\u8fc7\u62df\u5408\u53ef\u4ee5\u91c7\u7528dropout\u65b9\u6cd5. \u4ee3\u7801\u7ec3\u4e60 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 import numpy as np from math import pow import matplotlib.pyplot as plt % matplotlib inline def mf ( R , P , Q , K ): alpha = 0.0002 beta = 0.02 times = 5000 eplison = 0.001 result = [] #\u5c06\u77e9\u9635Q\u8fdb\u884c\u8f6c\u7f6e Q = Q . T #\u5c06\u751f\u6210\u7684\u77e9\u9635\u76f8\u4e58 for time in range ( times ): #\u6c42R\u5c16\u7684\u503c for i in range ( len ( R )): for j in range ( len ( R [ i ])): eij = R [ i ][ j ] - np . dot ( P [ i ,:], Q [:, j ]) for k in range ( K ): P [ i ][ k ] = P [ i ][ k ] + 2 * alpha * eij * Q [ k ][ j ] Q [ k ][ j ] = Q [ k ][ j ] + 2 * alpha * eij * P [ i ][ k ] eR = np . dot ( P , Q ) #\u6c42eij\u7684\u5e73\u65b9 eij_2 = 0 for i in range ( len ( R )): for j in range ( len ( R [ i ])): for k in range ( K ): eij_2 = eij_2 + pow (( R [ i ][ j ] - np . dot ( P [ i ,:], Q [:, j ])), 2 ) + 0.5 * beta * ( pow ( P [ i ][ k ], 2 )) + pow ( Q [ k ][ j ], 2 ) result . append ( eij_2 ) if eij_2 < eplison : break return P , Q . T , result def main (): R = [ [ 5 , 3 , 0 , 1 ], [ 4 , 0 , 0 , 1 ], [ 1 , 1 , 0 , 5 ], [ 1 , 0 , 0 , 4 ], [ 0 , 1 , 5 , 4 ] ] #\u5c06R\u5217\u8868\u8f6c\u5316\u4e3a\u77e9\u9635 R = np . array ( R ) #\u83b7\u53d6\u8be5\u77e9\u9635\u7684\u5927\u5c0f N = len ( R ) M = len ( R [ 0 ]) print ( N ) print ( M ) ''' \u5982\u4f55\u9884\u6d4b\u7f3a\u5931\u7684\u8bc4\u5206\u5462\uff1f\u5bf9\u4e8e\u7f3a\u5931\u7684\u8bc4\u5206\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u56de\u5f52\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8fde\u7eed\u503c\u7684\u9884\u6d4b\uff0c \u5bf9\u4e8e\u77e9\u9635\u5206\u89e3\u6709\u5982\u4e0b\u5f0f\u5b50\uff0cR\u662f\u7c7b\u4f3c\u56fe1\u7684\u8bc4\u5206\u77e9\u9635\uff0c\u5047\u8bbeN*M\u7ef4(N\u8868\u793a\u884c\u6570\uff0cM\u8868\u793a\u5217\u6570)\uff0c\u53ef\u4ee5\u5206\u89e3\u4e3aP\u8ddfQ\u77e9\u9635\uff0c \u5176\u4e2dP\u77e9\u9635\u7ef4\u5ea6N*K\uff0cP\u77e9\u9635\u7ef4\u5ea6K*M\u3002 \u5bf9\u4e8eP,Q\u77e9\u9635\u7684\u89e3\u91ca\uff0c\u76f4\u89c2\u4e0a\uff0cP\u77e9\u9635\u662fN\u4e2a\u7528\u6237\u5bf9K\u4e2a\u4e3b\u9898\u7684\u5173\u7cfb\uff0cQ\u77e9\u9635\u662fK\u4e2a\u4e3b\u9898\u8ddfM\u4e2a\u7269\u54c1\u7684\u5173\u7cfb\uff0c\u81f3\u4e8eK\u4e2a \u4e3b\u9898\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u5728\u7b97\u6cd5\u91cc\u9762K\u662f\u4e00\u4e2a\u53c2\u6570\uff0c\u9700\u8981\u8c03\u8282\u7684\uff0c\u901a\u5e3810~100\u4e4b\u95f4\u3002 ''' K = 2 P = np . random . rand ( N , K ) Q = np . random . rand ( M , K ) #\u8c03\u7528\u77e9\u9635\u5206\u89e3\u7684\u51fd\u6570 mf_P , mf_Q , result = mf ( R , P , Q , K ) print ( \"\u539f\u59cb\u77e9\u9635:\" , R ) mf_R = np . dot ( mf_P , mf_Q . T ) print ( \"\u7ecf\u8fc7MF\u540e:\" , mf_R ) #\u505a\u51fa\u56fe\u50cf for t in range ( 5000 ): plt . scatter ( t , result [ t ]) plt . show () main () \u77e9\u9635\u5206\u89e3\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"3. \u57fa\u4e8e\u77e9\u9635\u5206\u89e3\u7684\u63a8\u8350\u7cfb\u7edf"},{"location":"ai/mf/#_1","text":"","title":"\u77e9\u9635\u5206\u89e3\u6982\u8ff0"},{"location":"ai/mf/#_2","text":"","title":"\u63a8\u8350\u7cfb\u7edf"},{"location":"ai/mf/#_3","text":"\u968f\u7740\u4e92\u8054\u7f51\u7684\u53d1\u5c55\uff0c\u4eba\u4eec\u6b63\u5904\u4e8e\u4e00\u4e2a\u4fe1\u606f\u7206\u70b8\u7684\u65f6\u4ee3\u3002\u76f8\u6bd4\u4e8e\u8fc7\u53bb\u7684\u4fe1\u606f\u532e\u4e4f\uff0c\u9762\u5bf9\u73b0\u9636\u6bb5\u6d77\u91cf\u7684\u4fe1\u606f\u6570\u636e\uff0c\u5bf9\u4fe1\u606f\u7684\u7b5b\u9009\u548c\u8fc7\u6ee4\u6210\u4e3a\u4e86\u8861\u91cf\u4e00\u4e2a\u7cfb\u7edf\u597d\u574f\u7684\u91cd\u8981\u6307\u6807\u3002\u4e00\u4e2a\u5177\u6709\u826f\u597d\u7528\u6237\u4f53\u9a8c\u7684\u7cfb\u7edf\uff0c\u4f1a\u5c06\u6d77\u91cf\u4fe1\u606f\u8fdb\u884c\u7b5b\u9009\u3001\u8fc7\u6ee4\uff0c\u5c06\u7528\u6237\u6700\u5173\u6ce8\u6700\u611f\u5174\u8da3\u7684\u4fe1\u606f\u5c55\u73b0\u5728\u7528\u6237\u9762\u524d\u3002\u8fd9\u5927\u5927\u589e\u52a0\u4e86\u7cfb\u7edf\u5de5\u4f5c\u7684\u6548\u7387\uff0c\u4e5f\u8282\u7701\u4e86\u7528\u6237\u7b5b\u9009\u4fe1\u606f\u7684\u65f6\u95f4\u3002 \u641c\u7d22\u5f15\u64ce\u7684\u51fa\u73b0\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u4fe1\u606f\u7b5b\u9009\u95ee\u9898\uff0c\u4f46\u8fd8\u8fdc\u8fdc\u4e0d\u591f\u3002\u641c\u7d22\u5f15\u64ce\u9700\u8981\u7528\u6237\u4e3b\u52a8\u63d0\u4f9b\u5173\u952e\u8bcd\u6765\u5bf9\u6d77\u91cf\u4fe1\u606f\u8fdb\u884c\u7b5b\u9009\u3002\u5f53\u7528\u6237\u65e0\u6cd5\u51c6\u786e\u63cf\u8ff0\u81ea\u5df1\u7684\u9700\u6c42\u65f6\uff0c\u641c\u7d22\u5f15\u64ce\u7684\u7b5b\u9009\u6548\u679c\u5c06\u5927\u6253\u6298\u6263\uff0c\u800c\u7528\u6237\u5c06\u81ea\u5df1\u7684\u9700\u6c42\u548c\u610f\u56fe\u8f6c\u5316\u6210\u5173\u952e\u8bcd\u7684\u8fc7\u7a0b\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5e76\u4e0d\u8f7b\u677e\u7684\u8fc7\u7a0b\u3002 \u5728\u6b64\u80cc\u666f\u4e0b\uff0c\u63a8\u8350\u7cfb\u7edf\u51fa\u73b0\u4e86\uff0c\u63a8\u8350\u7cfb\u7edf\u7684\u4efb\u52a1\u5c31\u662f\u89e3\u51b3\u4e0a\u8ff0\u7684\u95ee\u9898\uff0c\u8054\u7cfb\u7528\u6237\u548c\u4fe1\u606f\uff0c\u4e00\u65b9\u9762\u5e2e\u52a9\u7528\u6237\u53d1\u73b0\u5bf9\u81ea\u5df1\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u53e6\u4e00\u65b9\u9762\u8ba9\u4fe1\u606f\u80fd\u591f\u5c55\u73b0\u5728\u5bf9\u4ed6\u611f\u5174\u8da3\u7684\u4eba\u7fa4\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u4fe1\u606f\u63d0\u4f9b\u5546\u4e0e\u7528\u6237\u7684\u53cc\u8d62\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/mf/#_4","text":"","title":"\u5206\u7c7b"},{"location":"ai/mf/#_5","text":"\u8fd9\u662f\u6700\u4e3a\u7b80\u5355\u7684\u4e00\u79cd\u63a8\u8350\u7b97\u6cd5\uff0c\u7cfb\u7edf\u9996\u5148\u4f1a\u6839\u636e\u7528\u6237\u7684\u5c5e\u6027\u5efa\u6a21\uff0c\u6bd4\u5982\u7528\u6237\u7684\u5e74\u9f84\uff0c\u6027\u522b\uff0c\u5174\u8da3\u7b49\u4fe1\u606f\u3002\u6839\u636e\u8fd9\u4e9b\u7279\u5f81\u8ba1\u7b97\u7528\u6237\u95f4\u7684\u76f8\u4f3c\u5ea6\u3002\u6bd4\u5982\u7cfb\u7edf\u901a\u8fc7\u8ba1\u7b97\u53d1\u73b0\u7528\u6237A\u548cC\u6bd4\u8f83\u76f8\u4f3c\u3002\u5c31\u4f1a\u628aA\u559c\u6b22\u7684\u7269\u54c1\u63a8\u8350\u7ed9C\u3002","title":"\u57fa\u4e8e\u4eba\u53e3\u7edf\u8ba1\u5b66\u7684\u63a8\u8350"},{"location":"ai/mf/#_6","text":"\u4e0e\u4e0a\u9762\u7684\u65b9\u6cd5\u76f8\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u6b21\u7684\u4e2d\u5fc3\u8f6c\u5230\u4e86\u7269\u54c1\u672c\u8eab\u3002\u4f7f\u7528\u7269\u54c1\u672c\u8eab\u7684\u76f8\u4f3c\u5ea6\u800c\u4e0d\u662f\u7528\u6237\u7684\u76f8\u4f3c\u5ea6\u3002","title":"\u57fa\u4e8e\u5185\u5bb9\u7684\u63a8\u8350"},{"location":"ai/mf/#_7","text":"\u534f\u540c\u8fc7\u6ee4\u53c8\u5206\u4e3a\u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4\u548c\u57fa\u4e8e\u7269\u54c1\u7684\u534f\u540c\u8fc7\u6ee4,\u8fd9\u4e9b\u5728\u540e\u7eed\u7684\u6587\u7ae0,\u6211\u4e5f\u4f1a\u4ecb\u7ecd\u3002","title":"\u534f\u540c\u8fc7\u6ee4"},{"location":"ai/mf/#_8","text":"\u4ee5\u4e0a\u4ecb\u7ecd\u7684\u65b9\u6cd5\u662f\u63a8\u8350\u9886\u57df\u6700\u5e38\u89c1\u7684\u51e0\u79cd\u65b9\u6cd5\u3002\u4f46\u662f\u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u4e0d\u662f\u5b8c\u7f8e\u7684\u3002\u56e0\u6b64\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u5411Amazon\u8fd9\u6837\u7684\u7cfb\u7edf\u90fd\u662f\u6df7\u5408\u4f7f\u7528\u5404\u79cd\u63a8\u8350\u7b97\u6cd5\uff0c\u5404\u53d6\u6240\u957f\u3002\u56e0\u6b64\u6211\u4eec\u5728\u4f7f\u7528\u65f6\uff0c\u4e5f\u53ef\u4ee5\u591a\u8003\u8651\u4e00\u4e0b\u4ec0\u4e48\u60c5\u51b5\u4e0b\u66f4\u9002\u5408\u4f7f\u7528\u54ea\u79cd\u7b97\u6cd5\uff0c\u6765\u63d0\u9ad8\u6211\u4eec\u7cfb\u7edf\u7684\u6548\u7387\u3002 \u5728\u4ecb\u7ecd\u5b8c\u4e0a\u9762\u7684\u5206\u7c7b\u4e4b\u540e\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\u6211\u4eec\u4eca\u5929\u6240\u8981\u5b66\u4e60\u5230\u73b0\u5728\u5e76\u672a\u63d0\u5230,\u4f46\u5b9e\u9645\u5374\u662f\u6211\u4eec\u65e9\u5c31\u63d0\u53ca,\u53ea\u4e0d\u8fc7\u6ca1\u6709\u7ec6\u5316\u51fa\u6765,\u4e0b\u9762\u6211\u5c06\u5f00\u59cb\u8bf4\u660e\u4ecb\u7ecd:","title":"\u6df7\u5408\u63a8\u8350\u7b97\u6cd5"},{"location":"ai/mf/#_9","text":"","title":"\u77e9\u9635\u5206\u89e3"},{"location":"ai/mf/#_10","text":"\u901a\u8fc7\u4e0a\u9762\u4ecb\u7ecd,\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86:\u63a8\u8350\u7cfb\u7edf\u4e2d\u6700\u4e3a\u4e3b\u6d41\u4e0e\u7ecf\u5178\u7684\u6280\u672f\u4e4b\u4e00\u662f \u534f\u540c\u8fc7\u6ee4\u6280\u672f\uff08Collaborative Filtering\uff09 \uff0c\u5b83\u662f\u57fa\u4e8e\u8fd9\u6837\u7684\u5047\u8bbe\uff1a\u7528\u6237\u5982\u679c\u5728\u8fc7\u53bb\u5bf9\u67d0\u4e9b\u9879\u76ee\u4ea7\u751f\u8fc7\u5174\u8da3\uff0c\u90a3\u4e48\u5c06\u6765\u4ed6\u5f88\u53ef\u80fd\u4f9d\u7136\u5bf9\u5176\u4fdd\u6301\u70ed\u5ff1\u3002\u5176\u4e2d\u534f\u540c\u8fc7\u6ee4\u6280\u672f\u53c8\u53ef\u6839\u636e\u662f\u5426\u91c7\u7528\u4e86\u673a\u5668\u5b66\u4e60\u601d\u60f3\u5efa\u6a21\u7684\u4e0d\u540c\u5212\u5206\u4e3a \u57fa\u4e8e\u5185\u5b58\u7684\u534f\u540c\u8fc7\u6ee4\uff08Memory-based CF\uff09 \u4e0e \u57fa\u4e8e\u6a21\u578b\u7684\u534f\u540c\u8fc7\u6ee4\u6280\u672f\uff08Model-based CF\uff09 \u3002\u5176\u4e2d\u57fa\u4e8e\u5185\u5b58\u7684\u534f\u540c\u8fc7\u6ee4\u53c8\u53ef\u4ee5\u5206\u4e3a \u57fa\u4e8e\u9879\u76ee\u7684\u534f\u540c\u8fc7\u6ee4(ItemCF) \u548c \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4(UserCF) ,\u800c\u5728\u57fa\u4e8e\u6a21\u578b\u7684\u534f\u540c\u8fc7\u6ee4\u6280\u672f\u4e2d\u5c24\u4e3a \u77e9\u9635\u5206\u89e3\uff08Matrix Factorization,MF\uff09 \u6280\u672f\u6700\u4e3a\u666e\u904d\u548c\u6d41\u884c\uff0c\u56e0\u4e3a\u5b83\u7684\u53ef\u6269\u5c55\u6027\u6781\u597d\u5e76\u4e14\u6613\u4e8e\u5b9e\u73b0\uff0c\u56e0\u6b64\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u68b3\u7406\u4e0b\u63a8\u8350\u7cfb\u7edf\u4e2d\u51fa\u73b0\u8fc7\u7684\u7ecf\u5178\u7684\u77e9\u9635\u5206\u89e3\u65b9\u6cd5\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/mf/#_11","text":"\u6211\u4eec\u77e5\u9053\uff0c\u8981\u505a\u63a8\u8350\u7cfb\u7edf\uff0c\u6700\u57fa\u672c\u7684\u4e00\u4e2a\u6570\u636e\u5c31\u662f\uff0c\u7528\u6237-\u7269\u54c1\u7684\u8bc4\u5206\u77e9\u9635: \u77e9\u9635\u4e2d\uff0c\u63cf\u8ff0\u4e865\u4e2a\u7528\u6237(U1,U2,U3,U4 ,U5)\u5bf94\u4e2a\u7269\u54c1(D1,D2,D3,D4)\u7684\u8bc4\u5206(1-5\u5206)\uff0c- \u8868\u793a\u6ca1\u6709\u8bc4\u5206\uff0c\u73b0\u5728\u76ee\u7684\u662f\u628a\u6ca1\u6709\u8bc4\u5206\u7684 \u7ed9\u9884\u6d4b\u51fa\u6765\uff0c\u7136\u540e\u6309\u9884\u6d4b\u7684\u5206\u6570\u9ad8\u4f4e\uff0c\u7ed9\u7528\u6237\u8fdb\u884c\u63a8\u8350\u3002 \u63a8\u5bfc\u5f00\u59cb: \u5982\u4f55\u9884\u6d4b\u7f3a\u5931\u7684\u8bc4\u5206\u5462\uff1f\u5bf9\u4e8e\u7f3a\u5931\u7684\u8bc4\u5206\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u56de\u5f52\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8fde\u7eed\u503c\u7684\u9884\u6d4b\uff0c\u5bf9\u4e8e\u77e9\u9635\u5206\u89e3\u6709\u5982\u4e0b\u5f0f\u5b50\uff0cR\u662f\u7c7b\u4f3c\u4e0a\u56fe\u7684\u8bc4\u5206\u77e9\u9635\uff0c\u5047\u8bbeN*M\u7ef4(N\u8868\u793a\u884c\u6570\uff0cM\u8868\u793a\u5217\u6570)\uff0c\u53ef\u4ee5\u5206\u89e3\u4e3aP\u8ddfQ\u77e9\u9635\uff0c\u5176\u4e2dP\u77e9\u9635\u7ef4\u5ea6N*K\uff0cP\u77e9\u9635\u7ef4\u5ea6K*M\u3002 \u5f0f\u5b501 \u5bf9\u4e8eP,Q\u77e9\u9635\u7684\u89e3\u91ca\uff0c\u76f4\u89c2\u4e0a\uff0cP\u77e9\u9635\u662fN\u4e2a\u7528\u6237\u5bf9K\u4e2a\u4e3b\u9898\u7684\u5173\u7cfb\uff0cQ\u77e9\u9635\u662fK\u4e2a\u4e3b\u9898\u8ddfM\u4e2a\u7269\u54c1\u7684\u5173\u7cfb\uff0c\u81f3\u4e8eK\u4e2a\u4e3b\u9898\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u5728\u7b97\u6cd5\u91cc\u9762K\u662f\u4e00\u4e2a\u53c2\u6570\uff0c\u9700\u8981\u8c03\u8282\u7684\uff0c\u901a\u5e3810~100\u4e4b\u95f4\u3002 \u5f0f\u5b502 \u5bf9\u4e8e\u5f0f\u5b502\u7684\u5de6\u8fb9\u9879\uff0c\u8868\u793a\u7684\u662fR^ \u7b2ci\u884c\uff0c\u7b2cj\u5217\u7684\u5143\u7d20\u503c\uff0c\u5bf9\u4e8e\u5982\u4f55\u8861\u91cf\uff0c\u6211\u4eec\u5206\u89e3\u7684\u597d\u574f\u5462\uff0c\u5f0f\u5b503\uff0c\u7ed9\u51fa\u4e86\u8861\u91cf\u6807\u51c6\uff0c\u4e5f\u5c31\u662f\u635f\u5931\u51fd\u6570\uff0c\u5e73\u65b9\u9879\u635f\u5931\uff0c\u6700\u540e\u7684\u76ee\u6807\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20(\u975e\u7f3a\u5931\u503c)\u7684e(i,j)\u7684\u603b\u548c \u6700\u5c0f \u5f0f\u5b503 OK\uff0c\u76ee\u524d\u73b0\u5728\u8bc4\u5206\u77e9\u9635\u6709\u4e86\uff0c\u635f\u5931\u51fd\u6570\u4e5f\u6709\u4e86\uff0c\u8be5\u4f18\u5316\u7b97\u6cd5\u767b\u573a\u4e86\uff0c\u4e0b\u9762\u5f0f\u5b504\u662f\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u7684\u4f18\u5316\u7b97\u6cd5\uff0cp,q\u91cc\u9762\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u66f4\u65b0\u65b9\u5f0f \u5f0f\u5b504 \u7136\u800c\uff0c\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u90fd\u559c\u6b22\u52a0\u4e00\u4e2a\u6b63\u5219\u9879\uff0c\u8fd9\u91cc\u9762\u5bf9\u5f0f\u5b503\u7a0d\u4f5c\u4fee\u6539\uff0c\u5f97\u5230\u5982\u4e0b\u5f0f\u5b505\uff0cbeita \u662f\u6b63\u5219\u53c2\u6570 \u5f0f\u5b505 \u76f8\u5e94\u7684p,q\u77e9\u9635\u5404\u4e2a\u5143\u7d20\u7684\u66f4\u65b0\u4e5f\u6362\u6210\u4e86\u5982\u4e0b\u65b9\u5f0f \u5f0f\u5b506 \u81f3\u6b64\uff0cP,Q\u77e9\u9635\u5143\u7d20\u6c42\u51fa\u6765\u4e86\u4e4b\u540e\uff0c\u8ba1\u7b97\u67d0\u4e2a\u7528\u6237i\u5bf9\u67d0\u4e2a\u7269\u54c1j\u7684\u8bc4\u5206\u8ba1\u7b97\u5c31\u662fp(i,1) q(1,j)+p(i,2) q(2,j)+....+p(i,k)*q(k,j)\u3002","title":"\u63a8\u5bfc"},{"location":"ai/mf/#_12","text":"1\uff09\u968f\u673a\u751f\u6210\u4e24\u4e2a\u77e9\u9635P,Q\uff1b 2\uff09\u4e3a\u4e86\u80fd\u591f\u6709\u8f83\u597d\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u4f1a\u5728\u635f\u5931\u51fd\u6570\u4e2d\u52a0\u5165\u6b63\u5219\u9879\u5bf9\u53c2\u6570\u8fdb\u884c\u7ea6\u675f\uff1b 3\uff09\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u83b7\u5f97\u4fee\u6b63\u7684p\u548cq\uff1b 4\uff09\u4e0d\u505c\u8fed\u4ee3\u76f4\u81f3\u7b97\u6cd5\u6700\u7ec8\u6536\u655b\uff0c\u5373\uff1a\u76f4\u5230sum\uff08e^2\uff09<=\u9608\u503c\u6216\u8005\u8fbe\u5230\u6307\u5b9a\u7684\u8bad\u7ec3\u6b21\u6570\u3002 \u6ce8\u610f: \u7b97\u6cd5\u6b65\u9aa4\u4e2d\u7684\u66f4\u65b0\u516c\u5f0f\u548c\u635f\u5931\u51fd\u6570\u90fd\u5df2\u7ecf\u8fdb\u884c\u4e86 \u6b63\u5219\u5316 \u3002 (\u2605\u8865\u5145) \u6b63\u5219\u5316: 1\uff09\u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408 \u4e00\u3001\u6b20\u62df\u5408 \u8bad\u7ec3\u8bef\u5dee\u548c\u9a8c\u8bc1\u8bef\u5dee\u90fd\u5f88\u5927\uff0c\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a\u6b20\u62df\u5408\u3002\u51fa\u73b0\u6b20\u62df\u5408\u7684\u539f\u56e0\u662f\u6a21\u578b\u5c1a\u672a\u5b66\u4e60\u5230\u6570\u636e\u7684\u771f\u5b9e\u7ed3\u6784\u3002\u56e0\u6b64\uff0c\u6a21\u62df\u5728\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e0a\u7684\u6027\u80fd\u90fd\u5f88\u5dee\u3002 \u4e8c\u3001\u8fc7\u62df\u5408 \u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u5f88\u597d\uff0c\u4f46\u662f\u5728\u6d4b\u8bd5\u96c6\u4e0a\u5374\u4e0d\u80fd\u4fdd\u6301\u51c6\u786e\uff0c\u4e5f\u5c31\u662f\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u5f88\u5dee\u3002\u8fd9\u79cd\u60c5\u51b5\u5f88\u53ef\u80fd\u662f\u6a21\u578b\u8fc7\u62df\u5408\u3002 \u533a\u5206\u8bad\u7ec3\u96c6,\u6d4b\u8bd5\u96c6,\u9a8c\u8bc1\u96c6: \u8bad\u7ec3\u96c6 \u4f5c\u7528\uff1a\u4f30\u8ba1\u6a21\u578b \u5b66\u4e60\u6837\u672c\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u5339\u914d\u4e00\u4e9b\u53c2\u6570\u6765\u5efa\u7acb\u4e00\u4e2a\u5206\u7c7b\u5668\u3002\u5efa\u7acb\u4e00\u79cd\u5206\u7c7b\u7684\u65b9\u5f0f\uff0c\u4e3b\u8981\u662f\u7528\u6765\u8bad\u7ec3\u6a21\u578b\u7684\u3002 \u9a8c\u8bc1\u96c6 \u4f5c\u7528\uff1a\u786e\u5b9a\u7f51\u7edc\u7ed3\u6784\u6216\u8005\u63a7\u5236\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u7684\u53c2\u6570 \u5bf9\u5b66\u4e60\u51fa\u6765\u7684\u6a21\u578b\uff0c\u8c03\u6574\u5206\u7c7b\u5668\u7684\u53c2\u6570\uff0c\u5982\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u9009\u62e9\u9690\u85cf\u5355\u5143\u6570\u3002\u9a8c\u8bc1\u96c6\u8fd8\u7528\u6765\u786e\u5b9a\u7f51\u7edc\u7ed3\u6784\u6216\u8005\u63a7\u5236\u6a21\u578b\u590d\u6742\u7a0b\u5ea6\u7684\u53c2\u6570\u3002 \u6d4b\u8bd5\u96c6 \u4f5c\u7528\uff1a\u68c0\u9a8c\u6700\u7ec8\u9009\u62e9\u6700\u4f18\u7684\u6a21\u578b\u7684\u6027\u80fd\u5982\u4f55 \u4e3b\u8981\u662f\u6d4b\u8bd5\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u7684\u5206\u8fa8\u80fd\u529b\uff08\u8bc6\u522b\u7387\u7b49\uff09 \u603b\u7ed3\u4e3a: \u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u6548\u679c \u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u6548\u679c \u5177\u4f53\u60c5\u51b5 \u4e0d\u597d \u4e0d\u597d \u6b20\u62df\u5408 \u597d \u4e0d\u597d \u8fc7\u62df\u5408 \u597d \u597d \u6b63\u5e38 2\uff09 \u89e3\u51b3\u8fc7\u62df\u5408\u548c\u6b20\u62df\u5408\u95ee\u9898 \u4e00\u3001\u89e3\u51b3\u6b20\u62df\u5408 (1)\u589e\u52a0\u65b0\u7279\u5f81\uff0c\u53ef\u4ee5\u8003\u8651\u52a0\u5165\u8fdb\u7279\u5f81\u7ec4\u5408\u3001\u9ad8\u6b21\u7279\u5f81\uff0c\u6765\u589e\u5927\u5047\u8bbe\u7a7a\u95f4; (2)\u5c1d\u8bd5\u975e\u7ebf\u6027\u6a21\u578b\uff0c\u6bd4\u5982\u6838SVM \u3001\u51b3\u7b56\u6811\u3001DNN\u7b49\u6a21\u578b; (3)\u5982\u679c\u6709\u6b63\u5219\u9879\u53ef\u4ee5\u8f83\u5c0f\u6b63\u5219\u9879\u53c2\u6570 \u03bb; (4)\u589e\u5927\u6570\u636e\u96c6(\u6700\u6839\u672c\u7684\u65b9\u6cd5); (5)Boosting ,Boosting \u5f80\u5f80\u4f1a\u6709\u8f83\u5c0f\u7684 Bias\uff0c\u6bd4\u5982 Gradient Boosting \u7b49. \u4e8c\u3001\u89e3\u51b3\u8fc7\u62df\u5408 (1)\u4ea4\u53c9\u68c0\u9a8c\uff0c\u901a\u8fc7\u4ea4\u53c9\u68c0\u9a8c\u5f97\u5230\u8f83\u4f18\u7684\u6a21\u578b\u53c2\u6570; (2)\u7279\u5f81\u9009\u62e9\uff0c\u51cf\u5c11\u7279\u5f81\u6570\u6216\u4f7f\u7528\u8f83\u5c11\u7684\u7279\u5f81\u7ec4\u5408\uff0c\u5bf9\u4e8e\u6309\u533a\u95f4\u79bb\u6563\u5316\u7684\u7279\u5f81\uff0c\u589e\u5927\u5212\u5206\u7684\u533a\u95f4; (3)\u6b63\u5219\u5316\uff0c\u5e38\u7528\u7684\u6709 L1\u3001L2 \u6b63\u5219\u3002\u800c\u4e14 L1\u6b63\u5219\u8fd8\u53ef\u4ee5\u81ea\u52a8\u8fdb\u884c\u7279\u5f81\u9009\u62e9; (4)\u5982\u679c\u6709\u6b63\u5219\u9879\u5219\u53ef\u4ee5\u8003\u8651\u589e\u5927\u6b63\u5219\u9879\u53c2\u6570 \u03bb; (5)\u589e\u52a0\u8bad\u7ec3\u6570\u636e\u53ef\u4ee5\u6709\u9650\u7684\u907f\u514d\u8fc7\u62df\u5408; (6)Bagging ,\u5c06\u591a\u4e2a\u5f31\u5b66\u4e60\u5668Bagging \u4e00\u4e0b\u6548\u679c\u4f1a\u597d\u5f88\u591a\uff0c\u6bd4\u5982\u968f\u673a\u68ee\u6797\u7b49; (7)\u795e\u7ecf\u7f51\u7edc\u4e2d\u89e3\u51b3\u8fc7\u62df\u5408\u53ef\u4ee5\u91c7\u7528dropout\u65b9\u6cd5.","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"ai/mf/#_13","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 import numpy as np from math import pow import matplotlib.pyplot as plt % matplotlib inline def mf ( R , P , Q , K ): alpha = 0.0002 beta = 0.02 times = 5000 eplison = 0.001 result = [] #\u5c06\u77e9\u9635Q\u8fdb\u884c\u8f6c\u7f6e Q = Q . T #\u5c06\u751f\u6210\u7684\u77e9\u9635\u76f8\u4e58 for time in range ( times ): #\u6c42R\u5c16\u7684\u503c for i in range ( len ( R )): for j in range ( len ( R [ i ])): eij = R [ i ][ j ] - np . dot ( P [ i ,:], Q [:, j ]) for k in range ( K ): P [ i ][ k ] = P [ i ][ k ] + 2 * alpha * eij * Q [ k ][ j ] Q [ k ][ j ] = Q [ k ][ j ] + 2 * alpha * eij * P [ i ][ k ] eR = np . dot ( P , Q ) #\u6c42eij\u7684\u5e73\u65b9 eij_2 = 0 for i in range ( len ( R )): for j in range ( len ( R [ i ])): for k in range ( K ): eij_2 = eij_2 + pow (( R [ i ][ j ] - np . dot ( P [ i ,:], Q [:, j ])), 2 ) + 0.5 * beta * ( pow ( P [ i ][ k ], 2 )) + pow ( Q [ k ][ j ], 2 ) result . append ( eij_2 ) if eij_2 < eplison : break return P , Q . T , result def main (): R = [ [ 5 , 3 , 0 , 1 ], [ 4 , 0 , 0 , 1 ], [ 1 , 1 , 0 , 5 ], [ 1 , 0 , 0 , 4 ], [ 0 , 1 , 5 , 4 ] ] #\u5c06R\u5217\u8868\u8f6c\u5316\u4e3a\u77e9\u9635 R = np . array ( R ) #\u83b7\u53d6\u8be5\u77e9\u9635\u7684\u5927\u5c0f N = len ( R ) M = len ( R [ 0 ]) print ( N ) print ( M ) ''' \u5982\u4f55\u9884\u6d4b\u7f3a\u5931\u7684\u8bc4\u5206\u5462\uff1f\u5bf9\u4e8e\u7f3a\u5931\u7684\u8bc4\u5206\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u56de\u5f52\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8fde\u7eed\u503c\u7684\u9884\u6d4b\uff0c \u5bf9\u4e8e\u77e9\u9635\u5206\u89e3\u6709\u5982\u4e0b\u5f0f\u5b50\uff0cR\u662f\u7c7b\u4f3c\u56fe1\u7684\u8bc4\u5206\u77e9\u9635\uff0c\u5047\u8bbeN*M\u7ef4(N\u8868\u793a\u884c\u6570\uff0cM\u8868\u793a\u5217\u6570)\uff0c\u53ef\u4ee5\u5206\u89e3\u4e3aP\u8ddfQ\u77e9\u9635\uff0c \u5176\u4e2dP\u77e9\u9635\u7ef4\u5ea6N*K\uff0cP\u77e9\u9635\u7ef4\u5ea6K*M\u3002 \u5bf9\u4e8eP,Q\u77e9\u9635\u7684\u89e3\u91ca\uff0c\u76f4\u89c2\u4e0a\uff0cP\u77e9\u9635\u662fN\u4e2a\u7528\u6237\u5bf9K\u4e2a\u4e3b\u9898\u7684\u5173\u7cfb\uff0cQ\u77e9\u9635\u662fK\u4e2a\u4e3b\u9898\u8ddfM\u4e2a\u7269\u54c1\u7684\u5173\u7cfb\uff0c\u81f3\u4e8eK\u4e2a \u4e3b\u9898\u5177\u4f53\u662f\u4ec0\u4e48\uff0c\u5728\u7b97\u6cd5\u91cc\u9762K\u662f\u4e00\u4e2a\u53c2\u6570\uff0c\u9700\u8981\u8c03\u8282\u7684\uff0c\u901a\u5e3810~100\u4e4b\u95f4\u3002 ''' K = 2 P = np . random . rand ( N , K ) Q = np . random . rand ( M , K ) #\u8c03\u7528\u77e9\u9635\u5206\u89e3\u7684\u51fd\u6570 mf_P , mf_Q , result = mf ( R , P , Q , K ) print ( \"\u539f\u59cb\u77e9\u9635:\" , R ) mf_R = np . dot ( mf_P , mf_Q . T ) print ( \"\u7ecf\u8fc7MF\u540e:\" , mf_R ) #\u505a\u51fa\u56fe\u50cf for t in range ( 5000 ): plt . scatter ( t , result [ t ]) plt . show () main () \u77e9\u9635\u5206\u89e3\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u4ee3\u7801\u7ec3\u4e60"},{"location":"ai/psbys/","text":"\u6734\u7d20\u8d1d\u53f6\u65af\u6982\u8ff0 \u00b6 \u57fa\u7840 \u00b6 \u6734\u7d20\u8d1d\u53f6\u65af\u7684\u6570\u5b66\u7406\u8bba\u57fa\u7840\u6e90\u4e8e\u6982\u7387\u8bba\u3002\u6240\u4ee5\uff0c\u5728\u5b66\u4e60\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u4e4b\u524d\uff0c\u9996\u5148\u5bf9\u5176\u4e2d\u6d89\u53ca\u5230\u7684\u6982\u7387\u8bba\u77e5\u8bc6\u505a\u7b80\u8981\u8bb2\u89e3\u3002 \u6761\u4ef6\u6982\u7387 \u00b6 \u6761\u4ef6\u6982\u7387\u5c31\u662f\u6307\u4e8b\u4ef6 A \u5728\u53e6\u5916\u4e00\u4e2a\u4e8b\u4ef6 B \u5df2\u7ecf\u53d1\u751f\u6761\u4ef6\u4e0b\u7684\u6982\u7387\u3002\u5982\u56fe\u6240\u793a \uff1a \u5176\u4e2d\uff1a P(A) \u8868\u793a A \u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u3002 P(B) \u8868\u793a B \u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u3002 P(AB) \u8868\u793a A,B \u4e8b\u4ef6\u540c\u65f6\u53d1\u751f\u7684\u6982\u7387\u3002 \u800c\u6700\u7ec8\u8ba1\u7b97\u5f97\u5230\u7684 P(A\u2223B) \u4fbf\u662f\u6761\u4ef6\u6982\u7387\uff0c\u8868\u793a\u5728 B \u4e8b\u4ef6\u53d1\u751f\u7684\u60c5\u51b5\u4e0b A \u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u3002 \u8d1d\u53f6\u65af\u5b9a\u7406 \u00b6 \u4e0a\u9762\u63d0\u5230\u4e86\u6761\u4ef6\u6982\u7387\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u90a3\u4e48\u5f53\u77e5\u9053\u4e8b\u4ef6 B \u53d1\u751f\u7684\u60c5\u51b5\u4e0b\u4e8b\u4ef6 A \u53d1\u751f\u7684\u6982\u7387 P(A\u2223B)\uff0c\u5982\u4f55\u6c42 P(B\u2223A) \u5462\uff1f\u8d1d\u53f6\u65af\u5b9a\u7406\u5e94\u8fd0\u800c\u751f\u3002\u6839\u636e\u6761\u4ef6\u6982\u7387\u516c\u5f0f\u53ef\u4ee5\u5f97\u5230: \u800c\u540c\u6837\u901a\u8fc7\u6761\u4ef6\u6982\u7387\u516c\u5f0f\u53ef\u4ee5\u5f97\u5230\uff1a \u5c06 (2) \u5f0f\u5e26\u5165 (1) \u5f0f\u4fbf\u53ef\u5f97\u5230\u5b8c\u6574\u7684\u8d1d\u53f6\u65af\u5b9a\u7406\uff1a \u4ee5\u4e0b\uff0c\u901a\u8fc7\u4e00\u5f20\u56fe\u6765\u5b8c\u6574\u4e14\u5f62\u8c61\u7684\u5c55\u793a\u6761\u4ef6\u6982\u7387\u548c\u8d1d\u53f6\u65af\u5b9a\u7406\u7684\u539f\u7406\u3002 \u5148\u9a8c\u6982\u7387 \u00b6 \u6307\u7684\u662f\u6839\u636e\u4ee5\u5f80\u7ecf\u9a8c\u548c\u5206\u6790\u5f97\u5230\u7684\u6982\u7387\u3002\u4f8b\u5982\u4ee5\u4e0a\u516c\u5f0f\u4e2d\u7684P(A),P(B),\u53c8\u4f8b\u5982\uff1aX \u8868\u793a\u6295\u4e00\u679a\u8d28\u5730\u5747\u5300\u7684\u786c\u5e01\uff0c\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\uff0c\u663e\u7136\u5728\u6211\u4eec\u6839\u636e\u4ee5\u5f80\u7684\u7ecf\u9a8c\u4e0b\uff0c\u6211\u4eec\u4f1a\u8ba4\u4e3aX \u7684\u6982\u7387P(X)=0.5 \u3002\u5176\u4e2dP(X)=0.5 \u5c31\u662f\u5148\u9a8c\u6982\u7387\u3002 \u540e\u9a8c\u6982\u7387 \u00b6 \u540e\u9a8c\u6982\u7387\uff08Posterior Probability\uff09\u662f\u4e8b\u4ef6\u53d1\u751f\u540e\u6c42\u7684\u53cd\u5411\u6761\u4ef6\u6982\u7387\uff1b\u5373\u57fa\u4e8e\u5148\u9a8c\u6982\u7387\u901a\u8fc7\u8d1d\u53f6\u65af\u516c\u5f0f\u6c42\u5f97\u7684\u53cd\u5411\u6761\u4ef6\u6982\u7387\u3002\u4f8b\u5982\u516c\u5f0f\u4e2d\u7684 P(B\u2223A) \u5c31\u662f\u901a\u8fc7\u5148\u9a8c\u6982\u7387 P(A)\u548cP(B) \u5f97\u5230\u7684\u540e\u9a8c\u6982\u7387\uff0c\u5176\u901a\u4fd7\u7684\u8bb2\u5c31\u662f\u300c\u6267\u679c\u5bfb\u56e0\u300d\u4e2d\u7684\u300c\u56e0\u300d\u3002 \u6734\u7d20\u8d1d\u53f6\u65af \u00b6 \u4ecb\u7ecd \u00b6 \u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09\u5c31\u662f\u5c06\u8d1d\u53f6\u65af\u539f\u7406\u4ee5\u53ca\u6761\u4ef6\u72ec\u7acb\u7ed3\u5408\u800c\u6210\u7684\u7b97\u6cd5\uff0c\u5176\u601d\u60f3\u975e\u5e38\u7684\u7b80\u5355\uff0c\u6839\u636e\u8d1d\u53f6\u65af\u516c\u5f0f\uff1a \u53d8\u5f62\u8868\u8fbe\u5f0f\u4e3a\uff1a \u516c\u5f0f\uff085\uff09\u5229\u7528\u5148\u9a8c\u6982\u7387\uff0c\u5373\u7279\u5f81\u548c\u7c7b\u522b\u7684\u6982\u7387\uff1b\u518d\u5229\u7528\u4e0d\u540c\u7c7b\u522b\u4e2d\u5404\u4e2a\u7279\u5f81\u7684\u6982\u7387\u5206\u5e03\uff0c\u6700\u540e\u8ba1\u7b97\u5f97\u5230\u540e\u9a8c\u6982\u7387\uff0c\u5373\u5404\u4e2a\u7279\u5f81\u5206\u5e03\u4e0b\u7684\u9884\u6d4b\u4e0d\u540c\u7684\u7c7b\u522b\u3002 \u5229\u7528\u8d1d\u53f6\u65af\u539f\u7406\u6c42\u89e3\u56fa\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u4f46\u5b9e\u9645\u751f\u6d3b\u4e2d\u6570\u636e\u7684\u7279\u5f81\u4e4b\u95f4\u662f\u6709\u76f8\u4e92\u8054\u7cfb\u7684\uff0c\u5728\u8ba1\u7b97P(\u7279\u5f81\u2223\u7c7b\u522b) \u65f6\uff0c\u8003\u8651\u7279\u5f81\u4e4b\u95f4\u7684\u8054\u7cfb\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800c\u6734\u7d20\u8d1d\u53f6\u65af\u5219\u4eba\u4e3a\u7684\u5c06\u5404\u4e2a\u7279\u5f81\u5272\u88c2\u5f00\uff0c\u8ba4\u5b9a\u7279\u5f81\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u4e2d\u7684\u300c\u6734\u7d20\u300d\uff0c\u5373\u6761\u4ef6\u72ec\u7acb\uff0c\u8868\u793a\u5176\u5047\u8bbe\u9884\u6d4b\u7684\u5404\u4e2a\u5c5e\u6027\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684,\u6bcf\u4e2a\u5c5e\u6027\u72ec\u7acb\u5730\u5bf9\u5206\u7c7b\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff0c\u6761\u4ef6\u72ec\u7acb\u5728\u6570\u5b66\u4e0a\u7684\u8868\u793a\u4e3a\uff1aP(AB)=P(A)*P(B)\u3002\u8fd9\u6837\uff0c\u4f7f\u5f97\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u53d8\u5f97\u7b80\u5355\uff0c\u4f46\u6709\u65f6\u4f1a\u727a\u7272\u4e00\u5b9a\u7684\u5206\u7c7b\u51c6\u786e\u7387\u3002\u5bf9\u4e8e\u9884\u6d4b\u6570\u636e\uff0c\u6c42\u89e3\u5728\u8be5\u9884\u6d4b\u6570\u636e\u7684\u5c5e\u6027\u51fa\u73b0\u65f6\u5404\u4e2a\u7c7b\u522b\u7684\u51fa\u73b0\u6982\u7387\uff0c\u5c06\u6982\u7387\u503c\u5927\u7684\u7c7b\u522b\u4f5c\u4e3a\u9884\u6d4b\u6570\u636e\u7684\u7c7b\u522b\u3002 \u7406\u89e3\u6761\u4ef6\u72ec\u7acb\u6216\u7279\u5f81\u72ec\u7acb\u7684\u5c0f\u4f8b\u5b50 :\u5982\u679c\u4e00\u79cd\u6c34\u679c\u5176\u5177\u6709\u7ea2\uff0c\u5706\uff0c\u76f4\u5f84\u5927\u69823\u82f1\u5bf8\u7b49\u7279\u5f81\uff0c\u8be5\u6c34\u679c\u53ef\u4ee5\u88ab\u5224\u5b9a\u4e3a\u662f\u82f9\u679c\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u7279\u5f81\u76f8\u4e92\u4f9d\u8d56\u6216\u8005\u6709\u4e9b\u7279\u5f81\u7531\u5176\u4ed6\u7279\u5f81\u51b3\u5b9a\uff0c\u7136\u800c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u8ba4\u4e3a\u8fd9\u4e9b\u5c5e\u6027\u5728\u5224\u5b9a\u8be5\u6c34\u679c\u662f\u5426\u4e3a\u82f9\u679c\u7684\u6982\u7387\u5206\u5e03\u4e0a\u72ec\u7acb\u7684\u3002 \u6b65\u9aa4 \u00b6 1\uff09\u51c6\u5907\u6570\u503c\u578b\u6216\u8005\u5e03\u5c14\u578b\u6570\u636e\uff1b 2\uff09\u8ba1\u7b97\u4e0d\u540c\u7684\u72ec\u7acb\u7279\u5f81\u7684\u6761\u4ef6\u6982\u7387\u8ba1\u7b97P(y1\u2223x),P(y2\u2223x),P(y3\u2223x),\u2026,P(ym\u2223x)\uff1b 3\uff09\u5bfb\u627eP(y1\u2223x),P(y2\u2223x),P(y3\u2223x),\u2026,P(ym\u2223x) \u4e2d\u6700\u5927\u7684\u6982\u7387P(yk\u2223x)\uff0c\u5219x\u5c5e\u4e8e\u7c7b\u522byk\u3002 \u4f18\u7f3a\u70b9 \u00b6 \u4f18\u70b9 \u00b6 \u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u53d1\u6e90\u4e8e\u53e4\u5178\u6570\u5b66\u7406\u8bba\uff0c\u6709\u7a33\u5b9a\u7684\u5206\u7c7b\u6548\u7387\u3002 \u5bf9\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u8868\u73b0\u5f88\u597d\uff0c\u80fd\u4e2a\u5904\u7406\u591a\u5206\u7c7b\u4efb\u52a1\uff0c\u9002\u5408\u589e\u91cf\u5f0f\u8bad\u7ec3\uff0c\u5c24\u5176\u662f\u6570\u636e\u91cf\u8d85\u51fa\u5185\u5b58\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6279\u6279\u7684\u53bb\u589e\u91cf\u8bad\u7ec3\u3002 \u5bf9\u7f3a\u5931\u6570\u636e\u4e0d\u592a\u654f\u611f\uff0c\u7b97\u6cd5\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5e38\u7528\u4e8e\u6587\u672c\u5206\u7c7b\u3002 \u7f3a\u70b9 \u00b6 \u7406\u8bba\u4e0a\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u4e0e\u5176\u4ed6\u5206\u7c7b\u65b9\u6cd5\u76f8\u6bd4\u5177\u6709\u6700\u5c0f\u7684\u8bef\u5dee\u7387\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u5e76\u975e\u603b\u662f\u5982\u6b64\uff0c\u8fd9\u662f\u56e0\u4e3a\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u7ed9\u5b9a\u8f93\u51fa\u7c7b\u522b\u7684\u60c5\u51b5\u4e0b,\u5047\u8bbe\u5c5e\u6027\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u8fd9\u4e2a\u5047\u8bbe\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5f80\u5f80\u662f\u4e0d\u6210\u7acb\u7684\uff0c\u5728\u5c5e\u6027\u4e2a\u6570\u6bd4\u8f83\u591a\u6216\u8005\u5c5e\u6027\u4e4b\u95f4\u76f8\u5173\u6027\u8f83\u5927\u65f6\uff0c\u5206\u7c7b\u6548\u679c\u4e0d\u597d\u3002\u800c\u5728\u5c5e\u6027\u76f8\u5173\u6027\u8f83\u5c0f\u65f6\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6027\u80fd\u6700\u4e3a\u826f\u597d\u3002\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6709\u534a\u6734\u7d20\u8d1d\u53f6\u65af\u4e4b\u7c7b\u7684\u7b97\u6cd5\u901a\u8fc7\u8003\u8651\u90e8\u5206\u5173\u8054\u6027\u9002\u5ea6\u6539\u8fdb\u3002 \u9700\u8981\u77e5\u9053\u5148\u9a8c\u6982\u7387\uff0c\u4e14\u5148\u9a8c\u6982\u7387\u5f88\u591a\u65f6\u5019\u53d6\u51b3\u4e8e\u5047\u8bbe\uff0c\u5047\u8bbe\u7684\u6a21\u578b\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\uff0c\u56e0\u6b64\u5728\u67d0\u4e9b\u65f6\u5019\u4f1a\u7531\u4e8e\u5047\u8bbe\u7684\u5148\u9a8c\u6a21\u578b\u7684\u539f\u56e0\u5bfc\u81f4\u9884\u6d4b\u6548\u679c\u4e0d\u4f73\u3002 \u7531\u4e8e\u6211\u4eec\u662f\u901a\u8fc7\u5148\u9a8c\u548c\u6570\u636e\u6765\u51b3\u5b9a\u540e\u9a8c\u7684\u6982\u7387\u4ece\u800c\u51b3\u5b9a\u5206\u7c7b\uff0c\u6240\u4ee5\u5206\u7c7b\u51b3\u7b56\u5b58\u5728\u4e00\u5b9a\u7684\u9519\u8bef\u7387\u3002 \u5bf9\u8f93\u5165\u6570\u636e\u7684\u8868\u8fbe\u5f62\u5f0f\u5f88\u654f\u611f\u3002 \u63a8\u5bfc \u00b6 \u4ee3\u7801\u5b9e\u73b0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 #\u6570\u636e\u96c6 x = [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 ] y = [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 ] labels = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ] #\u5148\u9a8c\u6982\u7387P(\u79cd\u7c7b) print ( \"=========\u8ba1\u7b97\u5148\u9a8c\u6982\u7387========\" ) labels0_count = 0 labels1_count = 0 for c in range ( len ( labels )): if labels [ c ] == 0 : labels0_count += 1 else : labels1_count += 1 print ( \"labels = 0\u7684\u6982\u7387\u4e3a:\" , labels0_count / len ( labels )) print ( \"labels = 1\u7684\u6982\u7387\u4e3a:\" , labels1_count / len ( labels )) Plabels0 = labels0_count / len ( labels ) Plabels1 = labels1_count / len ( labels ) print ( \"=========\u8ba1\u7b97\u6761\u4ef6\u6982\u7387========\" ) #\u5bf9labels = 0\u65f6\u7684\u6982\u7387\u8ba1\u7b97 x0_count = 0 x1_count = 0 y0_count = 0 y1_count = 0 for cc in range ( len ( x [: 10 ])): if x [ cc ] == 0 : x0_count += 1 elif x [ cc ] == 1 : x1_count += 1 for cc in range ( len ( x [: 10 ])): if y [ cc ] == 0 : y0_count += 1 elif y [ cc ] == 1 : y1_count += 1 print ( \"P(x=0|labels=0):\" , x0_count / len ( x [: 10 ])) print ( \"P(x=1|labels=0):\" , x1_count / len ( x [: 10 ])) print ( \"P(y=0|labels=0):\" , y0_count / len ( x [: 10 ])) print ( \"P(y=1|labels=0):\" , y1_count / len ( x [: 10 ])) Px00 = x0_count / len ( x [: 10 ]) Px10 = x1_count / len ( x [: 10 ]) Py00 = y0_count / len ( x [: 10 ]) Py10 = y1_count / len ( x [: 10 ]) #\u5bf9labels = 1\u65f6\u7684\u6982\u7387\u8ba1\u7b97 ex0_count = 0 ex1_count = 0 ey0_count = 0 ey1_count = 0 for kk in range ( 10 , 20 ): if x [ kk ] == 0 : ex0_count += 1 elif x [ kk ] == 1 : ex1_count += 1 for kk in range ( 10 , 20 ): if y [ kk ] == 0 : ey0_count += 1 elif y [ kk ] == 1 : ey1_count += 1 print ( \"P(x=0|labels=1):\" , ex0_count / len ( x [ 10 : 20 ])) print ( \"P(x=1|labels=1):\" , ex1_count / len ( x [ 10 : 20 ])) print ( \"P(y=0|labels=1):\" , ey0_count / len ( x [ 10 : 20 ])) print ( \"P(y=1|labels=1):\" , ey1_count / len ( x [ 10 : 20 ])) Px01 = ex0_count / len ( x [ 10 : 20 ]) Px11 = ex1_count / len ( x [ 10 : 20 ]) Py01 = ey0_count / len ( x [ 10 : 20 ]) Py11 = ey1_count / len ( x [ 10 : 20 ]) print ( \"==========\u5206\u7c7b\u7ed3\u679c=========\" ) #\u5f15\u5165\u6d4b\u8bd5\u6837\u672cex={x=1,y=2},\u5b9e\u73b0\u5bf9ex\u7684\u5206\u7c7b,\u5373\u5c5e\u4e8elabels=0\u8fd8\u662flabels=1 #\u8d1d\u53f6\u65af\u5b9a\u7406,\u7531\u4e8e\u5206\u6bcd\u76f8\u540c,\u6240\u4ee5\u53ea\u6c42\u5206\u5b50 a = ( Px10 * Py10 ) * Plabels0 b = ( Px11 * Py11 ) * Plabels1 print ( \"a=\" , a , \" \\n \" , \"b=\" , b ) if a > b : print ( \"\u6d4b\u8bd5\u6837\u672cex\u5c5e\u4e8elabels=0\u7c7b\" ) else : print ( \"\u6d4b\u8bd5\u6837\u672cex\u5c5e\u4e8elabels=1\u7c7b\" ) \u6734\u7d20\u8d1d\u53f6\u65af\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"6. \u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b"},{"location":"ai/psbys/#_1","text":"","title":"\u6734\u7d20\u8d1d\u53f6\u65af\u6982\u8ff0"},{"location":"ai/psbys/#_2","text":"\u6734\u7d20\u8d1d\u53f6\u65af\u7684\u6570\u5b66\u7406\u8bba\u57fa\u7840\u6e90\u4e8e\u6982\u7387\u8bba\u3002\u6240\u4ee5\uff0c\u5728\u5b66\u4e60\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u4e4b\u524d\uff0c\u9996\u5148\u5bf9\u5176\u4e2d\u6d89\u53ca\u5230\u7684\u6982\u7387\u8bba\u77e5\u8bc6\u505a\u7b80\u8981\u8bb2\u89e3\u3002","title":"\u57fa\u7840"},{"location":"ai/psbys/#_3","text":"\u6761\u4ef6\u6982\u7387\u5c31\u662f\u6307\u4e8b\u4ef6 A \u5728\u53e6\u5916\u4e00\u4e2a\u4e8b\u4ef6 B \u5df2\u7ecf\u53d1\u751f\u6761\u4ef6\u4e0b\u7684\u6982\u7387\u3002\u5982\u56fe\u6240\u793a \uff1a \u5176\u4e2d\uff1a P(A) \u8868\u793a A \u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u3002 P(B) \u8868\u793a B \u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u3002 P(AB) \u8868\u793a A,B \u4e8b\u4ef6\u540c\u65f6\u53d1\u751f\u7684\u6982\u7387\u3002 \u800c\u6700\u7ec8\u8ba1\u7b97\u5f97\u5230\u7684 P(A\u2223B) \u4fbf\u662f\u6761\u4ef6\u6982\u7387\uff0c\u8868\u793a\u5728 B \u4e8b\u4ef6\u53d1\u751f\u7684\u60c5\u51b5\u4e0b A \u4e8b\u4ef6\u53d1\u751f\u7684\u6982\u7387\u3002","title":"\u6761\u4ef6\u6982\u7387"},{"location":"ai/psbys/#_4","text":"\u4e0a\u9762\u63d0\u5230\u4e86\u6761\u4ef6\u6982\u7387\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u90a3\u4e48\u5f53\u77e5\u9053\u4e8b\u4ef6 B \u53d1\u751f\u7684\u60c5\u51b5\u4e0b\u4e8b\u4ef6 A \u53d1\u751f\u7684\u6982\u7387 P(A\u2223B)\uff0c\u5982\u4f55\u6c42 P(B\u2223A) \u5462\uff1f\u8d1d\u53f6\u65af\u5b9a\u7406\u5e94\u8fd0\u800c\u751f\u3002\u6839\u636e\u6761\u4ef6\u6982\u7387\u516c\u5f0f\u53ef\u4ee5\u5f97\u5230: \u800c\u540c\u6837\u901a\u8fc7\u6761\u4ef6\u6982\u7387\u516c\u5f0f\u53ef\u4ee5\u5f97\u5230\uff1a \u5c06 (2) \u5f0f\u5e26\u5165 (1) \u5f0f\u4fbf\u53ef\u5f97\u5230\u5b8c\u6574\u7684\u8d1d\u53f6\u65af\u5b9a\u7406\uff1a \u4ee5\u4e0b\uff0c\u901a\u8fc7\u4e00\u5f20\u56fe\u6765\u5b8c\u6574\u4e14\u5f62\u8c61\u7684\u5c55\u793a\u6761\u4ef6\u6982\u7387\u548c\u8d1d\u53f6\u65af\u5b9a\u7406\u7684\u539f\u7406\u3002","title":"\u8d1d\u53f6\u65af\u5b9a\u7406"},{"location":"ai/psbys/#_5","text":"\u6307\u7684\u662f\u6839\u636e\u4ee5\u5f80\u7ecf\u9a8c\u548c\u5206\u6790\u5f97\u5230\u7684\u6982\u7387\u3002\u4f8b\u5982\u4ee5\u4e0a\u516c\u5f0f\u4e2d\u7684P(A),P(B),\u53c8\u4f8b\u5982\uff1aX \u8868\u793a\u6295\u4e00\u679a\u8d28\u5730\u5747\u5300\u7684\u786c\u5e01\uff0c\u6b63\u9762\u671d\u4e0a\u7684\u6982\u7387\uff0c\u663e\u7136\u5728\u6211\u4eec\u6839\u636e\u4ee5\u5f80\u7684\u7ecf\u9a8c\u4e0b\uff0c\u6211\u4eec\u4f1a\u8ba4\u4e3aX \u7684\u6982\u7387P(X)=0.5 \u3002\u5176\u4e2dP(X)=0.5 \u5c31\u662f\u5148\u9a8c\u6982\u7387\u3002","title":"\u5148\u9a8c\u6982\u7387"},{"location":"ai/psbys/#_6","text":"\u540e\u9a8c\u6982\u7387\uff08Posterior Probability\uff09\u662f\u4e8b\u4ef6\u53d1\u751f\u540e\u6c42\u7684\u53cd\u5411\u6761\u4ef6\u6982\u7387\uff1b\u5373\u57fa\u4e8e\u5148\u9a8c\u6982\u7387\u901a\u8fc7\u8d1d\u53f6\u65af\u516c\u5f0f\u6c42\u5f97\u7684\u53cd\u5411\u6761\u4ef6\u6982\u7387\u3002\u4f8b\u5982\u516c\u5f0f\u4e2d\u7684 P(B\u2223A) \u5c31\u662f\u901a\u8fc7\u5148\u9a8c\u6982\u7387 P(A)\u548cP(B) \u5f97\u5230\u7684\u540e\u9a8c\u6982\u7387\uff0c\u5176\u901a\u4fd7\u7684\u8bb2\u5c31\u662f\u300c\u6267\u679c\u5bfb\u56e0\u300d\u4e2d\u7684\u300c\u56e0\u300d\u3002","title":"\u540e\u9a8c\u6982\u7387"},{"location":"ai/psbys/#_7","text":"","title":"\u6734\u7d20\u8d1d\u53f6\u65af"},{"location":"ai/psbys/#_8","text":"\u6734\u7d20\u8d1d\u53f6\u65af\uff08Naive Bayes\uff09\u5c31\u662f\u5c06\u8d1d\u53f6\u65af\u539f\u7406\u4ee5\u53ca\u6761\u4ef6\u72ec\u7acb\u7ed3\u5408\u800c\u6210\u7684\u7b97\u6cd5\uff0c\u5176\u601d\u60f3\u975e\u5e38\u7684\u7b80\u5355\uff0c\u6839\u636e\u8d1d\u53f6\u65af\u516c\u5f0f\uff1a \u53d8\u5f62\u8868\u8fbe\u5f0f\u4e3a\uff1a \u516c\u5f0f\uff085\uff09\u5229\u7528\u5148\u9a8c\u6982\u7387\uff0c\u5373\u7279\u5f81\u548c\u7c7b\u522b\u7684\u6982\u7387\uff1b\u518d\u5229\u7528\u4e0d\u540c\u7c7b\u522b\u4e2d\u5404\u4e2a\u7279\u5f81\u7684\u6982\u7387\u5206\u5e03\uff0c\u6700\u540e\u8ba1\u7b97\u5f97\u5230\u540e\u9a8c\u6982\u7387\uff0c\u5373\u5404\u4e2a\u7279\u5f81\u5206\u5e03\u4e0b\u7684\u9884\u6d4b\u4e0d\u540c\u7684\u7c7b\u522b\u3002 \u5229\u7528\u8d1d\u53f6\u65af\u539f\u7406\u6c42\u89e3\u56fa\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u4f46\u5b9e\u9645\u751f\u6d3b\u4e2d\u6570\u636e\u7684\u7279\u5f81\u4e4b\u95f4\u662f\u6709\u76f8\u4e92\u8054\u7cfb\u7684\uff0c\u5728\u8ba1\u7b97P(\u7279\u5f81\u2223\u7c7b\u522b) \u65f6\uff0c\u8003\u8651\u7279\u5f81\u4e4b\u95f4\u7684\u8054\u7cfb\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800c\u6734\u7d20\u8d1d\u53f6\u65af\u5219\u4eba\u4e3a\u7684\u5c06\u5404\u4e2a\u7279\u5f81\u5272\u88c2\u5f00\uff0c\u8ba4\u5b9a\u7279\u5f81\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\u3002 \u6734\u7d20\u8d1d\u53f6\u65af\u4e2d\u7684\u300c\u6734\u7d20\u300d\uff0c\u5373\u6761\u4ef6\u72ec\u7acb\uff0c\u8868\u793a\u5176\u5047\u8bbe\u9884\u6d4b\u7684\u5404\u4e2a\u5c5e\u6027\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\u7684,\u6bcf\u4e2a\u5c5e\u6027\u72ec\u7acb\u5730\u5bf9\u5206\u7c7b\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff0c\u6761\u4ef6\u72ec\u7acb\u5728\u6570\u5b66\u4e0a\u7684\u8868\u793a\u4e3a\uff1aP(AB)=P(A)*P(B)\u3002\u8fd9\u6837\uff0c\u4f7f\u5f97\u6734\u7d20\u8d1d\u53f6\u65af\u7b97\u6cd5\u53d8\u5f97\u7b80\u5355\uff0c\u4f46\u6709\u65f6\u4f1a\u727a\u7272\u4e00\u5b9a\u7684\u5206\u7c7b\u51c6\u786e\u7387\u3002\u5bf9\u4e8e\u9884\u6d4b\u6570\u636e\uff0c\u6c42\u89e3\u5728\u8be5\u9884\u6d4b\u6570\u636e\u7684\u5c5e\u6027\u51fa\u73b0\u65f6\u5404\u4e2a\u7c7b\u522b\u7684\u51fa\u73b0\u6982\u7387\uff0c\u5c06\u6982\u7387\u503c\u5927\u7684\u7c7b\u522b\u4f5c\u4e3a\u9884\u6d4b\u6570\u636e\u7684\u7c7b\u522b\u3002 \u7406\u89e3\u6761\u4ef6\u72ec\u7acb\u6216\u7279\u5f81\u72ec\u7acb\u7684\u5c0f\u4f8b\u5b50 :\u5982\u679c\u4e00\u79cd\u6c34\u679c\u5176\u5177\u6709\u7ea2\uff0c\u5706\uff0c\u76f4\u5f84\u5927\u69823\u82f1\u5bf8\u7b49\u7279\u5f81\uff0c\u8be5\u6c34\u679c\u53ef\u4ee5\u88ab\u5224\u5b9a\u4e3a\u662f\u82f9\u679c\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u7279\u5f81\u76f8\u4e92\u4f9d\u8d56\u6216\u8005\u6709\u4e9b\u7279\u5f81\u7531\u5176\u4ed6\u7279\u5f81\u51b3\u5b9a\uff0c\u7136\u800c\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u8ba4\u4e3a\u8fd9\u4e9b\u5c5e\u6027\u5728\u5224\u5b9a\u8be5\u6c34\u679c\u662f\u5426\u4e3a\u82f9\u679c\u7684\u6982\u7387\u5206\u5e03\u4e0a\u72ec\u7acb\u7684\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/psbys/#_9","text":"1\uff09\u51c6\u5907\u6570\u503c\u578b\u6216\u8005\u5e03\u5c14\u578b\u6570\u636e\uff1b 2\uff09\u8ba1\u7b97\u4e0d\u540c\u7684\u72ec\u7acb\u7279\u5f81\u7684\u6761\u4ef6\u6982\u7387\u8ba1\u7b97P(y1\u2223x),P(y2\u2223x),P(y3\u2223x),\u2026,P(ym\u2223x)\uff1b 3\uff09\u5bfb\u627eP(y1\u2223x),P(y2\u2223x),P(y3\u2223x),\u2026,P(ym\u2223x) \u4e2d\u6700\u5927\u7684\u6982\u7387P(yk\u2223x)\uff0c\u5219x\u5c5e\u4e8e\u7c7b\u522byk\u3002","title":"\u6b65\u9aa4"},{"location":"ai/psbys/#_10","text":"","title":"\u4f18\u7f3a\u70b9"},{"location":"ai/psbys/#_11","text":"\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u53d1\u6e90\u4e8e\u53e4\u5178\u6570\u5b66\u7406\u8bba\uff0c\u6709\u7a33\u5b9a\u7684\u5206\u7c7b\u6548\u7387\u3002 \u5bf9\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u8868\u73b0\u5f88\u597d\uff0c\u80fd\u4e2a\u5904\u7406\u591a\u5206\u7c7b\u4efb\u52a1\uff0c\u9002\u5408\u589e\u91cf\u5f0f\u8bad\u7ec3\uff0c\u5c24\u5176\u662f\u6570\u636e\u91cf\u8d85\u51fa\u5185\u5b58\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6279\u6279\u7684\u53bb\u589e\u91cf\u8bad\u7ec3\u3002 \u5bf9\u7f3a\u5931\u6570\u636e\u4e0d\u592a\u654f\u611f\uff0c\u7b97\u6cd5\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5e38\u7528\u4e8e\u6587\u672c\u5206\u7c7b\u3002","title":"\u4f18\u70b9"},{"location":"ai/psbys/#_12","text":"\u7406\u8bba\u4e0a\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u4e0e\u5176\u4ed6\u5206\u7c7b\u65b9\u6cd5\u76f8\u6bd4\u5177\u6709\u6700\u5c0f\u7684\u8bef\u5dee\u7387\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u5e76\u975e\u603b\u662f\u5982\u6b64\uff0c\u8fd9\u662f\u56e0\u4e3a\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u7ed9\u5b9a\u8f93\u51fa\u7c7b\u522b\u7684\u60c5\u51b5\u4e0b,\u5047\u8bbe\u5c5e\u6027\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u8fd9\u4e2a\u5047\u8bbe\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5f80\u5f80\u662f\u4e0d\u6210\u7acb\u7684\uff0c\u5728\u5c5e\u6027\u4e2a\u6570\u6bd4\u8f83\u591a\u6216\u8005\u5c5e\u6027\u4e4b\u95f4\u76f8\u5173\u6027\u8f83\u5927\u65f6\uff0c\u5206\u7c7b\u6548\u679c\u4e0d\u597d\u3002\u800c\u5728\u5c5e\u6027\u76f8\u5173\u6027\u8f83\u5c0f\u65f6\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6027\u80fd\u6700\u4e3a\u826f\u597d\u3002\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6709\u534a\u6734\u7d20\u8d1d\u53f6\u65af\u4e4b\u7c7b\u7684\u7b97\u6cd5\u901a\u8fc7\u8003\u8651\u90e8\u5206\u5173\u8054\u6027\u9002\u5ea6\u6539\u8fdb\u3002 \u9700\u8981\u77e5\u9053\u5148\u9a8c\u6982\u7387\uff0c\u4e14\u5148\u9a8c\u6982\u7387\u5f88\u591a\u65f6\u5019\u53d6\u51b3\u4e8e\u5047\u8bbe\uff0c\u5047\u8bbe\u7684\u6a21\u578b\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\uff0c\u56e0\u6b64\u5728\u67d0\u4e9b\u65f6\u5019\u4f1a\u7531\u4e8e\u5047\u8bbe\u7684\u5148\u9a8c\u6a21\u578b\u7684\u539f\u56e0\u5bfc\u81f4\u9884\u6d4b\u6548\u679c\u4e0d\u4f73\u3002 \u7531\u4e8e\u6211\u4eec\u662f\u901a\u8fc7\u5148\u9a8c\u548c\u6570\u636e\u6765\u51b3\u5b9a\u540e\u9a8c\u7684\u6982\u7387\u4ece\u800c\u51b3\u5b9a\u5206\u7c7b\uff0c\u6240\u4ee5\u5206\u7c7b\u51b3\u7b56\u5b58\u5728\u4e00\u5b9a\u7684\u9519\u8bef\u7387\u3002 \u5bf9\u8f93\u5165\u6570\u636e\u7684\u8868\u8fbe\u5f62\u5f0f\u5f88\u654f\u611f\u3002","title":"\u7f3a\u70b9"},{"location":"ai/psbys/#_13","text":"","title":"\u63a8\u5bfc"},{"location":"ai/psbys/#_14","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 #\u6570\u636e\u96c6 x = [ 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 ] y = [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 ] labels = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ] #\u5148\u9a8c\u6982\u7387P(\u79cd\u7c7b) print ( \"=========\u8ba1\u7b97\u5148\u9a8c\u6982\u7387========\" ) labels0_count = 0 labels1_count = 0 for c in range ( len ( labels )): if labels [ c ] == 0 : labels0_count += 1 else : labels1_count += 1 print ( \"labels = 0\u7684\u6982\u7387\u4e3a:\" , labels0_count / len ( labels )) print ( \"labels = 1\u7684\u6982\u7387\u4e3a:\" , labels1_count / len ( labels )) Plabels0 = labels0_count / len ( labels ) Plabels1 = labels1_count / len ( labels ) print ( \"=========\u8ba1\u7b97\u6761\u4ef6\u6982\u7387========\" ) #\u5bf9labels = 0\u65f6\u7684\u6982\u7387\u8ba1\u7b97 x0_count = 0 x1_count = 0 y0_count = 0 y1_count = 0 for cc in range ( len ( x [: 10 ])): if x [ cc ] == 0 : x0_count += 1 elif x [ cc ] == 1 : x1_count += 1 for cc in range ( len ( x [: 10 ])): if y [ cc ] == 0 : y0_count += 1 elif y [ cc ] == 1 : y1_count += 1 print ( \"P(x=0|labels=0):\" , x0_count / len ( x [: 10 ])) print ( \"P(x=1|labels=0):\" , x1_count / len ( x [: 10 ])) print ( \"P(y=0|labels=0):\" , y0_count / len ( x [: 10 ])) print ( \"P(y=1|labels=0):\" , y1_count / len ( x [: 10 ])) Px00 = x0_count / len ( x [: 10 ]) Px10 = x1_count / len ( x [: 10 ]) Py00 = y0_count / len ( x [: 10 ]) Py10 = y1_count / len ( x [: 10 ]) #\u5bf9labels = 1\u65f6\u7684\u6982\u7387\u8ba1\u7b97 ex0_count = 0 ex1_count = 0 ey0_count = 0 ey1_count = 0 for kk in range ( 10 , 20 ): if x [ kk ] == 0 : ex0_count += 1 elif x [ kk ] == 1 : ex1_count += 1 for kk in range ( 10 , 20 ): if y [ kk ] == 0 : ey0_count += 1 elif y [ kk ] == 1 : ey1_count += 1 print ( \"P(x=0|labels=1):\" , ex0_count / len ( x [ 10 : 20 ])) print ( \"P(x=1|labels=1):\" , ex1_count / len ( x [ 10 : 20 ])) print ( \"P(y=0|labels=1):\" , ey0_count / len ( x [ 10 : 20 ])) print ( \"P(y=1|labels=1):\" , ey1_count / len ( x [ 10 : 20 ])) Px01 = ex0_count / len ( x [ 10 : 20 ]) Px11 = ex1_count / len ( x [ 10 : 20 ]) Py01 = ey0_count / len ( x [ 10 : 20 ]) Py11 = ey1_count / len ( x [ 10 : 20 ]) print ( \"==========\u5206\u7c7b\u7ed3\u679c=========\" ) #\u5f15\u5165\u6d4b\u8bd5\u6837\u672cex={x=1,y=2},\u5b9e\u73b0\u5bf9ex\u7684\u5206\u7c7b,\u5373\u5c5e\u4e8elabels=0\u8fd8\u662flabels=1 #\u8d1d\u53f6\u65af\u5b9a\u7406,\u7531\u4e8e\u5206\u6bcd\u76f8\u540c,\u6240\u4ee5\u53ea\u6c42\u5206\u5b50 a = ( Px10 * Py10 ) * Plabels0 b = ( Px11 * Py11 ) * Plabels1 print ( \"a=\" , a , \" \\n \" , \"b=\" , b ) if a > b : print ( \"\u6d4b\u8bd5\u6837\u672cex\u5c5e\u4e8elabels=0\u7c7b\" ) else : print ( \"\u6d4b\u8bd5\u6837\u672cex\u5c5e\u4e8elabels=1\u7c7b\" ) \u6734\u7d20\u8d1d\u53f6\u65af\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"ai/rnn/","text":"\u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u00b6","title":"4. \u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"ai/rnn/#_1","text":"","title":"\u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"ai/sjsl/","text":"\u968f\u673a\u68ee\u6797\u6982\u8ff0 \u00b6 \u51b3\u7b56\u6811 \u00b6 \u5355\u9897\u51b3\u7b56\u6811\u7684\u52a3\u52bf \u00b6 \u6709\u65f6\u5019\u5355\u68f5\u51b3\u7b56\u6811\u53ef\u80fd\u96be\u4ee5\u5b9e\u73b0\u8f83\u9ad8\u7684\u51c6\u786e\u7387\uff0c\u8fd9\u4e3b\u8981\u662f\u7531\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u51b3\u5b9a\u7684\uff1a \u6c42\u89e3\u4e00\u68f5\u6700\u4f18\uff08\u6cdb\u5316\u8bef\u5dee\u6700\u5c0f\uff09\u7684\u51b3\u7b56\u6811\u662f\u4e00\u4e2aNP\u96be\uff08\u65e0\u6cd5\u7a77\u6781\u6240\u6709\u53ef\u80fd\u7684\u6811\u7ed3\u6784\uff09\u95ee\u9898\uff0c\u5f80\u5f80\u5f97\u5230\u7684\u662f\u5c40\u90e8\u6700\u4f18\u89e3; \u5355\u68f5\u6811\u6784\u5efa\u7684\u6a21\u578b\u5f80\u5f80\u4e0d\u591f\u7a33\u5b9a\uff0c\u6837\u672c\u53d8\u52a8\u5f88\u5bb9\u6613\u5f15\u8d77\u6811\u7ed3\u6784\u7684\u53d8\u52a8; \u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\u9664\u5212\u5206\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\u5916\u4f9d\u8d56\u4e8e\u526a\u679d\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u95ee\u9898\u7684\u5b58\u5728,\u6211\u4eec\u5c06\u5b66\u4e60\u53e6\u5916\u4e00\u79cd\u66f4\u5148\u8fdb\u7684\u7b97\u6cd5-\u968f\u673a\u68ee\u6797\u3002 \u968f\u673a\u68ee\u6797 \u00b6 \u4ecb\u7ecd \u00b6 \u5982\u679c\u6211\u4eec\u63a5\u89e6\u8fc7\u51b3\u7b56\u6811\uff08Decision Tree\uff09\u7684\u8bdd\uff0c\u90a3\u4e48\u4f1a\u5f88\u5bb9\u6613\u7406\u89e3\u4ec0\u4e48\u662f\u968f\u673a\u68ee\u6797\u3002\u968f\u673a\u68ee\u6797\u5c31\u662f\u901a\u8fc7 \u96c6\u6210\u5b66\u4e60 \u7684\u601d\u60f3\u5c06\u591a\u68f5\u6811\u96c6\u6210\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u5b83\u7684\u57fa\u672c\u5355\u5143\u662f\u51b3\u7b56\u6811\uff0c\u800c\u5b83\u7684\u672c\u8d28\u5c5e\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u4e00\u5927\u5206\u652f\u2014\u2014\u96c6\u6210\u5b66\u4e60\uff08Ensemble Learning\uff09\u65b9\u6cd5\u3002\u968f\u673a\u68ee\u6797\u7684\u540d\u79f0\u4e2d\u6709\u4e24\u4e2a\u5173\u952e\u8bcd\uff0c\u4e00\u4e2a\u662f\u201c\u968f\u673a\u201d\uff0c\u4e00\u4e2a\u5c31\u662f\u201c\u68ee\u6797\u201d\u3002\u201c\u68ee\u6797\u201d\u6211\u4eec\u5f88\u597d\u7406\u89e3\uff0c\u4e00\u68f5\u53eb\u505a\u6811\uff0c\u90a3\u4e48\u6210\u767e\u4e0a\u5343\u68f5\u5c31\u53ef\u4ee5\u53eb\u505a\u68ee\u6797\u4e86\uff0c\u8fd9\u6837\u7684\u6bd4\u55bb\u8fd8\u662f\u5f88\u8d34\u5207\u7684\uff0c\u5176\u5b9e\u8fd9\u4e5f\u662f\u968f\u673a\u68ee\u6797\u7684\u4e3b\u8981\u601d\u60f3--\u96c6\u6210\u601d\u60f3\u7684\u4f53\u73b0\u3002\u201c\u968f\u673a\u201d\u7684\u542b\u4e49\u6211\u4eec\u4f1a\u5728\u4e0b\u8fb9\u90e8\u5206\u8bb2\u5230\u3002 \u5176\u5b9e\u4ece\u76f4\u89c2\u89d2\u5ea6\u6765\u89e3\u91ca\uff0c\u6bcf\u68f5\u51b3\u7b56\u6811\u90fd\u662f\u4e00\u4e2a\u5206\u7c7b\u5668\uff08\u5047\u8bbe\u73b0\u5728\u9488\u5bf9\u7684\u662f\u5206\u7c7b\u95ee\u9898\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8f93\u5165\u6837\u672c\uff0cN\u68f5\u6811\u4f1a\u6709N\u4e2a\u5206\u7c7b\u7ed3\u679c\u3002\u800c\u968f\u673a\u68ee\u6797\u96c6\u6210\u4e86\u6240\u6709\u7684\u5206\u7c7b\u6295\u7968\u7ed3\u679c\uff0c\u5c06\u6295\u7968\u6b21\u6570\u6700\u591a\u7684\u7c7b\u522b\u6307\u5b9a\u4e3a\u6700\u7ec8\u7684\u8f93\u51fa\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684 Bagging \u601d\u60f3\u3002 \u76f8\u5173\u77e5\u8bc6 \u00b6 \u968f\u673a\u68ee\u6797\u770b\u8d77\u6765\u662f\u5f88\u597d\u7406\u89e3\uff0c\u4f46\u662f\u8981\u5b8c\u5168\u641e\u660e\u767d\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u9700\u8981\u5f88\u591a\u673a\u5668\u5b66\u4e60\u65b9\u9762\u76f8\u5173\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u7b80\u5355\u8c08\u4e00\u4e0b\uff0c\u800c\u4e0d\u9010\u4e00\u8fdb\u884c\u8d58\u8ff0\uff0c\u5982\u679c\u6709\u4eba\u4e0d\u592a\u4e86\u89e3\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u9605\u5176\u4ed6\u535a\u53cb\u7684\u4e00\u4e9b\u76f8\u5173\u535a\u6587\u6216\u8005\u6587\u732e\u3002 1\uff09\u4fe1\u606f\u3001\u71b5\u4ee5\u53ca\u4fe1\u606f\u589e\u76ca\u7684\u6982\u5ff5 \u8fd9\u4e09\u4e2a\u57fa\u672c\u6982\u5ff5\u662f\u51b3\u7b56\u6811\u7684\u6839\u672c\uff0c\u662f\u51b3\u7b56\u6811\u5229\u7528\u7279\u5f81\u6765\u5206\u7c7b\u65f6\uff0c\u786e\u5b9a\u7279\u5f81\u9009\u53d6\u987a\u5e8f\u7684\u4f9d\u636e\u3002\u7406\u89e3\u4e86\u5b83\u4eec\uff0c\u51b3\u7b56\u6811\u4f60\u4e5f\u5c31\u4e86\u89e3\u4e86\u5927\u6982\u3002 \u5f15\u7528\u9999\u519c\u7684\u8bdd\u6765\u8bf4\uff0c\u4fe1\u606f\u662f\u7528\u6765\u6d88\u9664\u968f\u673a\u4e0d\u786e\u5b9a\u6027\u7684\u4e1c\u897f\u3002\u5f53\u7136\u8fd9\u53e5\u8bdd\u867d\u7136\u7ecf\u5178\uff0c\u4f46\u662f\u8fd8\u662f\u5f88\u96be\u53bb\u641e\u660e\u767d\u8fd9\u79cd\u4e1c\u897f\u5230\u5e95\u662f\u4e2a\u4ec0\u4e48\u6837\uff0c\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u5730\u65b9\u6765\u8bf4\uff0c\u6307\u7684\u4e1c\u897f\u53c8\u4e0d\u4e00\u6837\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u51b3\u7b56\u6811\u800c\u8a00\uff0c\u5982\u679c\u5e26\u5206\u7c7b\u7684\u4e8b\u7269\u96c6\u5408\u53ef\u4ee5\u5212\u5206\u4e3a\u591a\u4e2a\u7c7b\u522b\u5f53\u4e2d\uff0c\u5219\u67d0\u4e2a\u7c7b\uff08xi\uff09\u7684\u4fe1\u606f\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b: I(x)\u7528\u6765\u8868\u793a\u968f\u673a\u53d8\u91cf\u7684\u4fe1\u606f\uff0cp(xi)\u6307\u662f\u5f53xi\u53d1\u751f\u65f6\u7684\u6982\u7387\u3002 \u71b5\u662f\u7528\u6765\u5ea6\u91cf\u4e0d\u786e\u5b9a\u6027\u7684\uff0c\u5f53\u71b5\u8d8a\u5927\uff0cX=xi\u7684\u4e0d\u786e\u5b9a\u6027\u8d8a\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u5206\u7c7b\u95ee\u9898\u800c\u8a00\uff0c\u71b5\u8d8a\u5927\u5373\u8fd9\u4e2a\u7c7b\u522b\u7684\u4e0d\u786e\u5b9a\u6027\u66f4\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002 \u4fe1\u606f\u589e\u76ca\u5728\u51b3\u7b56\u6811\u7b97\u6cd5\u4e2d\u662f\u7528\u6765\u9009\u62e9\u7279\u5f81\u7684\u6307\u6807\uff0c\u4fe1\u606f\u589e\u76ca\u8d8a\u5927\uff0c\u5219\u8fd9\u4e2a\u7279\u5f81\u7684\u9009\u62e9\u6027\u8d8a\u597d\u3002 \u8fd9\u65b9\u9762\u7684\u5185\u5bb9\u4e0d\u518d\u7ec6\u8ff0\uff0c\u611f\u5174\u8da3\u7684\u4eba\u53ef\u4ee5\u770b \u4fe1\u606f&\u71b5&\u4fe1\u606f\u589e\u76ca \u8fd9\u7bc7\u535a\u6587\u3002 2\uff09\u51b3\u7b56\u6811 \u51b3\u7b56\u6811\u662f\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u5c5e\u6027\u4e0a\u7684\u6d4b\u8bd5\uff0c\u6bcf\u4e2a\u5206\u652f\u4ee3\u8868\u4e00\u4e2a\u6d4b\u8bd5\u8f93\u51fa\uff0c\u6bcf\u4e2a\u53f6\u8282\u70b9\u4ee3\u8868\u4e00\u79cd\u7c7b\u522b\u3002\u5e38\u89c1\u7684\u51b3\u7b56\u6811\u7b97\u6cd5\u6709C4.5\u3001ID3\u548cCART\u3002 3\uff09\u96c6\u6210\u5b66\u4e60\u3000 \u96c6\u6210\u5b66\u4e60\u901a\u8fc7\u5efa\u7acb\u51e0\u4e2a\u6a21\u578b\u7ec4\u5408\u7684\u6765\u89e3\u51b3\u5355\u4e00\u9884\u6d4b\u95ee\u9898\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u751f\u6210\u591a\u4e2a\u5206\u7c7b\u5668/\u6a21\u578b\uff0c\u5404\u81ea\u72ec\u7acb\u5730\u5b66\u4e60\u548c\u4f5c\u51fa\u9884\u6d4b\u3002\u8fd9\u4e9b\u9884\u6d4b\u6700\u540e\u7ed3\u5408\u6210\u5355\u9884\u6d4b\uff0c\u56e0\u6b64\u4f18\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5355\u5206\u7c7b\u7684\u505a\u51fa\u9884\u6d4b\u3002 \u968f\u673a\u68ee\u6797\u662f\u96c6\u6210\u5b66\u4e60\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u4f9d\u9760\u4e8e\u51b3\u7b56\u6811\u7684\u6295\u7968\u9009\u62e9\u6765\u51b3\u5b9a\u6700\u540e\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u627e\u5230\u7528python\u5b9e\u73b0\u96c6\u6210\u5b66\u4e60\u7684\u6587\u6863\uff1a Scikit\u82f1\u6587\u5b66\u4e60\u6587\u6863 \u3002 \u7b97\u6cd5\u6b65\u9aa4 \u00b6 \u524d\u9762\u63d0\u5230\uff0c\u968f\u673a\u68ee\u6797\u4e2d\u6709\u8bb8\u591a\u7684\u5206\u7c7b\u6811\u3002\u6211\u4eec\u8981\u5c06\u4e00\u4e2a\u8f93\u5165\u6837\u672c\u8fdb\u884c\u5206\u7c7b\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8f93\u5165\u6837\u672c\u8f93\u5165\u5230\u6bcf\u68f5\u6811\u4e2d\u8fdb\u884c\u5206\u7c7b\u3002\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff1a\u68ee\u6797\u4e2d\u53ec\u5f00\u4f1a\u8bae\uff0c\u8ba8\u8bba\u67d0\u4e2a\u52a8\u7269\u5230\u5e95\u662f\u8001\u9f20\u8fd8\u662f\u677e\u9f20\uff0c\u6bcf\u68f5\u6811\u90fd\u8981\u72ec\u7acb\u5730\u53d1\u8868\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u770b\u6cd5\uff0c\u4e5f\u5c31\u662f\u6bcf\u68f5\u6811\u90fd\u8981\u6295\u7968\u3002\u8be5\u52a8\u7269\u5230\u5e95\u662f\u8001\u9f20\u8fd8\u662f\u677e\u9f20\uff0c\u8981\u4f9d\u636e\u6295\u7968\u60c5\u51b5\u6765\u786e\u5b9a\uff0c\u83b7\u5f97\u7968\u6570\u6700\u591a\u7684\u7c7b\u522b\u5c31\u662f\u68ee\u6797\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u68ee\u6797\u4e2d\u7684\u6bcf\u68f5\u6811\u90fd\u662f\u72ec\u7acb\u7684\uff0c99.9%\u4e0d\u76f8\u5173\u7684\u6811\u505a\u51fa\u7684\u9884\u6d4b\u7ed3\u679c\u6db5\u76d6\u6240\u6709\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u9884\u6d4b\u7ed3\u679c\u5c06\u4f1a\u5f7c\u6b64\u62b5\u6d88\u3002\u5c11\u6570\u4f18\u79c0\u7684\u6811\u7684\u9884\u6d4b\u7ed3\u679c\u5c06\u4f1a\u8d85\u8131\u4e8e\u82b8\u82b8\u201c\u566a\u97f3\u201d\uff0c\u505a\u51fa\u4e00\u4e2a\u597d\u7684\u9884\u6d4b\u3002\u5c06\u82e5\u5e72\u4e2a\u5f31\u5206\u7c7b\u5668\u7684\u5206\u7c7b\u7ed3\u679c\u8fdb\u884c\u6295\u7968\u9009\u62e9\uff0c\u4ece\u800c\u7ec4\u6210\u4e00\u4e2a\u5f3a\u5206\u7c7b\u5668\uff0c\u8fd9\u5c31\u662f\u968f\u673a\u68ee\u6797bagging\u7684\u601d\u60f3\uff08\u5173\u4e8ebagging\u7684\u4e00\u4e2a\u6709\u5fc5\u8981\u63d0\u53ca\u7684\u95ee\u9898\uff1abagging\u7684\u4ee3\u4ef7\u662f\u4e0d\u7528\u5355\u68f5\u51b3\u7b56\u6811\u6765\u505a\u9884\u6d4b\uff0c\u5177\u4f53\u54ea\u4e2a\u53d8\u91cf\u8d77\u5230\u91cd\u8981\u4f5c\u7528\u53d8\u5f97\u672a\u77e5\uff0c\u6240\u4ee5bagging\u6539\u8fdb\u4e86\u9884\u6d4b\u51c6\u786e\u7387\u4f46\u635f\u5931\u4e86\u89e3\u91ca\u6027\u3002\uff09\u3002\u4e0b\u56fe\u53ef\u4ee5\u5f62\u8c61\u5730\u63cf\u8ff0\u8fd9\u4e2a\u60c5\u51b5\uff1a \u6709\u4e86\u6811\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u7c7b\u4e86\uff0c\u4f46\u662f\u68ee\u6797\u4e2d\u7684\u6bcf\u68f5\u6811\u662f\u600e\u4e48\u751f\u6210\u7684\u5462\uff1f \u6bcf\u68f5\u6811\u6309\u7167\u5982\u4e0b\u89c4\u5219\u751f\u6210\uff1a 1\uff09\u5982\u679c\u8bad\u7ec3\u96c6\u5927\u5c0f\u4e3aN\uff0c\u5bf9\u4e8e\u6bcf\u68f5\u6811\u800c\u8a00\uff0c \u968f\u673a\u4e14\u6709\u653e\u56de \u5730\u4ece\u8bad\u7ec3\u96c6\u4e2d\u7684\u62bd\u53d6N\u4e2a\u8bad\u7ec3\u6837\u672c\uff08\u8fd9\u79cd\u91c7\u6837\u65b9\u5f0f\u79f0\u4e3abootstrap sample\u65b9\u6cd5\uff09\uff0c\u4f5c\u4e3a\u8be5\u6811\u7684\u8bad\u7ec3\u96c6\uff1b \u4ece\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff1a\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u96c6\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u800c\u4e14\u91cc\u9762\u5305\u542b\u91cd\u590d\u7684\u8bad\u7ec3\u6837\u672c\uff08\u7406\u89e3\u8fd9\u70b9\u5f88\u91cd\u8981\uff09\u3002 \u4e3a\u4ec0\u4e48\u8981\u968f\u673a\u62bd\u6837\u8bad\u7ec3\u96c6\uff1f \u5982\u679c\u4e0d\u8fdb\u884c\u968f\u673a\u62bd\u6837\uff0c\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u96c6\u90fd\u4e00\u6837\uff0c\u90a3\u4e48\u6700\u7ec8\u8bad\u7ec3\u51fa\u7684\u6811\u5206\u7c7b\u7ed3\u679c\u4e5f\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u5b8c\u5168\u6ca1\u6709bagging\u7684\u5fc5\u8981\uff1b \u4e3a\u4ec0\u4e48\u8981\u6709\u653e\u56de\u5730\u62bd\u6837\uff1f \u6211\u7406\u89e3\u7684\u662f\u8fd9\u6837\u7684\uff1a\u5982\u679c\u4e0d\u662f\u6709\u653e\u56de\u7684\u62bd\u6837\uff0c\u90a3\u4e48\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u6837\u672c\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u90fd\u662f\u6ca1\u6709\u4ea4\u96c6\u7684\uff0c\u8fd9\u6837\u6bcf\u68f5\u6811\u90fd\u662f\"\u6709\u504f\u7684\"\uff0c\u90fd\u662f\u7edd\u5bf9\"\u7247\u9762\u7684\"\uff08\u5f53\u7136\u8fd9\u6837\u8bf4\u53ef\u80fd\u4e0d\u5bf9\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u68f5\u6811\u8bad\u7ec3\u51fa\u6765\u90fd\u662f\u6709\u5f88\u5927\u7684\u5dee\u5f02\u7684\uff1b\u800c\u968f\u673a\u68ee\u6797\u6700\u540e\u5206\u7c7b\u53d6\u51b3\u4e8e\u591a\u68f5\u6811\uff08\u5f31\u5206\u7c7b\u5668\uff09\u7684\u6295\u7968\u8868\u51b3\uff0c\u8fd9\u79cd\u8868\u51b3\u5e94\u8be5\u662f\"\u6c42\u540c\"\uff0c\u56e0\u6b64\u4f7f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u8bad\u7ec3\u96c6\u6765\u8bad\u7ec3\u6bcf\u68f5\u6811\u8fd9\u6837\u5bf9\u6700\u7ec8\u5206\u7c7b\u7ed3\u679c\u662f\u6ca1\u6709\u5e2e\u52a9\u7684\uff0c\u8fd9\u6837\u65e0\u5f02\u4e8e\u662f\"\u76f2\u4eba\u6478\u8c61\"\u3002 2\uff09\u5982\u679c\u6bcf\u4e2a\u6837\u672c\u7684\u7279\u5f81\u7ef4\u5ea6\u4e3aM\uff0c\u6307\u5b9a\u4e00\u4e2a\u5e38\u6570 m<<M \uff0c\u968f\u673a\u5730\u4eceM\u4e2a\u7279\u5f81\u4e2d\u9009\u53d6m\u4e2a\u7279\u5f81\u5b50\u96c6\uff0c\u6bcf\u6b21\u6811\u8fdb\u884c\u5206\u88c2\u65f6\uff0c\u4ece\u8fd9m\u4e2a\u7279\u5f81\u4e2d\u9009\u62e9\u6700\u4f18\u7684\uff1b 3\uff09\u6bcf\u68f5\u6811\u90fd\u5c3d\u6700\u5927\u7a0b\u5ea6\u7684\u751f\u957f\uff0c\u5e76\u4e14\u6ca1\u6709\u526a\u679d\u8fc7\u7a0b\u3002 \u4e00\u5f00\u59cb\u6211\u4eec\u63d0\u5230\u7684\u968f\u673a\u68ee\u6797\u4e2d\u7684\u201c\u968f\u673a\u201d\u5c31\u662f\u6307\u7684\u8fd9\u91cc\u7684\u4e24\u4e2a\u968f\u673a\u6027\u3002\u4e24\u4e2a\u968f\u673a\u6027\u7684\u5f15\u5165\u5bf9\u968f\u673a\u68ee\u6797\u7684\u5206\u7c7b\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002\u7531\u4e8e\u5b83\u4eec\u7684\u5f15\u5165\uff0c\u4f7f\u5f97\u968f\u673a\u68ee\u6797\u4e0d\u5bb9\u6613\u9677\u5165\u8fc7\u62df\u5408\uff0c\u5e76\u4e14\u5177\u6709\u5f88\u597d\u5f97\u6297\u566a\u80fd\u529b\uff08\u6bd4\u5982\uff1a\u5bf9\u7f3a\u7701\u503c\u4e0d\u654f\u611f\uff09\u3002 \u968f\u673a\u68ee\u6797\u5206\u7c7b\u6548\u679c\uff08\u9519\u8bef\u7387\uff09\u4e0e\u4e24\u4e2a\u56e0\u7d20\u6709\u5173\uff1a \u68ee\u6797\u4e2d\u4efb\u610f\u4e24\u68f5\u6811\u7684\u76f8\u5173\u6027\uff1a\u76f8\u5173\u6027\u8d8a\u5927\uff0c\u9519\u8bef\u7387\u8d8a\u5927\uff1b \u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u5206\u7c7b\u80fd\u529b\uff1a\u6bcf\u68f5\u6811\u7684\u5206\u7c7b\u80fd\u529b\u8d8a\u5f3a\uff0c\u6574\u4e2a\u68ee\u6797\u7684\u9519\u8bef\u7387\u8d8a\u4f4e\u3002 \u51cf\u5c0f\u7279\u5f81\u9009\u62e9\u4e2a\u6570m\uff0c\u6811\u7684\u76f8\u5173\u6027\u548c\u5206\u7c7b\u80fd\u529b\u4e5f\u4f1a\u76f8\u5e94\u7684\u964d\u4f4e\uff1b\u589e\u5927m\uff0c\u4e24\u8005\u4e5f\u4f1a\u968f\u4e4b\u589e\u5927\u3002\u6240\u4ee5\u5173\u952e\u95ee\u9898\u662f\u5982\u4f55\u9009\u62e9 \u6700\u4f18\u7684m\uff08\u6216\u8005\u662f\u8303\u56f4\uff09 \uff0c\u8fd9\u4e5f\u662f\u968f\u673a\u68ee\u6797\u552f\u4e00\u7684\u4e00\u4e2a\u53c2\u6570\u3002 \u888b\u5916\u9519\u8bef\u7387\uff08oob error\uff09 \u00b6 \u4e0a\u9762\u6211\u4eec\u63d0\u5230\uff0c\u6784\u5efa\u968f\u673a\u68ee\u6797\u7684\u5173\u952e\u95ee\u9898\u5c31\u662f\u5982\u4f55\u9009\u62e9\u6700\u4f18\u7684m\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u4f9d\u636e\u8ba1\u7b97\u888b\u5916\u9519\u8bef\u7387oob error\uff08out-of-bag error\uff09\u3002 \u968f\u673a\u68ee\u6797\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u4f18\u70b9\u5c31\u662f\uff0c\u6ca1\u6709\u5fc5\u8981\u5bf9\u5b83\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u6216\u8005\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u96c6\u6765\u83b7\u5f97\u8bef\u5dee\u7684\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\u3002\u5b83\u53ef\u4ee5\u5728\u5185\u90e8\u8fdb\u884c\u8bc4\u4f30\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u751f\u6210\u7684\u8fc7\u7a0b\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u8bef\u5dee\u5efa\u7acb\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\u3002 \u6211\u4eec\u77e5\u9053\uff0c\u5728\u6784\u5efa\u6bcf\u68f5\u6811\u65f6\uff0c\u6211\u4eec\u5bf9\u8bad\u7ec3\u96c6\u4f7f\u7528\u4e86\u4e0d\u540c\u7684bootstrap sample\uff08\u968f\u673a\u4e14\u6709\u653e\u56de\u5730\u62bd\u53d6\uff09\u3002\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u68f5\u6811\u800c\u8a00\uff08\u5047\u8bbe\u5bf9\u4e8e\u7b2ck\u68f5\u6811\uff09\uff0c\u5927\u7ea6\u6709\u2153\u7684\u8bad\u7ec3\u5b9e\u4f8b\u6ca1\u6709\u53c2\u4e0e\u7b2ck\u68f5\u6811\u7684\u751f\u6210\uff0c\u5b83\u4eec\u79f0\u4e3a\u7b2ck\u68f5\u6811\u7684oob\u6837\u672c\u3002 \u800c\u8fd9\u6837\u7684\u91c7\u6837\u7279\u70b9\u5c31\u5141\u8bb8\u6211\u4eec\u8fdb\u884coob\u4f30\u8ba1\uff0c\u5b83\u7684\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff1a \uff08note\uff1a\u4ee5\u6837\u672c\u4e3a\u5355\u4f4d\uff09 1 2 3 4 5 1\uff09\u5bf9\u6bcf\u4e2a\u6837\u672c\uff0c\u8ba1\u7b97\u5b83\u4f5c\u4e3aoob\u6837\u672c\u7684\u6811\u5bf9\u5b83\u7684\u5206\u7c7b\u60c5\u51b5\uff08\u7ea61/3\u7684\u6811\uff09\uff1b 2\uff09\u7136\u540e\u4ee5\u7b80\u5355\u591a\u6570\u6295\u7968\u4f5c\u4e3a\u8be5\u6837\u672c\u7684\u5206\u7c7b\u7ed3\u679c\uff1b 3\uff09\u6700\u540e\u7528\u8bef\u5206\u4e2a\u6570\u5360\u6837\u672c\u603b\u6570\u7684\u6bd4\u7387\u4f5c\u4e3a\u968f\u673a\u68ee\u6797\u7684oob\u8bef\u5206\u7387\u3002 oob\u8bef\u5206\u7387\u662f\u968f\u673a\u68ee\u6797\u6cdb\u5316\u8bef\u5dee\u7684\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\uff0c\u5b83\u7684\u7ed3\u679c\u8fd1\u4f3c\u4e8e\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u7684k\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002 \u4f18\u7f3a\u70b9 \u00b6 \u4f18\u70b9 \u00b6 1) \u8bad\u7ec3\u53ef\u4ee5\u9ad8\u5ea6\u5e76\u884c\u5316\uff0c\u5bf9\u4e8e\u5927\u6570\u636e\u65f6\u4ee3\u7684\u5927\u6837\u672c\u8bad\u7ec3\u901f\u5ea6\u6709\u4f18\u52bf\u3002 2) \u7531\u4e8e\u53ef\u4ee5\u968f\u673a\u9009\u62e9\u51b3\u7b56\u6811\u8282\u70b9\u5212\u5206\u7279\u5f81\uff0c\u8fd9\u6837\u5728\u6837\u672c\u7279\u5f81\u7ef4\u5ea6\u5f88\u9ad8\u7684\u65f6\u5019\uff0c\u4ecd\u7136\u80fd\u9ad8\u6548\u7684\u8bad\u7ec3\u6a21\u578b\u3002 3) \u5728\u8bad\u7ec3\u540e\uff0c\u53ef\u4ee5\u7ed9\u51fa\u5404\u4e2a\u7279\u5f81\u5bf9\u4e8e\u8f93\u51fa\u7684\u91cd\u8981\u6027 4) \u7531\u4e8e\u91c7\u7528\u4e86\u968f\u673a\u91c7\u6837\uff0c\u8bad\u7ec3\u51fa\u7684\u6a21\u578b\u7684\u65b9\u5dee\u5c0f\uff0c\u6cdb\u5316\u80fd\u529b\u5f3a\u3002 5) \u76f8\u5bf9\u4e8eBoosting\u7cfb\u5217\u7684Adaboost\u548cGBDT\uff0c RF\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\u3002 6) \u5bf9\u90e8\u5206\u7279\u5f81\u7f3a\u5931\u4e0d\u654f\u611f\u3002 7) \u5bf9\u6570\u636e\u96c6\u7684\u9002\u5e94\u80fd\u529b\u5f3a\uff1a\u65e2\u80fd\u5904\u7406\u79bb\u6563\u578b\u6570\u636e\uff0c\u4e5f\u80fd\u5904\u7406\u8fde\u7eed\u578b\u6570\u636e\uff0c\u6570\u636e\u96c6\u65e0\u9700\u89c4\u8303\u5316 8) \u5728\u521b\u5efa\u968f\u673a\u68ee\u6797\u7684\u65f6\u5019\uff0c\u5bf9generlization error\u4f7f\u7528\u7684\u662f\u65e0\u504f\u4f30\u8ba1 9) \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u80fd\u591f\u68c0\u6d4b\u5230feature\u95f4\u7684\u4e92\u76f8\u5f71\u54cd \u7f3a\u70b9 \u00b6 1) \u5728\u67d0\u4e9b\u566a\u97f3\u6bd4\u8f83\u5927\u7684\u6837\u672c\u96c6\u4e0a\uff0cRF\u6a21\u578b\u5bb9\u6613\u9677\u5165\u8fc7\u62df\u5408\u3002 2) \u53d6\u503c\u5212\u5206\u6bd4\u8f83\u591a\u7684\u7279\u5f81\u5bb9\u6613\u5bf9RF\u7684\u51b3\u7b56\u4ea7\u751f\u66f4\u5927\u7684\u5f71\u54cd\uff0c\u4ece\u800c\u5f71\u54cd\u62df\u5408\u7684\u6a21\u578b\u7684\u6548\u679c\u3002 \u7b80\u5355\u4f8b\u5b50 \u00b6 \u4f8b\u5b50\u4e3a\u622a\u56fe,\u8bf7\u62d6\u52a8\u653e\u5927\u89c2\u770b~","title":"9. \u968f\u673a\u68ee\u6797"},{"location":"ai/sjsl/#_1","text":"","title":"\u968f\u673a\u68ee\u6797\u6982\u8ff0"},{"location":"ai/sjsl/#_2","text":"","title":"\u51b3\u7b56\u6811"},{"location":"ai/sjsl/#_3","text":"\u6709\u65f6\u5019\u5355\u68f5\u51b3\u7b56\u6811\u53ef\u80fd\u96be\u4ee5\u5b9e\u73b0\u8f83\u9ad8\u7684\u51c6\u786e\u7387\uff0c\u8fd9\u4e3b\u8981\u662f\u7531\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u51b3\u5b9a\u7684\uff1a \u6c42\u89e3\u4e00\u68f5\u6700\u4f18\uff08\u6cdb\u5316\u8bef\u5dee\u6700\u5c0f\uff09\u7684\u51b3\u7b56\u6811\u662f\u4e00\u4e2aNP\u96be\uff08\u65e0\u6cd5\u7a77\u6781\u6240\u6709\u53ef\u80fd\u7684\u6811\u7ed3\u6784\uff09\u95ee\u9898\uff0c\u5f80\u5f80\u5f97\u5230\u7684\u662f\u5c40\u90e8\u6700\u4f18\u89e3; \u5355\u68f5\u6811\u6784\u5efa\u7684\u6a21\u578b\u5f80\u5f80\u4e0d\u591f\u7a33\u5b9a\uff0c\u6837\u672c\u53d8\u52a8\u5f88\u5bb9\u6613\u5f15\u8d77\u6811\u7ed3\u6784\u7684\u53d8\u52a8; \u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\u9664\u5212\u5206\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\u5916\u4f9d\u8d56\u4e8e\u526a\u679d\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u95ee\u9898\u7684\u5b58\u5728,\u6211\u4eec\u5c06\u5b66\u4e60\u53e6\u5916\u4e00\u79cd\u66f4\u5148\u8fdb\u7684\u7b97\u6cd5-\u968f\u673a\u68ee\u6797\u3002","title":"\u5355\u9897\u51b3\u7b56\u6811\u7684\u52a3\u52bf"},{"location":"ai/sjsl/#_4","text":"","title":"\u968f\u673a\u68ee\u6797"},{"location":"ai/sjsl/#_5","text":"\u5982\u679c\u6211\u4eec\u63a5\u89e6\u8fc7\u51b3\u7b56\u6811\uff08Decision Tree\uff09\u7684\u8bdd\uff0c\u90a3\u4e48\u4f1a\u5f88\u5bb9\u6613\u7406\u89e3\u4ec0\u4e48\u662f\u968f\u673a\u68ee\u6797\u3002\u968f\u673a\u68ee\u6797\u5c31\u662f\u901a\u8fc7 \u96c6\u6210\u5b66\u4e60 \u7684\u601d\u60f3\u5c06\u591a\u68f5\u6811\u96c6\u6210\u7684\u4e00\u79cd\u7b97\u6cd5\uff0c\u5b83\u7684\u57fa\u672c\u5355\u5143\u662f\u51b3\u7b56\u6811\uff0c\u800c\u5b83\u7684\u672c\u8d28\u5c5e\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u4e00\u5927\u5206\u652f\u2014\u2014\u96c6\u6210\u5b66\u4e60\uff08Ensemble Learning\uff09\u65b9\u6cd5\u3002\u968f\u673a\u68ee\u6797\u7684\u540d\u79f0\u4e2d\u6709\u4e24\u4e2a\u5173\u952e\u8bcd\uff0c\u4e00\u4e2a\u662f\u201c\u968f\u673a\u201d\uff0c\u4e00\u4e2a\u5c31\u662f\u201c\u68ee\u6797\u201d\u3002\u201c\u68ee\u6797\u201d\u6211\u4eec\u5f88\u597d\u7406\u89e3\uff0c\u4e00\u68f5\u53eb\u505a\u6811\uff0c\u90a3\u4e48\u6210\u767e\u4e0a\u5343\u68f5\u5c31\u53ef\u4ee5\u53eb\u505a\u68ee\u6797\u4e86\uff0c\u8fd9\u6837\u7684\u6bd4\u55bb\u8fd8\u662f\u5f88\u8d34\u5207\u7684\uff0c\u5176\u5b9e\u8fd9\u4e5f\u662f\u968f\u673a\u68ee\u6797\u7684\u4e3b\u8981\u601d\u60f3--\u96c6\u6210\u601d\u60f3\u7684\u4f53\u73b0\u3002\u201c\u968f\u673a\u201d\u7684\u542b\u4e49\u6211\u4eec\u4f1a\u5728\u4e0b\u8fb9\u90e8\u5206\u8bb2\u5230\u3002 \u5176\u5b9e\u4ece\u76f4\u89c2\u89d2\u5ea6\u6765\u89e3\u91ca\uff0c\u6bcf\u68f5\u51b3\u7b56\u6811\u90fd\u662f\u4e00\u4e2a\u5206\u7c7b\u5668\uff08\u5047\u8bbe\u73b0\u5728\u9488\u5bf9\u7684\u662f\u5206\u7c7b\u95ee\u9898\uff09\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8f93\u5165\u6837\u672c\uff0cN\u68f5\u6811\u4f1a\u6709N\u4e2a\u5206\u7c7b\u7ed3\u679c\u3002\u800c\u968f\u673a\u68ee\u6797\u96c6\u6210\u4e86\u6240\u6709\u7684\u5206\u7c7b\u6295\u7968\u7ed3\u679c\uff0c\u5c06\u6295\u7968\u6b21\u6570\u6700\u591a\u7684\u7c7b\u522b\u6307\u5b9a\u4e3a\u6700\u7ec8\u7684\u8f93\u51fa\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684 Bagging \u601d\u60f3\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/sjsl/#_6","text":"\u968f\u673a\u68ee\u6797\u770b\u8d77\u6765\u662f\u5f88\u597d\u7406\u89e3\uff0c\u4f46\u662f\u8981\u5b8c\u5168\u641e\u660e\u767d\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u9700\u8981\u5f88\u591a\u673a\u5668\u5b66\u4e60\u65b9\u9762\u76f8\u5173\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u7b80\u5355\u8c08\u4e00\u4e0b\uff0c\u800c\u4e0d\u9010\u4e00\u8fdb\u884c\u8d58\u8ff0\uff0c\u5982\u679c\u6709\u4eba\u4e0d\u592a\u4e86\u89e3\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u9605\u5176\u4ed6\u535a\u53cb\u7684\u4e00\u4e9b\u76f8\u5173\u535a\u6587\u6216\u8005\u6587\u732e\u3002 1\uff09\u4fe1\u606f\u3001\u71b5\u4ee5\u53ca\u4fe1\u606f\u589e\u76ca\u7684\u6982\u5ff5 \u8fd9\u4e09\u4e2a\u57fa\u672c\u6982\u5ff5\u662f\u51b3\u7b56\u6811\u7684\u6839\u672c\uff0c\u662f\u51b3\u7b56\u6811\u5229\u7528\u7279\u5f81\u6765\u5206\u7c7b\u65f6\uff0c\u786e\u5b9a\u7279\u5f81\u9009\u53d6\u987a\u5e8f\u7684\u4f9d\u636e\u3002\u7406\u89e3\u4e86\u5b83\u4eec\uff0c\u51b3\u7b56\u6811\u4f60\u4e5f\u5c31\u4e86\u89e3\u4e86\u5927\u6982\u3002 \u5f15\u7528\u9999\u519c\u7684\u8bdd\u6765\u8bf4\uff0c\u4fe1\u606f\u662f\u7528\u6765\u6d88\u9664\u968f\u673a\u4e0d\u786e\u5b9a\u6027\u7684\u4e1c\u897f\u3002\u5f53\u7136\u8fd9\u53e5\u8bdd\u867d\u7136\u7ecf\u5178\uff0c\u4f46\u662f\u8fd8\u662f\u5f88\u96be\u53bb\u641e\u660e\u767d\u8fd9\u79cd\u4e1c\u897f\u5230\u5e95\u662f\u4e2a\u4ec0\u4e48\u6837\uff0c\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u5730\u65b9\u6765\u8bf4\uff0c\u6307\u7684\u4e1c\u897f\u53c8\u4e0d\u4e00\u6837\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u51b3\u7b56\u6811\u800c\u8a00\uff0c\u5982\u679c\u5e26\u5206\u7c7b\u7684\u4e8b\u7269\u96c6\u5408\u53ef\u4ee5\u5212\u5206\u4e3a\u591a\u4e2a\u7c7b\u522b\u5f53\u4e2d\uff0c\u5219\u67d0\u4e2a\u7c7b\uff08xi\uff09\u7684\u4fe1\u606f\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b: I(x)\u7528\u6765\u8868\u793a\u968f\u673a\u53d8\u91cf\u7684\u4fe1\u606f\uff0cp(xi)\u6307\u662f\u5f53xi\u53d1\u751f\u65f6\u7684\u6982\u7387\u3002 \u71b5\u662f\u7528\u6765\u5ea6\u91cf\u4e0d\u786e\u5b9a\u6027\u7684\uff0c\u5f53\u71b5\u8d8a\u5927\uff0cX=xi\u7684\u4e0d\u786e\u5b9a\u6027\u8d8a\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u5206\u7c7b\u95ee\u9898\u800c\u8a00\uff0c\u71b5\u8d8a\u5927\u5373\u8fd9\u4e2a\u7c7b\u522b\u7684\u4e0d\u786e\u5b9a\u6027\u66f4\u5927\uff0c\u53cd\u4e4b\u8d8a\u5c0f\u3002 \u4fe1\u606f\u589e\u76ca\u5728\u51b3\u7b56\u6811\u7b97\u6cd5\u4e2d\u662f\u7528\u6765\u9009\u62e9\u7279\u5f81\u7684\u6307\u6807\uff0c\u4fe1\u606f\u589e\u76ca\u8d8a\u5927\uff0c\u5219\u8fd9\u4e2a\u7279\u5f81\u7684\u9009\u62e9\u6027\u8d8a\u597d\u3002 \u8fd9\u65b9\u9762\u7684\u5185\u5bb9\u4e0d\u518d\u7ec6\u8ff0\uff0c\u611f\u5174\u8da3\u7684\u4eba\u53ef\u4ee5\u770b \u4fe1\u606f&\u71b5&\u4fe1\u606f\u589e\u76ca \u8fd9\u7bc7\u535a\u6587\u3002 2\uff09\u51b3\u7b56\u6811 \u51b3\u7b56\u6811\u662f\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u5c5e\u6027\u4e0a\u7684\u6d4b\u8bd5\uff0c\u6bcf\u4e2a\u5206\u652f\u4ee3\u8868\u4e00\u4e2a\u6d4b\u8bd5\u8f93\u51fa\uff0c\u6bcf\u4e2a\u53f6\u8282\u70b9\u4ee3\u8868\u4e00\u79cd\u7c7b\u522b\u3002\u5e38\u89c1\u7684\u51b3\u7b56\u6811\u7b97\u6cd5\u6709C4.5\u3001ID3\u548cCART\u3002 3\uff09\u96c6\u6210\u5b66\u4e60\u3000 \u96c6\u6210\u5b66\u4e60\u901a\u8fc7\u5efa\u7acb\u51e0\u4e2a\u6a21\u578b\u7ec4\u5408\u7684\u6765\u89e3\u51b3\u5355\u4e00\u9884\u6d4b\u95ee\u9898\u3002\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u751f\u6210\u591a\u4e2a\u5206\u7c7b\u5668/\u6a21\u578b\uff0c\u5404\u81ea\u72ec\u7acb\u5730\u5b66\u4e60\u548c\u4f5c\u51fa\u9884\u6d4b\u3002\u8fd9\u4e9b\u9884\u6d4b\u6700\u540e\u7ed3\u5408\u6210\u5355\u9884\u6d4b\uff0c\u56e0\u6b64\u4f18\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5355\u5206\u7c7b\u7684\u505a\u51fa\u9884\u6d4b\u3002 \u968f\u673a\u68ee\u6797\u662f\u96c6\u6210\u5b66\u4e60\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u4f9d\u9760\u4e8e\u51b3\u7b56\u6811\u7684\u6295\u7968\u9009\u62e9\u6765\u51b3\u5b9a\u6700\u540e\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u627e\u5230\u7528python\u5b9e\u73b0\u96c6\u6210\u5b66\u4e60\u7684\u6587\u6863\uff1a Scikit\u82f1\u6587\u5b66\u4e60\u6587\u6863 \u3002","title":"\u76f8\u5173\u77e5\u8bc6"},{"location":"ai/sjsl/#_7","text":"\u524d\u9762\u63d0\u5230\uff0c\u968f\u673a\u68ee\u6797\u4e2d\u6709\u8bb8\u591a\u7684\u5206\u7c7b\u6811\u3002\u6211\u4eec\u8981\u5c06\u4e00\u4e2a\u8f93\u5165\u6837\u672c\u8fdb\u884c\u5206\u7c7b\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8f93\u5165\u6837\u672c\u8f93\u5165\u5230\u6bcf\u68f5\u6811\u4e2d\u8fdb\u884c\u5206\u7c7b\u3002\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff1a\u68ee\u6797\u4e2d\u53ec\u5f00\u4f1a\u8bae\uff0c\u8ba8\u8bba\u67d0\u4e2a\u52a8\u7269\u5230\u5e95\u662f\u8001\u9f20\u8fd8\u662f\u677e\u9f20\uff0c\u6bcf\u68f5\u6811\u90fd\u8981\u72ec\u7acb\u5730\u53d1\u8868\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u770b\u6cd5\uff0c\u4e5f\u5c31\u662f\u6bcf\u68f5\u6811\u90fd\u8981\u6295\u7968\u3002\u8be5\u52a8\u7269\u5230\u5e95\u662f\u8001\u9f20\u8fd8\u662f\u677e\u9f20\uff0c\u8981\u4f9d\u636e\u6295\u7968\u60c5\u51b5\u6765\u786e\u5b9a\uff0c\u83b7\u5f97\u7968\u6570\u6700\u591a\u7684\u7c7b\u522b\u5c31\u662f\u68ee\u6797\u7684\u5206\u7c7b\u7ed3\u679c\u3002\u68ee\u6797\u4e2d\u7684\u6bcf\u68f5\u6811\u90fd\u662f\u72ec\u7acb\u7684\uff0c99.9%\u4e0d\u76f8\u5173\u7684\u6811\u505a\u51fa\u7684\u9884\u6d4b\u7ed3\u679c\u6db5\u76d6\u6240\u6709\u7684\u60c5\u51b5\uff0c\u8fd9\u4e9b\u9884\u6d4b\u7ed3\u679c\u5c06\u4f1a\u5f7c\u6b64\u62b5\u6d88\u3002\u5c11\u6570\u4f18\u79c0\u7684\u6811\u7684\u9884\u6d4b\u7ed3\u679c\u5c06\u4f1a\u8d85\u8131\u4e8e\u82b8\u82b8\u201c\u566a\u97f3\u201d\uff0c\u505a\u51fa\u4e00\u4e2a\u597d\u7684\u9884\u6d4b\u3002\u5c06\u82e5\u5e72\u4e2a\u5f31\u5206\u7c7b\u5668\u7684\u5206\u7c7b\u7ed3\u679c\u8fdb\u884c\u6295\u7968\u9009\u62e9\uff0c\u4ece\u800c\u7ec4\u6210\u4e00\u4e2a\u5f3a\u5206\u7c7b\u5668\uff0c\u8fd9\u5c31\u662f\u968f\u673a\u68ee\u6797bagging\u7684\u601d\u60f3\uff08\u5173\u4e8ebagging\u7684\u4e00\u4e2a\u6709\u5fc5\u8981\u63d0\u53ca\u7684\u95ee\u9898\uff1abagging\u7684\u4ee3\u4ef7\u662f\u4e0d\u7528\u5355\u68f5\u51b3\u7b56\u6811\u6765\u505a\u9884\u6d4b\uff0c\u5177\u4f53\u54ea\u4e2a\u53d8\u91cf\u8d77\u5230\u91cd\u8981\u4f5c\u7528\u53d8\u5f97\u672a\u77e5\uff0c\u6240\u4ee5bagging\u6539\u8fdb\u4e86\u9884\u6d4b\u51c6\u786e\u7387\u4f46\u635f\u5931\u4e86\u89e3\u91ca\u6027\u3002\uff09\u3002\u4e0b\u56fe\u53ef\u4ee5\u5f62\u8c61\u5730\u63cf\u8ff0\u8fd9\u4e2a\u60c5\u51b5\uff1a \u6709\u4e86\u6811\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u7c7b\u4e86\uff0c\u4f46\u662f\u68ee\u6797\u4e2d\u7684\u6bcf\u68f5\u6811\u662f\u600e\u4e48\u751f\u6210\u7684\u5462\uff1f \u6bcf\u68f5\u6811\u6309\u7167\u5982\u4e0b\u89c4\u5219\u751f\u6210\uff1a 1\uff09\u5982\u679c\u8bad\u7ec3\u96c6\u5927\u5c0f\u4e3aN\uff0c\u5bf9\u4e8e\u6bcf\u68f5\u6811\u800c\u8a00\uff0c \u968f\u673a\u4e14\u6709\u653e\u56de \u5730\u4ece\u8bad\u7ec3\u96c6\u4e2d\u7684\u62bd\u53d6N\u4e2a\u8bad\u7ec3\u6837\u672c\uff08\u8fd9\u79cd\u91c7\u6837\u65b9\u5f0f\u79f0\u4e3abootstrap sample\u65b9\u6cd5\uff09\uff0c\u4f5c\u4e3a\u8be5\u6811\u7684\u8bad\u7ec3\u96c6\uff1b \u4ece\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff1a\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u96c6\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u800c\u4e14\u91cc\u9762\u5305\u542b\u91cd\u590d\u7684\u8bad\u7ec3\u6837\u672c\uff08\u7406\u89e3\u8fd9\u70b9\u5f88\u91cd\u8981\uff09\u3002 \u4e3a\u4ec0\u4e48\u8981\u968f\u673a\u62bd\u6837\u8bad\u7ec3\u96c6\uff1f \u5982\u679c\u4e0d\u8fdb\u884c\u968f\u673a\u62bd\u6837\uff0c\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u96c6\u90fd\u4e00\u6837\uff0c\u90a3\u4e48\u6700\u7ec8\u8bad\u7ec3\u51fa\u7684\u6811\u5206\u7c7b\u7ed3\u679c\u4e5f\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u8fd9\u6837\u7684\u8bdd\u5b8c\u5168\u6ca1\u6709bagging\u7684\u5fc5\u8981\uff1b \u4e3a\u4ec0\u4e48\u8981\u6709\u653e\u56de\u5730\u62bd\u6837\uff1f \u6211\u7406\u89e3\u7684\u662f\u8fd9\u6837\u7684\uff1a\u5982\u679c\u4e0d\u662f\u6709\u653e\u56de\u7684\u62bd\u6837\uff0c\u90a3\u4e48\u6bcf\u68f5\u6811\u7684\u8bad\u7ec3\u6837\u672c\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u90fd\u662f\u6ca1\u6709\u4ea4\u96c6\u7684\uff0c\u8fd9\u6837\u6bcf\u68f5\u6811\u90fd\u662f\"\u6709\u504f\u7684\"\uff0c\u90fd\u662f\u7edd\u5bf9\"\u7247\u9762\u7684\"\uff08\u5f53\u7136\u8fd9\u6837\u8bf4\u53ef\u80fd\u4e0d\u5bf9\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u68f5\u6811\u8bad\u7ec3\u51fa\u6765\u90fd\u662f\u6709\u5f88\u5927\u7684\u5dee\u5f02\u7684\uff1b\u800c\u968f\u673a\u68ee\u6797\u6700\u540e\u5206\u7c7b\u53d6\u51b3\u4e8e\u591a\u68f5\u6811\uff08\u5f31\u5206\u7c7b\u5668\uff09\u7684\u6295\u7968\u8868\u51b3\uff0c\u8fd9\u79cd\u8868\u51b3\u5e94\u8be5\u662f\"\u6c42\u540c\"\uff0c\u56e0\u6b64\u4f7f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u8bad\u7ec3\u96c6\u6765\u8bad\u7ec3\u6bcf\u68f5\u6811\u8fd9\u6837\u5bf9\u6700\u7ec8\u5206\u7c7b\u7ed3\u679c\u662f\u6ca1\u6709\u5e2e\u52a9\u7684\uff0c\u8fd9\u6837\u65e0\u5f02\u4e8e\u662f\"\u76f2\u4eba\u6478\u8c61\"\u3002 2\uff09\u5982\u679c\u6bcf\u4e2a\u6837\u672c\u7684\u7279\u5f81\u7ef4\u5ea6\u4e3aM\uff0c\u6307\u5b9a\u4e00\u4e2a\u5e38\u6570 m<<M \uff0c\u968f\u673a\u5730\u4eceM\u4e2a\u7279\u5f81\u4e2d\u9009\u53d6m\u4e2a\u7279\u5f81\u5b50\u96c6\uff0c\u6bcf\u6b21\u6811\u8fdb\u884c\u5206\u88c2\u65f6\uff0c\u4ece\u8fd9m\u4e2a\u7279\u5f81\u4e2d\u9009\u62e9\u6700\u4f18\u7684\uff1b 3\uff09\u6bcf\u68f5\u6811\u90fd\u5c3d\u6700\u5927\u7a0b\u5ea6\u7684\u751f\u957f\uff0c\u5e76\u4e14\u6ca1\u6709\u526a\u679d\u8fc7\u7a0b\u3002 \u4e00\u5f00\u59cb\u6211\u4eec\u63d0\u5230\u7684\u968f\u673a\u68ee\u6797\u4e2d\u7684\u201c\u968f\u673a\u201d\u5c31\u662f\u6307\u7684\u8fd9\u91cc\u7684\u4e24\u4e2a\u968f\u673a\u6027\u3002\u4e24\u4e2a\u968f\u673a\u6027\u7684\u5f15\u5165\u5bf9\u968f\u673a\u68ee\u6797\u7684\u5206\u7c7b\u6027\u80fd\u81f3\u5173\u91cd\u8981\u3002\u7531\u4e8e\u5b83\u4eec\u7684\u5f15\u5165\uff0c\u4f7f\u5f97\u968f\u673a\u68ee\u6797\u4e0d\u5bb9\u6613\u9677\u5165\u8fc7\u62df\u5408\uff0c\u5e76\u4e14\u5177\u6709\u5f88\u597d\u5f97\u6297\u566a\u80fd\u529b\uff08\u6bd4\u5982\uff1a\u5bf9\u7f3a\u7701\u503c\u4e0d\u654f\u611f\uff09\u3002 \u968f\u673a\u68ee\u6797\u5206\u7c7b\u6548\u679c\uff08\u9519\u8bef\u7387\uff09\u4e0e\u4e24\u4e2a\u56e0\u7d20\u6709\u5173\uff1a \u68ee\u6797\u4e2d\u4efb\u610f\u4e24\u68f5\u6811\u7684\u76f8\u5173\u6027\uff1a\u76f8\u5173\u6027\u8d8a\u5927\uff0c\u9519\u8bef\u7387\u8d8a\u5927\uff1b \u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u5206\u7c7b\u80fd\u529b\uff1a\u6bcf\u68f5\u6811\u7684\u5206\u7c7b\u80fd\u529b\u8d8a\u5f3a\uff0c\u6574\u4e2a\u68ee\u6797\u7684\u9519\u8bef\u7387\u8d8a\u4f4e\u3002 \u51cf\u5c0f\u7279\u5f81\u9009\u62e9\u4e2a\u6570m\uff0c\u6811\u7684\u76f8\u5173\u6027\u548c\u5206\u7c7b\u80fd\u529b\u4e5f\u4f1a\u76f8\u5e94\u7684\u964d\u4f4e\uff1b\u589e\u5927m\uff0c\u4e24\u8005\u4e5f\u4f1a\u968f\u4e4b\u589e\u5927\u3002\u6240\u4ee5\u5173\u952e\u95ee\u9898\u662f\u5982\u4f55\u9009\u62e9 \u6700\u4f18\u7684m\uff08\u6216\u8005\u662f\u8303\u56f4\uff09 \uff0c\u8fd9\u4e5f\u662f\u968f\u673a\u68ee\u6797\u552f\u4e00\u7684\u4e00\u4e2a\u53c2\u6570\u3002","title":"\u7b97\u6cd5\u6b65\u9aa4"},{"location":"ai/sjsl/#oob-error","text":"\u4e0a\u9762\u6211\u4eec\u63d0\u5230\uff0c\u6784\u5efa\u968f\u673a\u68ee\u6797\u7684\u5173\u952e\u95ee\u9898\u5c31\u662f\u5982\u4f55\u9009\u62e9\u6700\u4f18\u7684m\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u4f9d\u636e\u8ba1\u7b97\u888b\u5916\u9519\u8bef\u7387oob error\uff08out-of-bag error\uff09\u3002 \u968f\u673a\u68ee\u6797\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u4f18\u70b9\u5c31\u662f\uff0c\u6ca1\u6709\u5fc5\u8981\u5bf9\u5b83\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1\u6216\u8005\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u6d4b\u8bd5\u96c6\u6765\u83b7\u5f97\u8bef\u5dee\u7684\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\u3002\u5b83\u53ef\u4ee5\u5728\u5185\u90e8\u8fdb\u884c\u8bc4\u4f30\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u751f\u6210\u7684\u8fc7\u7a0b\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u8bef\u5dee\u5efa\u7acb\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\u3002 \u6211\u4eec\u77e5\u9053\uff0c\u5728\u6784\u5efa\u6bcf\u68f5\u6811\u65f6\uff0c\u6211\u4eec\u5bf9\u8bad\u7ec3\u96c6\u4f7f\u7528\u4e86\u4e0d\u540c\u7684bootstrap sample\uff08\u968f\u673a\u4e14\u6709\u653e\u56de\u5730\u62bd\u53d6\uff09\u3002\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u68f5\u6811\u800c\u8a00\uff08\u5047\u8bbe\u5bf9\u4e8e\u7b2ck\u68f5\u6811\uff09\uff0c\u5927\u7ea6\u6709\u2153\u7684\u8bad\u7ec3\u5b9e\u4f8b\u6ca1\u6709\u53c2\u4e0e\u7b2ck\u68f5\u6811\u7684\u751f\u6210\uff0c\u5b83\u4eec\u79f0\u4e3a\u7b2ck\u68f5\u6811\u7684oob\u6837\u672c\u3002 \u800c\u8fd9\u6837\u7684\u91c7\u6837\u7279\u70b9\u5c31\u5141\u8bb8\u6211\u4eec\u8fdb\u884coob\u4f30\u8ba1\uff0c\u5b83\u7684\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff1a \uff08note\uff1a\u4ee5\u6837\u672c\u4e3a\u5355\u4f4d\uff09 1 2 3 4 5 1\uff09\u5bf9\u6bcf\u4e2a\u6837\u672c\uff0c\u8ba1\u7b97\u5b83\u4f5c\u4e3aoob\u6837\u672c\u7684\u6811\u5bf9\u5b83\u7684\u5206\u7c7b\u60c5\u51b5\uff08\u7ea61/3\u7684\u6811\uff09\uff1b 2\uff09\u7136\u540e\u4ee5\u7b80\u5355\u591a\u6570\u6295\u7968\u4f5c\u4e3a\u8be5\u6837\u672c\u7684\u5206\u7c7b\u7ed3\u679c\uff1b 3\uff09\u6700\u540e\u7528\u8bef\u5206\u4e2a\u6570\u5360\u6837\u672c\u603b\u6570\u7684\u6bd4\u7387\u4f5c\u4e3a\u968f\u673a\u68ee\u6797\u7684oob\u8bef\u5206\u7387\u3002 oob\u8bef\u5206\u7387\u662f\u968f\u673a\u68ee\u6797\u6cdb\u5316\u8bef\u5dee\u7684\u4e00\u4e2a\u65e0\u504f\u4f30\u8ba1\uff0c\u5b83\u7684\u7ed3\u679c\u8fd1\u4f3c\u4e8e\u9700\u8981\u5927\u91cf\u8ba1\u7b97\u7684k\u6298\u4ea4\u53c9\u9a8c\u8bc1\u3002","title":"\u888b\u5916\u9519\u8bef\u7387\uff08oob error\uff09"},{"location":"ai/sjsl/#_8","text":"","title":"\u4f18\u7f3a\u70b9"},{"location":"ai/sjsl/#_9","text":"1) \u8bad\u7ec3\u53ef\u4ee5\u9ad8\u5ea6\u5e76\u884c\u5316\uff0c\u5bf9\u4e8e\u5927\u6570\u636e\u65f6\u4ee3\u7684\u5927\u6837\u672c\u8bad\u7ec3\u901f\u5ea6\u6709\u4f18\u52bf\u3002 2) \u7531\u4e8e\u53ef\u4ee5\u968f\u673a\u9009\u62e9\u51b3\u7b56\u6811\u8282\u70b9\u5212\u5206\u7279\u5f81\uff0c\u8fd9\u6837\u5728\u6837\u672c\u7279\u5f81\u7ef4\u5ea6\u5f88\u9ad8\u7684\u65f6\u5019\uff0c\u4ecd\u7136\u80fd\u9ad8\u6548\u7684\u8bad\u7ec3\u6a21\u578b\u3002 3) \u5728\u8bad\u7ec3\u540e\uff0c\u53ef\u4ee5\u7ed9\u51fa\u5404\u4e2a\u7279\u5f81\u5bf9\u4e8e\u8f93\u51fa\u7684\u91cd\u8981\u6027 4) \u7531\u4e8e\u91c7\u7528\u4e86\u968f\u673a\u91c7\u6837\uff0c\u8bad\u7ec3\u51fa\u7684\u6a21\u578b\u7684\u65b9\u5dee\u5c0f\uff0c\u6cdb\u5316\u80fd\u529b\u5f3a\u3002 5) \u76f8\u5bf9\u4e8eBoosting\u7cfb\u5217\u7684Adaboost\u548cGBDT\uff0c RF\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\u3002 6) \u5bf9\u90e8\u5206\u7279\u5f81\u7f3a\u5931\u4e0d\u654f\u611f\u3002 7) \u5bf9\u6570\u636e\u96c6\u7684\u9002\u5e94\u80fd\u529b\u5f3a\uff1a\u65e2\u80fd\u5904\u7406\u79bb\u6563\u578b\u6570\u636e\uff0c\u4e5f\u80fd\u5904\u7406\u8fde\u7eed\u578b\u6570\u636e\uff0c\u6570\u636e\u96c6\u65e0\u9700\u89c4\u8303\u5316 8) \u5728\u521b\u5efa\u968f\u673a\u68ee\u6797\u7684\u65f6\u5019\uff0c\u5bf9generlization error\u4f7f\u7528\u7684\u662f\u65e0\u504f\u4f30\u8ba1 9) \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u80fd\u591f\u68c0\u6d4b\u5230feature\u95f4\u7684\u4e92\u76f8\u5f71\u54cd","title":"\u4f18\u70b9"},{"location":"ai/sjsl/#_10","text":"1) \u5728\u67d0\u4e9b\u566a\u97f3\u6bd4\u8f83\u5927\u7684\u6837\u672c\u96c6\u4e0a\uff0cRF\u6a21\u578b\u5bb9\u6613\u9677\u5165\u8fc7\u62df\u5408\u3002 2) \u53d6\u503c\u5212\u5206\u6bd4\u8f83\u591a\u7684\u7279\u5f81\u5bb9\u6613\u5bf9RF\u7684\u51b3\u7b56\u4ea7\u751f\u66f4\u5927\u7684\u5f71\u54cd\uff0c\u4ece\u800c\u5f71\u54cd\u62df\u5408\u7684\u6a21\u578b\u7684\u6548\u679c\u3002","title":"\u7f3a\u70b9"},{"location":"ai/sjsl/#_11","text":"\u4f8b\u5b50\u4e3a\u622a\u56fe,\u8bf7\u62d6\u52a8\u653e\u5927\u89c2\u770b~","title":"\u7b80\u5355\u4f8b\u5b50"},{"location":"ai/tdxj/","text":"\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u6982\u8ff0 \u00b6 \u4ecb\u7ecd \u00b6 \u68af\u5ea6\u4e0b\u964d\u6cd5\uff08gradient descent\uff09\uff0c\u53c8\u540d\u6700\u901f\u4e0b\u964d\u6cd5\uff08steepest descent\uff09\u662f\u6c42\u89e3\u65e0\u7ea6\u675f\u6700\u4f18\u5316\u95ee\u9898\u6700\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u5b83\u662f\u4e00\u79cd\u8fed\u4ee3\u65b9\u6cd5\uff0c\u6bcf\u4e00\u6b65\u4e3b\u8981\u7684\u64cd\u4f5c\u662f\u6c42\u89e3\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u5c06\u5f53\u524d\u4f4d\u7f6e\u7684\u8d1f\u68af\u5ea6\u65b9\u5411\u4f5c\u4e3a\u641c\u7d22\u65b9\u5411\uff08\u56e0\u4e3a\u5728\u8be5\u65b9\u5411\u4e0a\u76ee\u6807\u51fd\u6570\u4e0b\u964d\u6700\u5feb\uff0c\u8fd9\u4e5f\u662f\u6700\u901f\u4e0b\u964d\u6cd5\u540d\u79f0\u7684\u7531\u6765\uff09\u3002 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7279\u70b9\uff1a\u8d8a\u63a5\u8fd1\u76ee\u6807\u503c\uff0c\u6b65\u957f\u8d8a\u5c0f\uff0c\u4e0b\u964d\u901f\u5ea6\u8d8a\u6162\u3002 \u8fd9\u91cc\u6bcf\u4e00\u4e2a\u5708\u4ee3\u8868\u4e00\u4e2a\u51fd\u6570\u68af\u5ea6\uff0c\u6700\u4e2d\u5fc3\u8868\u793a\u51fd\u6570\u6781\u503c\u70b9\uff0c\u6bcf\u6b21\u8fed\u4ee3\u6839\u636e\u5f53\u524d\u4f4d\u7f6e\u6c42\u5f97\u7684\u68af\u5ea6\uff08\u7528\u4e8e\u786e\u5b9a\u641c\u7d22\u65b9\u5411\u4ee5\u53ca\u4e0e\u6b65\u957f\u5171\u540c\u51b3\u5b9a\u524d\u8fdb\u901f\u5ea6\uff09\u548c\u6b65\u957f\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u4e0d\u65ad\u8fed\u4ee3\u6700\u7ec8\u5230\u8fbe\u76ee\u6807\u51fd\u6570\u5c40\u90e8\u6700\u4f18\u70b9\uff08\u5982\u679c\u76ee\u6807\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u5219\u5230\u8fbe\u5168\u5c40\u6700\u4f18\u70b9\uff09\u3002 \u6211\u4eec\u66f4\u52a0\u76f4\u89c2\u6e05\u6670\u7684\u8bf4\u660e\u68af\u5ea6\u4e0b\u964d,\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u516c\u5f0f: \u4e0a\u9762\u7684\u516c\u5f0f\u8fd9\u4e2a\u4f4d\u7f6e\u66f4\u65b0\u516c\u5f0f,\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u4f60\u6bcf\u8d70\u4e00\u6b65\uff0c\u5c31\u8bb0\u5f55\u4e0b\u4f60\u73b0\u5728\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u7b49\u53f7\u5de6\u8fb9\u7684\u03b8i,\u90a3\u4e48\u8d70\u4e00\u6b65\u8d70\u591a\u8fdc\u5450\uff1f\u7b54\u6848\u5e94\u8be5\u662f\u03b1\uff0c\u90a3\u4f60\u8981\u671d\u54ea\u4e2a\u65b9\u5411\u8d70\u5462\uff1f\u7b54\u6848\u662fJ(\u03b8)\u5173\u4e8e\u03b8i\u7684\u504f\u5bfc\u6570\u3002 \u8bf4\u660e: \u5728\u8fd9\u91cc\u6211\u4eec\u533a\u5206\u4e0b\u7ecf\u5e38\u7528\u7684\u51fd\u6570: \u635f\u5931\u51fd\u6570\uff08Loss Function \uff09\u662f\u5b9a\u4e49\u5728\u5355\u4e2a\u6837\u672c\u4e0a\u7684\uff0c\u7b97\u7684\u662f\u4e00\u4e2a\u6837\u672c\u7684\u8bef\u5dee\u3002 \u4ee3\u4ef7\u51fd\u6570\uff08Cost Function \uff09\u662f\u5b9a\u4e49\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u7684\uff0c\u662f\u6240\u6709\u6837\u672c\u8bef\u5dee\u7684\u5e73\u5747\uff0c\u4e5f\u5c31\u662f\u635f\u5931\u51fd\u6570\u7684\u5e73\u5747\u3002 \u76ee\u6807\u51fd\u6570\uff08Object Function\uff09\u5b9a\u4e49\u4e3a\uff1a\u6700\u7ec8\u9700\u8981\u4f18\u5316\u7684\u51fd\u6570\u3002\u7b49\u4e8e\u7ecf\u9a8c\u98ce\u9669+\u7ed3\u6784\u98ce\u9669\uff08\u4e5f\u5c31\u662fCost Function + \u6b63\u5219\u5316\u9879\uff09\u3002 \u800c\u5728\u68af\u5ea6\u4e0b\u964d\u4e2d\u7528\u5230\u7684J(\u03b8)\u5c31\u662f\u8fd9\u91cc\u9762\u7684\u635f\u5931\u51fd\u6570\u3002 \u63a8\u5bfc \u00b6 \u8bf4\u660e: \u5728\u8fd9\u91cc\u6211\u4eec\u7528\u542b\u4e24\u4e2a\u7b80\u5355\u53c2\u6570\u03b80\u548c\u03b81\u7684\u7ebf\u6027\u56de\u5f52\u51fd\u6570\u4e3a\u4f8b\u8fdb\u884c\u63a8\u5bfc\u3002 \u63a8\u5bfc\u7528\u5230\u7684\u77e5\u8bc6: \u504f\u5bfc\u6570 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u53d8\u79cd \u00b6 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u4e3b\u8981\u6709\u4e09\u79cd\u53d8\u79cd\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u4f7f\u7528\u591a\u5c11\u6570\u636e\u6765\u8ba1\u7b97\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\u3002 \u4e0d\u540c\u65b9\u6cd5\u4e3b\u8981\u5728\u51c6\u786e\u6027\u548c\u4f18\u5316\u901f\u5ea6\u95f4\u505a\u6743\u8861\u3002 1.Batch gradient descent (BGD) \u00b6 \u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(BGD),\u5176\u9700\u8981\u8ba1\u7b97 \u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u68af\u5ea6 \uff0c\u5373\uff1a \u5176\u4e2d\u03b7\u4e3a\u5b66\u4e60\u7387\uff0c\u7528\u6765\u63a7\u5236\u66f4\u65b0\u7684\u201c\u529b\u5ea6\u201d/\"\u6b65\u957f\"\u3002 \u4f18\u70b9\uff1a \u5bf9\u4e8e\u51f8\u76ee\u6807\u51fd\u6570\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff1b \u5bf9\u4e8e\u975e\u51f8\u76ee\u6807\u51fd\u6570\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u4e2a\u5c40\u90e8\u6700\u4f18\u3002 \u7f3a\u70b9\uff1a \u901f\u5ea6\u6162; \u6570\u636e\u91cf\u5927\u65f6\u4e0d\u53ef\u884c; \u65e0\u6cd5\u5728\u7ebf\u4f18\u5316(\u5373\u65e0\u6cd5\u5904\u7406\u52a8\u6001\u4ea7\u751f\u7684\u65b0\u6837\u672c)\u3002 2.Stochastic gradient descent (SGD) \u00b6 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(SGD),\u4ec5\u8ba1\u7b97 \u67d0\u4e2a\u6837\u672c\u7684\u68af\u5ea6 \uff0c\u5373\u9488\u5bf9\u67d0\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c xi\u53ca\u5176label yi\u66f4\u65b0\u53c2\u6570\uff1a \u9010\u6b65\u51cf\u5c0f\u5b66\u4e60\u7387\uff0cSGD\u8868\u73b0\u5f97\u540cBGD\u5f88\u76f8\u4f3c\uff0c\u6700\u540e\u90fd\u53ef\u4ee5\u6709\u4e0d\u9519\u7684\u6536\u655b\u3002 \u4f18\u70b9\uff1a \u66f4\u65b0\u9891\u6b21\u5feb\uff0c\u4f18\u5316\u901f\u5ea6\u66f4\u5feb; \u53ef\u4ee5\u5728\u7ebf\u4f18\u5316(\u53ef\u4ee5\u65e0\u6cd5\u5904\u7406\u52a8\u6001\u4ea7\u751f\u7684\u65b0\u6837\u672c)\uff1b\u4e00\u5b9a\u7684\u968f\u673a\u6027\u5bfc\u81f4\u6709\u51e0\u7387\u8df3\u51fa\u5c40\u90e8\u6700\u4f18(\u968f\u673a\u6027\u6765\u81ea\u4e8e\u7528\u4e00\u4e2a\u6837\u672c\u7684\u68af\u5ea6\u53bb\u4ee3\u66ff\u6574\u4f53\u6837\u672c\u7684\u68af\u5ea6)\u3002 \u7f3a\u70b9\uff1a \u968f\u673a\u6027\u53ef\u80fd\u5bfc\u81f4\u6536\u655b\u590d\u6742\u5316\uff0c\u5373\u4f7f\u5230\u8fbe\u6700\u4f18\u70b9\u4ecd\u7136\u4f1a\u8fdb\u884c\u8fc7\u5ea6\u4f18\u5316\uff0c\u56e0\u6b64SGD\u5f97\u4f18\u5316\u8fc7\u7a0b\u76f8\u6bd4BGD\u5145\u6ee1\u52a8\u8361\u3002 3.Mini-batch gradient descent (MBGD) \u00b6 \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(MBGD),\u8ba1\u7b97 \u5305\u542bn\u4e2a\u6837\u672c\u7684mini-batch\u7684\u68af\u5ea6 \uff1a MBGD\u662f\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6700\u5e38\u7528\u7684\u4f18\u5316\u65b9\u6cd5\u3002 \u4f18\u70b9\uff1a \u53c2\u6570\u66f4\u65b0\u65f6\u7684\u52a8\u8361\u53d8\u5c0f\uff0c\u6536\u655b\u8fc7\u7a0b\u66f4\u7a33\u5b9a\uff0c\u964d\u4f4e\u6536\u655b\u96be\u5ea6\uff1b\u53ef\u4ee5\u5229\u7528\u73b0\u6709\u7684\u7ebf\u6027\u4ee3\u6570\u5e93\u9ad8\u6548\u7684\u8ba1\u7b97\u591a\u4e2a\u6837\u672c\u7684\u68af\u5ea6\u3002 \u6311\u6218 \u00b6 \u7531 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u53d8\u79cd \u6765\u770b\uff0c Mini-batch gradient descent (MBGD) \u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u597d\u7684\u7b56\u7565\uff0c\u4f46\u540c\u6837\u4e0d\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u6700\u4f18\u89e3\u3002\u6b64\u5916\uff0c\u8fd9\u91cc\u8fd8\u5b58\u5728\u5f88\u591a\u95ee\u9898\u9700\u8981\u5904\u7406\uff1a 1\uff09 \u5982\u4f55\u9009\u62e9\u5408\u9002\u7684\u5b66\u4e60\u7387\uff1f \u5b66\u4e60\u7387\u8fc7\u5c0f\u5bfc\u81f4\u6536\u655b\u592a\u6162\uff0c\u8fc7\u5927\u53c8\u5bfc\u81f4\u6536\u655b\u52a8\u8361\u751a\u81f3\u504f\u79bb\u6700\u4f18\u70b9\u3002 2\uff09 \u5982\u4f55\u786e\u5b9a\u5b66\u4e60\u7387\u7684\u8c03\u6574\u7b56\u7565\uff1f \u76ee\u524d\u8c03\u6574\u5b66\u4e60\u7387\u57fa\u672c\u90fd\u6309\u7167\u4e00\u79cd \u201c\u9000\u706b\u201d\u7684\u601d\u60f3\uff0c\u8981\u4e48\u6309\u7167\u9884\u5b9a\u6a21\u5f0f\u8c03\u6574\uff0c\u8981\u4e48\u6839\u636e\u76ee\u6807\u51fd\u6570\u503c\u7684\u53d8\u5316\u662f\u5426\u6ee1\u8db3\u9608\u503c\u52a8\u6001\u6539\u53d8\u5b66\u4e60\u7387\u3002 \u4f46\u662f\uff0c\u201c\u6a21\u5f0f\u201d\u548c\u201c\u9608\u503c\u201d\u90fd\u9700\u8981\u4e8b\u5148\u6307\u5b9a\uff0c\u65e0\u6cd5\u81ea\u9002\u5e94\u4e0d\u540c\u6570\u636e\u96c6\u3002 3\uff09 \u5bf9\u6240\u6709\u53c2\u6570\u7684\u66f4\u65b0\u91c7\u7528\u76f8\u540c\u7684\u5b66\u4e60\u7387\u662f\u5426\u6070\u5f53\uff1f \u5982\u679c\u6570\u636e\u662f\u7a00\u758f\u7684\u4e14\u7279\u5f81\u5206\u5e03\u4e0d\u5747\uff0c\u4f3c\u4e4e\u6211\u4eec\u66f4\u5e94\u8be5\u7ed9\u4e88\u8f83\u5c11\u51fa\u73b0\u7684\u7279\u5f81\u4e00\u4e2a\u5927\u7684\u66f4\u65b0\u3002 4\uff09 \u5982\u4f55\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\uff1f \u7406\u8bba\u4e0a\u53ea\u6709\u4e25\u683c\u7684\u51f8\u51fd\u6570\u624d\u53ef\u4ee5\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u4f46\u662f\uff0c\u795e\u7ecf\u7f51\u7edc\u6240\u9762\u4e34\u7684\u57fa\u672c\u4e0a\u90fd\u662f\u4e25\u91cd\u975e\u51f8\u7684\u76ee\u6807\u51fd\u6570\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u4f18\u5316\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6700\u4f18\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7684\u56f0\u96be\u5f80\u5f80\u6765\u81ea \u201c\u978d\u70b9\u201d \u800c\u975e\u5c40\u90e8\u6781\u5c0f\u70b9\u3002 \u978d\u70b9\u5468\u56f4\u901a\u5e38\u62e5\u6709\u76f8\u540c\u7684\u635f\u5931\u51fd\u6570\u503c\uff0c\u8fd9\u5bfc\u81f4SGD\u5f88\u96be\u53d1\u6325\u4f5c\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u65b9\u5411\u7684\u68af\u5ea6\u90fd\u63a5\u8fd1\u4e8e0. \u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5 \u00b6 \u4e0b\u9762\u8bf4\u4e00\u4e9b\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\u5e38\u7528\u7684\u7528\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u7684\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u65b9\u6cd5\u3002 \u4e00\u4e9b\u5bf9\u9ad8\u7ef4\u6570\u636e\u4e0d\u53ef\u884c\u7684\u65b9\u6cd5\u4e0d\u518d\u8ba8\u8bba\uff0c\u5982\u4e8c\u9636\u65b9\u6cd5\u4e2d\u7684\u725b\u987f\u6cd5\u3002 Momentum Nesterov accelerated gradient Adagrad Adadelta RMSprop Adam AdaMax \u6240\u6709\u4ee5\u4e0a\u4f18\u5316\u7b97\u6cd5,\u7531\u4e8e\u535a\u4e3b\u7814\u7a76\u4e0d\u6df1\u5165,\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u53bb \u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5\u603b\u7ed3 \u8fdb\u884c\u8be6\u7ec6\u7684\u5b66\u4e60\u3002 \u4ee3\u7801\u7ec3\u4e60 \u00b6 \u6279\u91cf\u68af\u5ea6\u4e0b\u964d(BGD) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #\u5f15\u5e93 #\u5f15\u5165matplotlib\u5e93,\u7528\u4e8e\u753b\u56fe import matplotlib.pyplot as plt from math import pow #\u56fe\u7247\u5d4c\u5165jupyter % matplotlib inline #\u4e3a\u4e86\u4fbf\u4e8e\u53d6\u7528\u6570\u636e,\u6211\u4eec\u5c06\u6570\u636e\u5206\u4e3ax,y,\u5728\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d(x,y)\u662f\u70b9 x = [ 1 , 2 , 3 , 4 , 5 , 6 ] y = [ 13 , 14 , 20 , 21 , 25 , 30 ] print ( \"\u6253\u5370\u521d\u59cb\u6570\u636e\u56fe...\" ) plt . scatter ( x , y ) plt . xlabel ( \"X\" ) plt . ylabel ( \"Y\" ) plt . show () #\u8d85\u53c2\u6570\u8bbe\u5b9a alpha = 0.01 #\u5b66\u4e60\u7387/\u6b65\u957f theta0 = 0 #\u03b80 theta1 = 0 #\u03b81 epsilon = 0.001 #\u8bef\u5dee m = len ( x ) count = 0 loss = [] for time in range ( 1000 ): count += 1 #\u6c42\u504f\u5bfctheta0\u548ctheta1\u7684\u7ed3\u679c temp0 = 0 #J(\u03b8)\u5bf9\u03b80\u6c42\u5bfc\u7684\u7ed3\u679c temp1 = 0 #J(\u03b8)\u5bf9\u03b81\u6c42\u5bfc\u7684\u7ed3\u679c diss = 0 for i in range ( m ): temp0 += ( theta0 + theta1 * x [ i ] - y [ i ]) / m temp1 += (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u66f4\u65b0theta0\u548ctheta1 for i in range ( m ): theta0 = theta0 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) theta1 = theta1 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u6c42\u635f\u5931\u51fd\u6570J(\u03b8) for i in range ( m ): diss = diss + 0.5 * ( 1 / m ) * pow (( theta0 + theta1 * x [ i ] - y [ i ]), 2 ) loss . append ( diss ) #\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 ''' if diss<=epsilon: break else: continue ''' print ( \"\u6700\u7ec8\u7684\u7ed3\u679c\u4e3a:\" ) print ( \"\u6b64\u6b21\u8fed\u4ee3\u6b21\u6570\u4e3a:{}\u6b21,\u6700\u7ec8theta0\u7684\u7ed3\u679c\u4e3a:{},\u6700\u7ec8theta1\u7684\u7ed3\u679c\u4e3a:{}\" . format ( count , theta0 , theta1 )) print ( \"\u9884\u6d4b\u7684\u6700\u7ec8\u56de\u5f52\u51fd\u6570\u4e3a:y={}+{}x \\n \" . format ( theta0 , theta1 )) print ( \"\u8fed\u4ee3\u56fe\u50cf\u7ed8\u5236...\" ) plt . scatter ( range ( count ), loss ) plt . show () \u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8fd0\u884c\u7ed3\u679c\u67e5\u770b \u968f\u673a\u68af\u5ea6\u4e0b\u964d(SGD) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #\u5f15\u5e93 #\u5f15\u5165matplotlib\u5e93,\u7528\u4e8e\u753b\u56fe import matplotlib.pyplot as plt from math import pow import numpy as np #\u56fe\u7247\u5d4c\u5165jupyter % matplotlib inline #\u4e3a\u4e86\u4fbf\u4e8e\u53d6\u7528\u6570\u636e,\u6211\u4eec\u5c06\u6570\u636e\u5206\u4e3ax,y,\u5728\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d(x,y)\u662f\u70b9 x = [ 1 , 2 , 3 , 4 , 5 , 6 ] y = [ 13 , 14 , 20 , 21 , 25 , 30 ] print ( \"\u6253\u5370\u521d\u59cb\u6570\u636e\u56fe...\" ) plt . scatter ( x , y ) plt . xlabel ( \"X\" ) plt . ylabel ( \"Y\" ) plt . show () #\u8d85\u53c2\u6570\u8bbe\u5b9a alpha = 0.01 #\u5b66\u4e60\u7387/\u6b65\u957f theta0 = 0 #\u03b80 theta1 = 0 #\u03b81 epsilon = 0.001 #\u8bef\u5dee m = len ( x ) count = 0 loss = [] for time in range ( 1000 ): count += 1 diss = 0 #\u6c42\u504f\u5bfctheta0\u548ctheta1\u7684\u7ed3\u679c temp0 = 0 #J(\u03b8)\u5bf9\u03b80\u6c42\u5bfc\u7684\u7ed3\u679c temp1 = 0 #J(\u03b8)\u5bf9\u03b81\u6c42\u5bfc\u7684\u7ed3\u679c for i in range ( m ): temp0 += ( theta0 + theta1 * x [ i ] - y [ i ]) / m temp1 += (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u66f4\u65b0theta0\u548ctheta1 for i in range ( m ): theta0 = theta0 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) theta1 = theta1 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u6c42\u635f\u5931\u51fd\u6570J(\u03b8) rand_i = np . random . randint ( 0 , m ) diss += 0.5 * ( 1 / m ) * pow (( theta0 + theta1 * x [ rand_i ] - y [ rand_i ]), 2 ) loss . append ( diss ) #\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 ''' if diss<=epsilon: break else: continue ''' print ( \"\u6700\u7ec8\u7684\u7ed3\u679c\u4e3a:\" ) print ( \"\u6b64\u6b21\u8fed\u4ee3\u6b21\u6570\u4e3a:{}\u6b21,\u6700\u7ec8theta0\u7684\u7ed3\u679c\u4e3a:{},\u6700\u7ec8theta1\u7684\u7ed3\u679c\u4e3a:{}\" . format ( count , theta0 , theta1 )) print ( \"\u9884\u6d4b\u7684\u6700\u7ec8\u56de\u5f52\u51fd\u6570\u4e3a:y={}+{}x \\n \" . format ( theta0 , theta1 )) print ( \"\u8fed\u4ee3\u56fe\u50cf\u7ed8\u5236...\" ) plt . scatter ( range ( count ), loss ) plt . show () \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8fd0\u884c\u7ed3\u679c\u67e5\u770b \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d(MBGD) \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 #\u5f15\u5e93 #\u5f15\u5165matplotlib\u5e93,\u7528\u4e8e\u753b\u56fe import matplotlib.pyplot as plt from math import pow import numpy as np #\u56fe\u7247\u5d4c\u5165jupyter % matplotlib inline #\u4e3a\u4e86\u4fbf\u4e8e\u53d6\u7528\u6570\u636e,\u6211\u4eec\u5c06\u6570\u636e\u5206\u4e3ax,y,\u5728\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d(x,y)\u662f\u70b9 x = [ 1 , 2 , 3 , 4 , 5 , 6 ] y = [ 13 , 14 , 20 , 21 , 25 , 30 ] print ( \"\u6253\u5370\u521d\u59cb\u6570\u636e\u56fe...\" ) plt . scatter ( x , y ) plt . xlabel ( \"X\" ) plt . ylabel ( \"Y\" ) plt . show () #\u8d85\u53c2\u6570\u8bbe\u5b9a alpha = 0.01 #\u5b66\u4e60\u7387/\u6b65\u957f theta0 = 0 #\u03b80 theta1 = 0 #\u03b81 epsilon = 0.001 #\u8bef\u5dee diss = 0 #\u635f\u5931\u51fd\u6570 m = len ( x ) count = 0 loss = [] for time in range ( 1000 ): count += 1 diss = 0 #\u6c42\u504f\u5bfctheta0\u548ctheta1\u7684\u7ed3\u679c temp0 = 0 #J(\u03b8)\u5bf9\u03b80\u6c42\u5bfc\u7684\u7ed3\u679c temp1 = 0 #J(\u03b8)\u5bf9\u03b81\u6c42\u5bfc\u7684\u7ed3\u679c for i in range ( m ): temp0 += ( theta0 + theta1 * x [ i ] - y [ i ]) / m temp1 += (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u66f4\u65b0theta0\u548ctheta1 for i in range ( m ): theta0 = theta0 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) theta1 = theta1 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u6c42\u635f\u5931\u51fd\u6570J(\u03b8) result = [] for i in range ( 3 ): rand_i = np . random . randint ( 0 , m ) result . append ( rand_i ) for j in result : diss += 0.5 * ( 1 / m ) * pow (( theta0 + theta1 * x [ j ] - y [ j ]), 2 ) loss . append ( diss ) #\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 ''' if diss<=epsilon: break else: continue ''' print ( \"\u6700\u7ec8\u7684\u7ed3\u679c\u4e3a:\" ) print ( \"\u6b64\u6b21\u8fed\u4ee3\u6b21\u6570\u4e3a:{}\u6b21,\u6700\u7ec8theta0\u7684\u7ed3\u679c\u4e3a:{},\u6700\u7ec8theta1\u7684\u7ed3\u679c\u4e3a:{}\" . format ( count , theta0 , theta1 )) print ( \"\u9884\u6d4b\u7684\u6700\u7ec8\u56de\u5f52\u51fd\u6570\u4e3a:y={}+{}x \\n \" . format ( theta0 , theta1 )) print ( \"\u8fed\u4ee3\u56fe\u50cf\u7ed8\u5236...\" ) plt . scatter ( range ( count ), loss ) plt . show () \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"1. \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5"},{"location":"ai/tdxj/#_1","text":"","title":"\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u6982\u8ff0"},{"location":"ai/tdxj/#_2","text":"\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08gradient descent\uff09\uff0c\u53c8\u540d\u6700\u901f\u4e0b\u964d\u6cd5\uff08steepest descent\uff09\u662f\u6c42\u89e3\u65e0\u7ea6\u675f\u6700\u4f18\u5316\u95ee\u9898\u6700\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u5b83\u662f\u4e00\u79cd\u8fed\u4ee3\u65b9\u6cd5\uff0c\u6bcf\u4e00\u6b65\u4e3b\u8981\u7684\u64cd\u4f5c\u662f\u6c42\u89e3\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\u5411\u91cf\uff0c\u5c06\u5f53\u524d\u4f4d\u7f6e\u7684\u8d1f\u68af\u5ea6\u65b9\u5411\u4f5c\u4e3a\u641c\u7d22\u65b9\u5411\uff08\u56e0\u4e3a\u5728\u8be5\u65b9\u5411\u4e0a\u76ee\u6807\u51fd\u6570\u4e0b\u964d\u6700\u5feb\uff0c\u8fd9\u4e5f\u662f\u6700\u901f\u4e0b\u964d\u6cd5\u540d\u79f0\u7684\u7531\u6765\uff09\u3002 \u68af\u5ea6\u4e0b\u964d\u6cd5\u7279\u70b9\uff1a\u8d8a\u63a5\u8fd1\u76ee\u6807\u503c\uff0c\u6b65\u957f\u8d8a\u5c0f\uff0c\u4e0b\u964d\u901f\u5ea6\u8d8a\u6162\u3002 \u8fd9\u91cc\u6bcf\u4e00\u4e2a\u5708\u4ee3\u8868\u4e00\u4e2a\u51fd\u6570\u68af\u5ea6\uff0c\u6700\u4e2d\u5fc3\u8868\u793a\u51fd\u6570\u6781\u503c\u70b9\uff0c\u6bcf\u6b21\u8fed\u4ee3\u6839\u636e\u5f53\u524d\u4f4d\u7f6e\u6c42\u5f97\u7684\u68af\u5ea6\uff08\u7528\u4e8e\u786e\u5b9a\u641c\u7d22\u65b9\u5411\u4ee5\u53ca\u4e0e\u6b65\u957f\u5171\u540c\u51b3\u5b9a\u524d\u8fdb\u901f\u5ea6\uff09\u548c\u6b65\u957f\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u4e0d\u65ad\u8fed\u4ee3\u6700\u7ec8\u5230\u8fbe\u76ee\u6807\u51fd\u6570\u5c40\u90e8\u6700\u4f18\u70b9\uff08\u5982\u679c\u76ee\u6807\u51fd\u6570\u662f\u51f8\u51fd\u6570\uff0c\u5219\u5230\u8fbe\u5168\u5c40\u6700\u4f18\u70b9\uff09\u3002 \u6211\u4eec\u66f4\u52a0\u76f4\u89c2\u6e05\u6670\u7684\u8bf4\u660e\u68af\u5ea6\u4e0b\u964d,\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u516c\u5f0f: \u4e0a\u9762\u7684\u516c\u5f0f\u8fd9\u4e2a\u4f4d\u7f6e\u66f4\u65b0\u516c\u5f0f,\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u4f60\u6bcf\u8d70\u4e00\u6b65\uff0c\u5c31\u8bb0\u5f55\u4e0b\u4f60\u73b0\u5728\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u7b49\u53f7\u5de6\u8fb9\u7684\u03b8i,\u90a3\u4e48\u8d70\u4e00\u6b65\u8d70\u591a\u8fdc\u5450\uff1f\u7b54\u6848\u5e94\u8be5\u662f\u03b1\uff0c\u90a3\u4f60\u8981\u671d\u54ea\u4e2a\u65b9\u5411\u8d70\u5462\uff1f\u7b54\u6848\u662fJ(\u03b8)\u5173\u4e8e\u03b8i\u7684\u504f\u5bfc\u6570\u3002 \u8bf4\u660e: \u5728\u8fd9\u91cc\u6211\u4eec\u533a\u5206\u4e0b\u7ecf\u5e38\u7528\u7684\u51fd\u6570: \u635f\u5931\u51fd\u6570\uff08Loss Function \uff09\u662f\u5b9a\u4e49\u5728\u5355\u4e2a\u6837\u672c\u4e0a\u7684\uff0c\u7b97\u7684\u662f\u4e00\u4e2a\u6837\u672c\u7684\u8bef\u5dee\u3002 \u4ee3\u4ef7\u51fd\u6570\uff08Cost Function \uff09\u662f\u5b9a\u4e49\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u7684\uff0c\u662f\u6240\u6709\u6837\u672c\u8bef\u5dee\u7684\u5e73\u5747\uff0c\u4e5f\u5c31\u662f\u635f\u5931\u51fd\u6570\u7684\u5e73\u5747\u3002 \u76ee\u6807\u51fd\u6570\uff08Object Function\uff09\u5b9a\u4e49\u4e3a\uff1a\u6700\u7ec8\u9700\u8981\u4f18\u5316\u7684\u51fd\u6570\u3002\u7b49\u4e8e\u7ecf\u9a8c\u98ce\u9669+\u7ed3\u6784\u98ce\u9669\uff08\u4e5f\u5c31\u662fCost Function + \u6b63\u5219\u5316\u9879\uff09\u3002 \u800c\u5728\u68af\u5ea6\u4e0b\u964d\u4e2d\u7528\u5230\u7684J(\u03b8)\u5c31\u662f\u8fd9\u91cc\u9762\u7684\u635f\u5931\u51fd\u6570\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/tdxj/#_3","text":"\u8bf4\u660e: \u5728\u8fd9\u91cc\u6211\u4eec\u7528\u542b\u4e24\u4e2a\u7b80\u5355\u53c2\u6570\u03b80\u548c\u03b81\u7684\u7ebf\u6027\u56de\u5f52\u51fd\u6570\u4e3a\u4f8b\u8fdb\u884c\u63a8\u5bfc\u3002 \u63a8\u5bfc\u7528\u5230\u7684\u77e5\u8bc6: \u504f\u5bfc\u6570","title":"\u63a8\u5bfc"},{"location":"ai/tdxj/#_4","text":"\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u4e3b\u8981\u6709\u4e09\u79cd\u53d8\u79cd\uff0c\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u4f7f\u7528\u591a\u5c11\u6570\u636e\u6765\u8ba1\u7b97\u76ee\u6807\u51fd\u6570\u7684\u68af\u5ea6\u3002 \u4e0d\u540c\u65b9\u6cd5\u4e3b\u8981\u5728\u51c6\u786e\u6027\u548c\u4f18\u5316\u901f\u5ea6\u95f4\u505a\u6743\u8861\u3002","title":"\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u53d8\u79cd"},{"location":"ai/tdxj/#1batch-gradient-descent-bgd","text":"\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(BGD),\u5176\u9700\u8981\u8ba1\u7b97 \u6574\u4e2a\u8bad\u7ec3\u96c6\u7684\u68af\u5ea6 \uff0c\u5373\uff1a \u5176\u4e2d\u03b7\u4e3a\u5b66\u4e60\u7387\uff0c\u7528\u6765\u63a7\u5236\u66f4\u65b0\u7684\u201c\u529b\u5ea6\u201d/\"\u6b65\u957f\"\u3002 \u4f18\u70b9\uff1a \u5bf9\u4e8e\u51f8\u76ee\u6807\u51fd\u6570\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff1b \u5bf9\u4e8e\u975e\u51f8\u76ee\u6807\u51fd\u6570\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u4e2a\u5c40\u90e8\u6700\u4f18\u3002 \u7f3a\u70b9\uff1a \u901f\u5ea6\u6162; \u6570\u636e\u91cf\u5927\u65f6\u4e0d\u53ef\u884c; \u65e0\u6cd5\u5728\u7ebf\u4f18\u5316(\u5373\u65e0\u6cd5\u5904\u7406\u52a8\u6001\u4ea7\u751f\u7684\u65b0\u6837\u672c)\u3002","title":"1.Batch gradient descent (BGD)"},{"location":"ai/tdxj/#2stochastic-gradient-descent-sgd","text":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(SGD),\u4ec5\u8ba1\u7b97 \u67d0\u4e2a\u6837\u672c\u7684\u68af\u5ea6 \uff0c\u5373\u9488\u5bf9\u67d0\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c xi\u53ca\u5176label yi\u66f4\u65b0\u53c2\u6570\uff1a \u9010\u6b65\u51cf\u5c0f\u5b66\u4e60\u7387\uff0cSGD\u8868\u73b0\u5f97\u540cBGD\u5f88\u76f8\u4f3c\uff0c\u6700\u540e\u90fd\u53ef\u4ee5\u6709\u4e0d\u9519\u7684\u6536\u655b\u3002 \u4f18\u70b9\uff1a \u66f4\u65b0\u9891\u6b21\u5feb\uff0c\u4f18\u5316\u901f\u5ea6\u66f4\u5feb; \u53ef\u4ee5\u5728\u7ebf\u4f18\u5316(\u53ef\u4ee5\u65e0\u6cd5\u5904\u7406\u52a8\u6001\u4ea7\u751f\u7684\u65b0\u6837\u672c)\uff1b\u4e00\u5b9a\u7684\u968f\u673a\u6027\u5bfc\u81f4\u6709\u51e0\u7387\u8df3\u51fa\u5c40\u90e8\u6700\u4f18(\u968f\u673a\u6027\u6765\u81ea\u4e8e\u7528\u4e00\u4e2a\u6837\u672c\u7684\u68af\u5ea6\u53bb\u4ee3\u66ff\u6574\u4f53\u6837\u672c\u7684\u68af\u5ea6)\u3002 \u7f3a\u70b9\uff1a \u968f\u673a\u6027\u53ef\u80fd\u5bfc\u81f4\u6536\u655b\u590d\u6742\u5316\uff0c\u5373\u4f7f\u5230\u8fbe\u6700\u4f18\u70b9\u4ecd\u7136\u4f1a\u8fdb\u884c\u8fc7\u5ea6\u4f18\u5316\uff0c\u56e0\u6b64SGD\u5f97\u4f18\u5316\u8fc7\u7a0b\u76f8\u6bd4BGD\u5145\u6ee1\u52a8\u8361\u3002","title":"2.Stochastic gradient descent (SGD)"},{"location":"ai/tdxj/#3mini-batch-gradient-descent-mbgd","text":"\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5(MBGD),\u8ba1\u7b97 \u5305\u542bn\u4e2a\u6837\u672c\u7684mini-batch\u7684\u68af\u5ea6 \uff1a MBGD\u662f\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6700\u5e38\u7528\u7684\u4f18\u5316\u65b9\u6cd5\u3002 \u4f18\u70b9\uff1a \u53c2\u6570\u66f4\u65b0\u65f6\u7684\u52a8\u8361\u53d8\u5c0f\uff0c\u6536\u655b\u8fc7\u7a0b\u66f4\u7a33\u5b9a\uff0c\u964d\u4f4e\u6536\u655b\u96be\u5ea6\uff1b\u53ef\u4ee5\u5229\u7528\u73b0\u6709\u7684\u7ebf\u6027\u4ee3\u6570\u5e93\u9ad8\u6548\u7684\u8ba1\u7b97\u591a\u4e2a\u6837\u672c\u7684\u68af\u5ea6\u3002","title":"3.Mini-batch gradient descent (MBGD)"},{"location":"ai/tdxj/#_5","text":"\u7531 \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u53d8\u79cd \u6765\u770b\uff0c Mini-batch gradient descent (MBGD) \u662f\u4e00\u79cd\u76f8\u5bf9\u8f83\u597d\u7684\u7b56\u7565\uff0c\u4f46\u540c\u6837\u4e0d\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u6700\u4f18\u89e3\u3002\u6b64\u5916\uff0c\u8fd9\u91cc\u8fd8\u5b58\u5728\u5f88\u591a\u95ee\u9898\u9700\u8981\u5904\u7406\uff1a 1\uff09 \u5982\u4f55\u9009\u62e9\u5408\u9002\u7684\u5b66\u4e60\u7387\uff1f \u5b66\u4e60\u7387\u8fc7\u5c0f\u5bfc\u81f4\u6536\u655b\u592a\u6162\uff0c\u8fc7\u5927\u53c8\u5bfc\u81f4\u6536\u655b\u52a8\u8361\u751a\u81f3\u504f\u79bb\u6700\u4f18\u70b9\u3002 2\uff09 \u5982\u4f55\u786e\u5b9a\u5b66\u4e60\u7387\u7684\u8c03\u6574\u7b56\u7565\uff1f \u76ee\u524d\u8c03\u6574\u5b66\u4e60\u7387\u57fa\u672c\u90fd\u6309\u7167\u4e00\u79cd \u201c\u9000\u706b\u201d\u7684\u601d\u60f3\uff0c\u8981\u4e48\u6309\u7167\u9884\u5b9a\u6a21\u5f0f\u8c03\u6574\uff0c\u8981\u4e48\u6839\u636e\u76ee\u6807\u51fd\u6570\u503c\u7684\u53d8\u5316\u662f\u5426\u6ee1\u8db3\u9608\u503c\u52a8\u6001\u6539\u53d8\u5b66\u4e60\u7387\u3002 \u4f46\u662f\uff0c\u201c\u6a21\u5f0f\u201d\u548c\u201c\u9608\u503c\u201d\u90fd\u9700\u8981\u4e8b\u5148\u6307\u5b9a\uff0c\u65e0\u6cd5\u81ea\u9002\u5e94\u4e0d\u540c\u6570\u636e\u96c6\u3002 3\uff09 \u5bf9\u6240\u6709\u53c2\u6570\u7684\u66f4\u65b0\u91c7\u7528\u76f8\u540c\u7684\u5b66\u4e60\u7387\u662f\u5426\u6070\u5f53\uff1f \u5982\u679c\u6570\u636e\u662f\u7a00\u758f\u7684\u4e14\u7279\u5f81\u5206\u5e03\u4e0d\u5747\uff0c\u4f3c\u4e4e\u6211\u4eec\u66f4\u5e94\u8be5\u7ed9\u4e88\u8f83\u5c11\u51fa\u73b0\u7684\u7279\u5f81\u4e00\u4e2a\u5927\u7684\u66f4\u65b0\u3002 4\uff09 \u5982\u4f55\u8df3\u51fa\u5c40\u90e8\u6700\u4f18\uff1f \u7406\u8bba\u4e0a\u53ea\u6709\u4e25\u683c\u7684\u51f8\u51fd\u6570\u624d\u53ef\u4ee5\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u4f46\u662f\uff0c\u795e\u7ecf\u7f51\u7edc\u6240\u9762\u4e34\u7684\u57fa\u672c\u4e0a\u90fd\u662f\u4e25\u91cd\u975e\u51f8\u7684\u76ee\u6807\u51fd\u6570\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u4f18\u5316\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6700\u4f18\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7684\u56f0\u96be\u5f80\u5f80\u6765\u81ea \u201c\u978d\u70b9\u201d \u800c\u975e\u5c40\u90e8\u6781\u5c0f\u70b9\u3002 \u978d\u70b9\u5468\u56f4\u901a\u5e38\u62e5\u6709\u76f8\u540c\u7684\u635f\u5931\u51fd\u6570\u503c\uff0c\u8fd9\u5bfc\u81f4SGD\u5f88\u96be\u53d1\u6325\u4f5c\u7528\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u65b9\u5411\u7684\u68af\u5ea6\u90fd\u63a5\u8fd1\u4e8e0.","title":"\u6311\u6218"},{"location":"ai/tdxj/#_6","text":"\u4e0b\u9762\u8bf4\u4e00\u4e9b\u5728\u6df1\u5ea6\u5b66\u4e60\u4e2d\u5e38\u7528\u7684\u7528\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u7684\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u65b9\u6cd5\u3002 \u4e00\u4e9b\u5bf9\u9ad8\u7ef4\u6570\u636e\u4e0d\u53ef\u884c\u7684\u65b9\u6cd5\u4e0d\u518d\u8ba8\u8bba\uff0c\u5982\u4e8c\u9636\u65b9\u6cd5\u4e2d\u7684\u725b\u987f\u6cd5\u3002 Momentum Nesterov accelerated gradient Adagrad Adadelta RMSprop Adam AdaMax \u6240\u6709\u4ee5\u4e0a\u4f18\u5316\u7b97\u6cd5,\u7531\u4e8e\u535a\u4e3b\u7814\u7a76\u4e0d\u6df1\u5165,\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u53bb \u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5\u603b\u7ed3 \u8fdb\u884c\u8be6\u7ec6\u7684\u5b66\u4e60\u3002","title":"\u68af\u5ea6\u4e0b\u964d\u4f18\u5316\u7b97\u6cd5"},{"location":"ai/tdxj/#_7","text":"","title":"\u4ee3\u7801\u7ec3\u4e60"},{"location":"ai/tdxj/#bgd","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 #\u5f15\u5e93 #\u5f15\u5165matplotlib\u5e93,\u7528\u4e8e\u753b\u56fe import matplotlib.pyplot as plt from math import pow #\u56fe\u7247\u5d4c\u5165jupyter % matplotlib inline #\u4e3a\u4e86\u4fbf\u4e8e\u53d6\u7528\u6570\u636e,\u6211\u4eec\u5c06\u6570\u636e\u5206\u4e3ax,y,\u5728\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d(x,y)\u662f\u70b9 x = [ 1 , 2 , 3 , 4 , 5 , 6 ] y = [ 13 , 14 , 20 , 21 , 25 , 30 ] print ( \"\u6253\u5370\u521d\u59cb\u6570\u636e\u56fe...\" ) plt . scatter ( x , y ) plt . xlabel ( \"X\" ) plt . ylabel ( \"Y\" ) plt . show () #\u8d85\u53c2\u6570\u8bbe\u5b9a alpha = 0.01 #\u5b66\u4e60\u7387/\u6b65\u957f theta0 = 0 #\u03b80 theta1 = 0 #\u03b81 epsilon = 0.001 #\u8bef\u5dee m = len ( x ) count = 0 loss = [] for time in range ( 1000 ): count += 1 #\u6c42\u504f\u5bfctheta0\u548ctheta1\u7684\u7ed3\u679c temp0 = 0 #J(\u03b8)\u5bf9\u03b80\u6c42\u5bfc\u7684\u7ed3\u679c temp1 = 0 #J(\u03b8)\u5bf9\u03b81\u6c42\u5bfc\u7684\u7ed3\u679c diss = 0 for i in range ( m ): temp0 += ( theta0 + theta1 * x [ i ] - y [ i ]) / m temp1 += (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u66f4\u65b0theta0\u548ctheta1 for i in range ( m ): theta0 = theta0 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) theta1 = theta1 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u6c42\u635f\u5931\u51fd\u6570J(\u03b8) for i in range ( m ): diss = diss + 0.5 * ( 1 / m ) * pow (( theta0 + theta1 * x [ i ] - y [ i ]), 2 ) loss . append ( diss ) #\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 ''' if diss<=epsilon: break else: continue ''' print ( \"\u6700\u7ec8\u7684\u7ed3\u679c\u4e3a:\" ) print ( \"\u6b64\u6b21\u8fed\u4ee3\u6b21\u6570\u4e3a:{}\u6b21,\u6700\u7ec8theta0\u7684\u7ed3\u679c\u4e3a:{},\u6700\u7ec8theta1\u7684\u7ed3\u679c\u4e3a:{}\" . format ( count , theta0 , theta1 )) print ( \"\u9884\u6d4b\u7684\u6700\u7ec8\u56de\u5f52\u51fd\u6570\u4e3a:y={}+{}x \\n \" . format ( theta0 , theta1 )) print ( \"\u8fed\u4ee3\u56fe\u50cf\u7ed8\u5236...\" ) plt . scatter ( range ( count ), loss ) plt . show () \u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u6279\u91cf\u68af\u5ea6\u4e0b\u964d(BGD)"},{"location":"ai/tdxj/#sgd","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #\u5f15\u5e93 #\u5f15\u5165matplotlib\u5e93,\u7528\u4e8e\u753b\u56fe import matplotlib.pyplot as plt from math import pow import numpy as np #\u56fe\u7247\u5d4c\u5165jupyter % matplotlib inline #\u4e3a\u4e86\u4fbf\u4e8e\u53d6\u7528\u6570\u636e,\u6211\u4eec\u5c06\u6570\u636e\u5206\u4e3ax,y,\u5728\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d(x,y)\u662f\u70b9 x = [ 1 , 2 , 3 , 4 , 5 , 6 ] y = [ 13 , 14 , 20 , 21 , 25 , 30 ] print ( \"\u6253\u5370\u521d\u59cb\u6570\u636e\u56fe...\" ) plt . scatter ( x , y ) plt . xlabel ( \"X\" ) plt . ylabel ( \"Y\" ) plt . show () #\u8d85\u53c2\u6570\u8bbe\u5b9a alpha = 0.01 #\u5b66\u4e60\u7387/\u6b65\u957f theta0 = 0 #\u03b80 theta1 = 0 #\u03b81 epsilon = 0.001 #\u8bef\u5dee m = len ( x ) count = 0 loss = [] for time in range ( 1000 ): count += 1 diss = 0 #\u6c42\u504f\u5bfctheta0\u548ctheta1\u7684\u7ed3\u679c temp0 = 0 #J(\u03b8)\u5bf9\u03b80\u6c42\u5bfc\u7684\u7ed3\u679c temp1 = 0 #J(\u03b8)\u5bf9\u03b81\u6c42\u5bfc\u7684\u7ed3\u679c for i in range ( m ): temp0 += ( theta0 + theta1 * x [ i ] - y [ i ]) / m temp1 += (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u66f4\u65b0theta0\u548ctheta1 for i in range ( m ): theta0 = theta0 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) theta1 = theta1 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u6c42\u635f\u5931\u51fd\u6570J(\u03b8) rand_i = np . random . randint ( 0 , m ) diss += 0.5 * ( 1 / m ) * pow (( theta0 + theta1 * x [ rand_i ] - y [ rand_i ]), 2 ) loss . append ( diss ) #\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 ''' if diss<=epsilon: break else: continue ''' print ( \"\u6700\u7ec8\u7684\u7ed3\u679c\u4e3a:\" ) print ( \"\u6b64\u6b21\u8fed\u4ee3\u6b21\u6570\u4e3a:{}\u6b21,\u6700\u7ec8theta0\u7684\u7ed3\u679c\u4e3a:{},\u6700\u7ec8theta1\u7684\u7ed3\u679c\u4e3a:{}\" . format ( count , theta0 , theta1 )) print ( \"\u9884\u6d4b\u7684\u6700\u7ec8\u56de\u5f52\u51fd\u6570\u4e3a:y={}+{}x \\n \" . format ( theta0 , theta1 )) print ( \"\u8fed\u4ee3\u56fe\u50cf\u7ed8\u5236...\" ) plt . scatter ( range ( count ), loss ) plt . show () \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d(SGD)"},{"location":"ai/tdxj/#mbgd","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 #\u5f15\u5e93 #\u5f15\u5165matplotlib\u5e93,\u7528\u4e8e\u753b\u56fe import matplotlib.pyplot as plt from math import pow import numpy as np #\u56fe\u7247\u5d4c\u5165jupyter % matplotlib inline #\u4e3a\u4e86\u4fbf\u4e8e\u53d6\u7528\u6570\u636e,\u6211\u4eec\u5c06\u6570\u636e\u5206\u4e3ax,y,\u5728\u76f4\u89d2\u5750\u6807\u7cfb\u4e2d(x,y)\u662f\u70b9 x = [ 1 , 2 , 3 , 4 , 5 , 6 ] y = [ 13 , 14 , 20 , 21 , 25 , 30 ] print ( \"\u6253\u5370\u521d\u59cb\u6570\u636e\u56fe...\" ) plt . scatter ( x , y ) plt . xlabel ( \"X\" ) plt . ylabel ( \"Y\" ) plt . show () #\u8d85\u53c2\u6570\u8bbe\u5b9a alpha = 0.01 #\u5b66\u4e60\u7387/\u6b65\u957f theta0 = 0 #\u03b80 theta1 = 0 #\u03b81 epsilon = 0.001 #\u8bef\u5dee diss = 0 #\u635f\u5931\u51fd\u6570 m = len ( x ) count = 0 loss = [] for time in range ( 1000 ): count += 1 diss = 0 #\u6c42\u504f\u5bfctheta0\u548ctheta1\u7684\u7ed3\u679c temp0 = 0 #J(\u03b8)\u5bf9\u03b80\u6c42\u5bfc\u7684\u7ed3\u679c temp1 = 0 #J(\u03b8)\u5bf9\u03b81\u6c42\u5bfc\u7684\u7ed3\u679c for i in range ( m ): temp0 += ( theta0 + theta1 * x [ i ] - y [ i ]) / m temp1 += (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u66f4\u65b0theta0\u548ctheta1 for i in range ( m ): theta0 = theta0 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) theta1 = theta1 - alpha * (( theta0 + theta1 * x [ i ] - y [ i ]) / m ) * x [ i ] #\u6c42\u635f\u5931\u51fd\u6570J(\u03b8) result = [] for i in range ( 3 ): rand_i = np . random . randint ( 0 , m ) result . append ( rand_i ) for j in result : diss += 0.5 * ( 1 / m ) * pow (( theta0 + theta1 * x [ j ] - y [ j ]), 2 ) loss . append ( diss ) #\u770b\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 ''' if diss<=epsilon: break else: continue ''' print ( \"\u6700\u7ec8\u7684\u7ed3\u679c\u4e3a:\" ) print ( \"\u6b64\u6b21\u8fed\u4ee3\u6b21\u6570\u4e3a:{}\u6b21,\u6700\u7ec8theta0\u7684\u7ed3\u679c\u4e3a:{},\u6700\u7ec8theta1\u7684\u7ed3\u679c\u4e3a:{}\" . format ( count , theta0 , theta1 )) print ( \"\u9884\u6d4b\u7684\u6700\u7ec8\u56de\u5f52\u51fd\u6570\u4e3a:y={}+{}x \\n \" . format ( theta0 , theta1 )) print ( \"\u8fed\u4ee3\u56fe\u50cf\u7ed8\u5236...\" ) plt . scatter ( range ( count ), loss ) plt . show () \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u8fd0\u884c\u7ed3\u679c\u67e5\u770b","title":"\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d(MBGD)"},{"location":"ai/usercf/","text":"\u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4\u6982\u8ff0 \u00b6 \u534f\u540c\u8fc7\u6ee4 \u00b6 \u4ecb\u7ecd \u00b6 \u534f\u540c\u8fc7\u6ee4\u63a8\u8350\u7b97\u6cd5\u662f\u8bde\u751f\u6700\u65e9\uff0c\u5e76\u4e14\u8f83\u4e3a\u8457\u540d\u7684\u63a8\u8350\u7b97\u6cd5\u3002\u4e3b\u8981\u7684\u529f\u80fd\u662f\u9884\u6d4b\u548c\u63a8\u8350\u3002\u7b97\u6cd5\u901a\u8fc7\u5bf9\u7528\u6237\u5386\u53f2\u884c\u4e3a\u6570\u636e\u7684\u6316\u6398\u53d1\u73b0\u7528\u6237\u7684\u504f\u597d\uff0c\u57fa\u4e8e\u4e0d\u540c\u7684\u504f\u597d\u5bf9\u7528\u6237\u8fdb\u884c\u7fa4\u7ec4\u5212\u5206\u5e76\u63a8\u8350\u54c1\u5473\u76f8\u4f3c\u7684\u5546\u54c1\u3002 \u534f\u540c\u8fc7\u6ee4(Collaborative Filtering)\u4f5c\u4e3a\u63a8\u8350\u7b97\u6cd5\u4e2d\u6700\u7ecf\u5178\u7684\u7c7b\u578b\uff0c\u5305\u62ec\u5728\u7ebf\u7684\u534f\u540c\u548c\u79bb\u7ebf\u7684\u8fc7\u6ee4\u4e24\u90e8\u5206\u3002\u6240\u8c13\u5728\u7ebf\u534f\u540c\uff0c\u5c31\u662f\u901a\u8fc7\u5728\u7ebf\u6570\u636e\u627e\u5230\u7528\u6237\u53ef\u80fd\u559c\u6b22\u7684\u7269\u54c1\uff0c\u800c\u79bb\u7ebf\u8fc7\u6ee4\uff0c\u5219\u662f\u8fc7\u6ee4\u6389\u4e00\u4e9b\u4e0d\u503c\u5f97\u63a8\u8350\u7684\u6570\u636e\uff0c\u6bd4\u5982\u63a8\u8350\u503c\u8bc4\u5206\u4f4e\u7684\u6570\u636e\uff0c\u6216\u8005\u867d\u7136\u63a8\u8350\u503c\u9ad8\u4f46\u662f\u7528\u6237\u5df2\u7ecf\u8d2d\u4e70\u7684\u6570\u636e\u3002 \u534f\u540c\u8fc7\u6ee4\u7684\u6a21\u578b\u4e00\u822c\u4e3am\u4e2a\u7269\u54c1\uff0cm\u4e2a\u7528\u6237\u7684\u6570\u636e\uff0c\u5728\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u53ea\u6709\u90e8\u5206\u7528\u6237\u548c\u90e8\u5206\u6570\u636e\u4e4b\u95f4\u662f\u6709\u8bc4\u5206\u6570\u636e\u7684\uff0c\u5176\u5b83\u90e8\u5206\u8bc4\u5206\u662f\u7a7a\u767d\uff0c\u6b64\u65f6\u6211\u4eec\u8981\u7528\u5df2\u6709\u7684\u90e8\u5206\u7a00\u758f\u6570\u636e\u6765\u9884\u6d4b\u90a3\u4e9b\u7a7a\u767d\u7684\u7269\u54c1\u548c\u6570\u636e\u4e4b\u95f4\u7684\u8bc4\u5206\u5173\u7cfb\uff0c\u627e\u5230\u6700\u9ad8\u8bc4\u5206\u7684\u7269\u54c1\u63a8\u8350\u7ed9\u7528\u6237\u3002 \u6b65\u9aa4 \u00b6 1\uff09\u6536\u96c6\u7528\u6237\u7684\u7231\u597d \u8981\u4ece\u7528\u6237\u7684\u884c\u4e3a\u548c\u504f\u597d\u4e2d\u53d1\u73b0\u89c4\u5f8b\uff0c\u5e76\u57fa\u4e8e\u6b64\u7ed9\u4e88\u63a8\u8350\uff0c\u5982\u4f55\u6536\u96c6\u7528\u6237\u7684\u504f\u597d\u4fe1\u606f\u6210\u4e3a\u7cfb\u7edf\u63a8\u8350\u6548\u679c\u6700\u57fa\u7840\u7684\u51b3\u5b9a\u56e0\u7d20\u3002\u7528\u6237\u6709\u5f88\u591a\u65b9\u5f0f\u5411\u7cfb\u7edf\u63d0\u4f9b\u81ea\u5df1\u7684\u504f\u597d\u4fe1\u606f\uff0c\u800c\u4e14\u4e0d\u540c\u7684\u5e94\u7528\u4e5f\u53ef\u80fd\u5927\u4e0d\u76f8\u540c\u3002 \u4ee5\u4e0a\u5217\u4e3e\u7684\u7528\u6237\u884c\u4e3a\u90fd\u662f\u6bd4\u8f83\u901a\u7528\u7684\uff0c\u63a8\u8350\u5f15\u64ce\u8bbe\u8ba1\u4eba\u5458\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u5e94\u7528\u7684\u7279\u70b9\u6dfb\u52a0\u7279\u6b8a\u7684\u7528\u6237\u884c\u4e3a\uff0c\u5e76\u7528\u4ed6\u4eec\u8868\u793a\u7528\u6237\u5bf9\u7269\u54c1\u7684\u559c\u597d\u3002\u5728\u4e00\u822c\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u63d0\u53d6\u7684\u7528\u6237\u884c\u4e3a\u4e00\u822c\u90fd\u591a\u4e8e\u4e00\u79cd\uff0c\u5173\u4e8e\u5982\u4f55\u7ec4\u5408\u8fd9\u4e9b\u4e0d\u540c\u7684\u7528\u6237\u884c\u4e3a\uff0c\u57fa\u672c\u4e0a\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a \u5c06\u4e0d\u540c\u7684\u884c\u4e3a \u5206\u7ec4 \uff1a\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u201c\u67e5\u770b\u201d\u548c\u201c\u8d2d\u4e70\u201d\u7b49\u7b49\uff0c\u7136\u540e\u57fa\u4e8e\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u8ba1\u7b97\u4e0d\u540c\u7684\u7528\u6237 / \u7269\u54c1\u76f8\u4f3c\u5ea6\u3002\u7c7b\u4f3c\u4e8e\u5f53\u5f53\u7f51\u6216\u8005 Amazon \u7ed9\u51fa\u7684\u201c\u8d2d\u4e70\u4e86\u8be5\u56fe\u4e66\u7684\u4eba\u8fd8\u8d2d\u4e70\u4e86 ...\u201d\uff0c\u201c\u67e5\u770b\u4e86\u56fe\u4e66\u7684\u4eba\u8fd8\u67e5\u770b\u4e86 ...\u201d\u3002 \u6839\u636e\u4e0d\u540c\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u5c06\u5b83\u4eec\u8fdb\u884c \u52a0\u6743 \uff0c\u5f97\u5230\u7528\u6237\u5bf9\u4e8e\u7269\u54c1\u7684\u603b\u4f53\u559c\u597d\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u663e\u5f0f\u7684\u7528\u6237\u53cd\u9988\u6bd4\u9690\u5f0f\u7684\u6743\u503c\u5927\uff0c\u4f46\u6bd4\u8f83\u7a00\u758f\uff0c\u6bd5\u7adf\u8fdb\u884c\u663e\u793a\u53cd\u9988\u7684\u7528\u6237\u662f\u5c11\u6570\uff1b\u540c\u65f6\u76f8\u5bf9\u4e8e\u201c\u67e5\u770b\u201d\uff0c\u201c\u8d2d\u4e70\u201d\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u66f4\u5927\uff0c\u4f46\u8fd9\u4e5f\u56e0\u5e94\u7528\u800c\u5f02\u3002 \u5c06\u4e0d\u540c\u7684\u884c\u4e3a\u5206\u7ec4\uff1a\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u201c\u67e5\u770b\u201d\u548c\u201c\u8d2d\u4e70\u201d\u7b49\u7b49\uff0c\u7136\u540e\u57fa\u4e8e\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u8ba1\u7b97\u4e0d\u540c\u7684\u7528\u6237 / \u7269\u54c1\u76f8\u4f3c\u5ea6\u3002\u7c7b\u4f3c\u4e8e\u5f53\u5f53\u7f51\u6216\u8005 Amazon \u7ed9\u51fa\u7684\u201c\u8d2d\u4e70\u4e86\u8be5\u56fe\u4e66\u7684\u4eba\u8fd8\u8d2d\u4e70\u4e86 ...\u201d\uff0c\u201c\u67e5\u770b\u4e86\u56fe\u4e66\u7684\u4eba\u8fd8\u67e5\u770b\u4e86 ...\u201d\u3002 \u6839\u636e\u4e0d\u540c\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u5c06\u5b83\u4eec\u8fdb\u884c\u52a0\u6743\uff0c\u5f97\u5230\u7528\u6237\u5bf9\u4e8e\u7269\u54c1\u7684\u603b\u4f53\u559c\u597d\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u663e\u5f0f\u7684\u7528\u6237\u53cd\u9988\u6bd4\u9690\u5f0f\u7684\u6743\u503c\u5927\uff0c\u4f46\u6bd4\u8f83\u7a00\u758f\uff0c\u6bd5\u7adf\u8fdb\u884c\u663e\u793a\u53cd\u9988\u7684\u7528\u6237\u662f\u5c11\u6570\uff1b\u540c\u65f6\u76f8\u5bf9\u4e8e\u201c\u67e5\u770b\u201d\uff0c\u201c\u8d2d\u4e70\u201d\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u66f4\u5927\uff0c\u4f46\u8fd9\u4e5f\u56e0\u5e94\u7528\u800c\u5f02\u3002 \u6536\u96c6\u4e86\u7528\u6237\u884c\u4e3a\u6570\u636e\u540e\uff0c\u8fdb\u884c\u7ec4\u5408\u4e0d\u540c\u7528\u6237\u884c\u4e3a\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u5b9a\u7684\u9884\u5904\u7406\uff0c\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u5de5\u4f5c\u5c31\u662f\uff1a\u51cf\u566a\u548c\u5f52\u4e00\u5316\u3002\u8fdb\u884c\u4e86\u9884\u5904\u7406\u540e\uff0c\u6839\u636e\u4e0d\u540c\u5e94\u7528\u7684\u884c\u4e3a\u5206\u6790\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u9009\u62e9\u6211\u4eec\u4f7f\u7528\u4e0a\u8ff0\u6240\u63d0\u5230\u7684\u5206\u7ec4\u6216\u8005\u52a0\u6743\u5904\u7406\uff0c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7528\u6237\u504f\u597d\u7684\u4e8c\u7ef4\u77e9\u9635\uff0c\u4e00\u7ef4\u662f\u7528\u6237\u5217\u8868\uff0c\u53e6\u4e00\u7ef4\u662f\u7269\u54c1\u5217\u8868\uff0c\u503c\u662f\u7528\u6237\u5bf9\u7269\u54c1\u7684\u504f\u597d\uff0c\u4e00\u822c\u662f [0,1] \u6216\u8005 [-1, 1] \u7684\u6d6e\u70b9\u6570\u503c\u3002 2\uff09\u627e\u5230\u76f8\u4f3c\u7684\u7528\u6237\u6216\u8005\u7269\u54c1 \u5f53\u5df2\u7ecf\u5bf9\u7528\u6237\u884c\u4e3a\u8fdb\u884c\u5206\u6790\u5f97\u5230\u7528\u6237\u559c\u597d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u7528\u6237\u559c\u597d\u8ba1\u7b97\u76f8\u4f3c\u7528\u6237\u548c\u7269\u54c1\uff0c\u7136\u540e\u57fa\u4e8e\u76f8\u4f3c\u7528\u6237\u6216\u8005\u7269\u54c1\u8fdb\u884c\u63a8\u8350\uff0c\u8fd9\u5c31\u662f\u6700\u5178\u578b\u7684 CF \u7684\u4e24\u4e2a\u5206\u652f\uff1a \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4(UserCF) \u548c \u57fa\u4e8e\u7269\u54c1\u7684\u534f\u540c\u8fc7\u6ee4(ItemCF) \u3002 \u7136\u540e\u5728\u8fd9\u5176\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u4e86,\u5e38\u7528\u7684\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u6709: \u5411\u91cf\u7a7a\u95f4\u4f59\u5f26\u76f8\u4f3c\u5ea6(Cosine Similarity) \u76ae\u5c14\u68ee\u76f8\u5173\u7cfb\u6570(Pearson Correlation Coefficient) Jaccard\u76f8\u4f3c\u7cfb\u6570(Jaccard Coefficient) \u8c03\u6574\u4f59\u5f26\u76f8\u4f3c\u5ea6(Adjusted Cosine Similarity) (\u2605\u8865\u5145)\u8ddd\u79bb\u8ba1\u7b97\u548c\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u533a\u5206: \u8ddd\u79bb\u5ea6\u91cf\uff08Distance\uff09\u7528\u4e8e\u8861\u91cf\u4e2a\u4f53\u5728\u7a7a\u95f4\u4e0a\u5b58\u5728\u7684\u8ddd\u79bb\uff0c\u8ddd\u79bb\u8d8a\u8fdc\u8bf4\u660e\u4e2a\u4f53\u95f4\u7684\u5dee\u5f02\u8d8a\u5927\u3002 \u76f8\u4f3c\u5ea6\u5ea6\u91cf\uff08Similarity\uff09\uff0c\u5373\u8ba1\u7b97\u4e2a\u4f53\u95f4\u7684\u76f8\u4f3c\u7a0b\u5ea6\uff0c\u4e0e\u8ddd\u79bb\u5ea6\u91cf\u76f8\u53cd\uff0c\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u7684\u503c\u8d8a\u5c0f\uff0c\u8bf4\u660e\u4e2a\u4f53\u95f4\u76f8\u4f3c\u5ea6\u8d8a\u5c0f\uff0c\u5dee\u5f02\u8d8a\u5927\u3002 \u5e38\u7528\u7684\u8ddd\u79bb\u8ba1\u7b97: \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb(Euclidean Distance) \u660e\u53ef\u592b\u65af\u57fa\u8ddd\u79bb(Minkowski Distance) \u66fc\u54c8\u987f\u8ddd\u79bb(Manhattan Distance) \u5207\u6bd4\u96ea\u592b\u8ddd\u79bb(Chebyshev Distance) \u9a6c\u54c8\u62c9\u8bfa\u6bd4\u65af\u8ddd\u79bb(Mahalanobis Distance) \u6ce8\u610f :\u5728\u5b9e\u9645\u7684\u5e94\u7528\u4e2d\u8ddd\u79bb\u5ea6\u91cf\u548c\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u7684\u8ba1\u7b97\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u4e8e\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97!!! 3\uff09\u63a8\u8350 \u6839\u636e\u7528\u6237\u7684\u559c\u6b22\u7a0b\u5ea6(\u8bc4\u5206)\u4e0e\u5f97\u5230\u7684\u76f8\u4f3c\u77e9\u9635\u7684\u8ba1\u7b97\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f(\u9009\u53d6\u76f8\u4f3c\u5ea6\u6700\u9ad8\u7684\u524dk\u4e2a)\u63a8\u8350\u3002 4\uff09\u6a21\u578b\u8bc4\u4f30 \u5747\u65b9\u8bef\u5dee(MSE) \u5747\u65b9\u6839\u8bef\u5dee(RMSE) \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee(MAE) \u6807\u51c6\u5dee(SD) \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4 \u00b6 \u4ecb\u7ecd \u00b6 \u57fa\u4e8e\u7528\u6237\u7684 CF \u7684\u57fa\u672c\u601d\u60f3\u76f8\u5f53\u7b80\u5355\uff0c\u57fa\u4e8e\u7528\u6237\u5bf9\u7269\u54c1\u7684\u504f\u597d\u627e\u5230\u76f8\u90bb\u90bb\u5c45\u7528\u6237\uff0c\u7136\u540e\u5c06\u90bb\u5c45\u7528\u6237\u559c\u6b22\u7684\u63a8\u8350\u7ed9\u5f53\u524d\u7528\u6237\u3002\u8ba1\u7b97\u4e0a\uff0c\u5c31\u662f\u5c06\u4e00\u4e2a\u7528\u6237\u5bf9\u6240\u6709\u7269\u54c1\u7684\u504f\u597d\u4f5c\u4e3a\u4e00\u4e2a\u5411\u91cf\u6765\u8ba1\u7b97\u7528\u6237\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u627e\u5230 K \u90bb\u5c45\u540e\uff0c\u6839\u636e\u90bb\u5c45\u7684\u76f8\u4f3c\u5ea6\u6743\u91cd\u4ee5\u53ca\u4ed6\u4eec\u5bf9\u7269\u54c1\u7684\u504f\u597d\uff0c\u9884\u6d4b\u5f53\u524d\u7528\u6237\u6ca1\u6709\u504f\u597d\u7684\u672a\u6d89\u53ca\u7269\u54c1\uff0c\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u6392\u5e8f\u7684\u7269\u54c1\u5217\u8868\u4f5c\u4e3a\u63a8\u8350\u3002\u4e0b\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u7528\u6237 A\uff0c\u6839\u636e\u7528\u6237\u7684\u5386\u53f2\u504f\u597d\uff0c\u8fd9\u91cc\u53ea\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u90bb\u5c45 - \u7528\u6237 C\uff0c\u7136\u540e\u5c06\u7528\u6237 C \u559c\u6b22\u7684\u7269\u54c1 D \u63a8\u8350\u7ed9\u7528\u6237 A\u3002 \u63a8\u5bfc \u00b6 1\uff09(\u5efa\u7acb\u7269\u54c1-\u7528\u6237\u7684\u5012\u67e5\u8868) 2\uff09\u5efa\u7acb\u7528\u6237-\u7528\u6237\u7684\u7a00\u758f\u77e9\u9635(\u5171\u73b0\u77e9\u9635/\u540c\u73b0\u77e9\u9635) 3\uff09\u5efa\u7acb\u76f8\u4f3c\u77e9\u9635(\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff1a\u627e\u5230\u548c\u76ee\u6807\u7528\u6237\u5174\u8da3\u76f8\u4f3c\u7684\u7528\u6237\u96c6\u5408) 4\uff09\u63a8\u8350(\u6784\u5efa\u63a8\u8350\u77e9\u9635\uff1a\u627e\u5230\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7528\u6237\u559c\u6b22\u7684\uff0c\u4e14\u76ee\u6807\u7528\u6237\u6ca1\u6709\u542c\u8bf4\u8fc7\u7684\u7269\u54c1\u63a8\u8350\u7ed9\u76ee\u6807\u7528\u6237) \u5b9e\u4f8b\u63a8\u5bfc: \u4ee3\u7801\u5b9e\u73b0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 from operator import * import math #\u4f8b\u5b50\u4e2d\u7684\u6570\u636e\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u7528\u6237\u5b57\u5178{A:(a,b,d),B:(a,c),C:(b,e),D:(c,d,e)} #\u6211\u4eec\u8fd9\u6837\u5b58\u50a8\u539f\u59cb\u8f93\u5165\u6570\u636e dic = { 'A' :( 'a' , 'b' , 'd' ), 'B' :( 'a' , 'c' ), 'C' :( 'b' , 'e' ), 'D' :( 'c' , 'd' , 'e' )} #\u7b80\u5355\u7c97\u66b4\uff0c\u8bb0\u5f97\u52a0'' #\u8ba1\u7b97\u7528\u6237\u5174\u8da3\u76f8\u4f3c\u5ea6 def Usersim ( dicc ): #\u628a\u7528\u6237-\u5546\u54c1\u5b57\u5178\u8f6c\u6210\u5546\u54c1-\u7528\u6237\u5b57\u5178\uff08\u5982\u56fe\u4e2d\u7bad\u5934\u6307\u793a\u90a3\u6837\uff09 item_user = dict () for u , items in dicc . items (): for i in items : #\u6587\u4e2d\u7684\u4f8b\u5b50\u662f\u4e0d\u5e26\u8bc4\u5206\u7684\uff0c\u6240\u4ee5\u7528\u7684\u662f\u5143\u7ec4\u800c\u4e0d\u662f\u5d4c\u5957\u5b57\u5178\u3002 if i not in item_user . keys (): item_user [ i ] = set () #i\u952e\u6240\u5bf9\u5e94\u7684\u503c\u662f\u4e00\u4e2a\u96c6\u5408\uff08\u4e0d\u91cd\u590d\uff09\u3002 item_user [ i ] . add ( u ) #\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u7528\u6237\u3002 C = dict () #\u611f\u89c9\u7528\u6570\u7ec4\u66f4\u597d\u4e00\u4e9b\uff0c\u771f\u5b9e\u6570\u636e\u96c6\u662f\u6570\u5b57\u7f16\u53f7\uff0c\u4f46\u8fd9\u91cc\u662f\u5b57\u7b26\uff0c\u8fd9\u8fb9\u8fd8\u7528\u5b57\u5178\u3002 N = dict () for item , users in item_user . items (): for u in users : if u not in N . keys (): N [ u ] = 0 #\u4e66\u4e2d\u6ca1\u6709\u8fd9\u4e00\u6b65\uff0c\u4f46\u662f\u5b57\u5178\u6ca1\u6709\u521d\u59cb\u503c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u76f8\u52a0\u5427 N [ u ] += 1 #\u6bcf\u4e2a\u5546\u54c1\u4e0b\u7528\u6237\u51fa\u73b0\u4e00\u6b21\u5c31\u52a0\u4e00\u6b21\uff0c\u5c31\u662f\u8ba1\u7b97\u6bcf\u4e2a\u7528\u6237\u4e00\u5171\u8d2d\u4e70\u7684\u5546\u54c1\u4e2a\u6570\u3002 #\u4f46\u662f\u8fd9\u4e2a\u503c\u4e5f\u53ef\u4ee5\u4ece\u6700\u5f00\u59cb\u7684\u7528\u6237\u8868\u4e2d\u83b7\u5f97\u3002 #\u6bd4\u5982\uff1a for u in dic.keys(): # N[u]=len(dic[u]) for v in users : if u == v : continue if ( u , v ) not in C . keys (): #\u540c\u4e0a\uff0c\u6ca1\u6709\u521d\u59cb\u503c\u4e0d\u80fd+= C [ u , v ] = 0 C [ u , v ] += 1 #\u8fd9\u91cc\u6211\u4e0d\u6e05\u695a\u4e66\u4e2d\u662f\u4e0d\u662f\u7528\u7684\u5d4c\u5957\u5b57\u5178\uff0c\u611f\u89c9\u6709\u70b9\u8ff7\u7cca\u3002\u6240\u4ee5\u6211\u8fd9\u6837\u7528\u7684\u5b57\u5178\u3002 #\u5230\u8fd9\u91cc\u5012\u6392\u9635\u5c31\u5efa\u7acb\u597d\u4e86\uff0c\u4e0b\u9762\u662f\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u3002 W = dict () for co_user , cuv in C . items (): W [ co_user ] = cuv / math . sqrt ( N [ co_user [ 0 ]] * N [ co_user [ 1 ]]) return W def Recommend ( user , dicc , W2 , K ): rvi = 1 #\u8fd9\u91cc\u90fd\u662f1,\u5b9e\u9645\u4e2d\u53ef\u80fd\u6bcf\u4e2a\u7528\u6237\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\u5c31\u50cf\u6bcf\u4e2a\u4eba\u90fd\u559c\u6b22beautiful girl,\u4f46\u6709\u7684\u559c\u6b22\u53ef\u7231\u7684\u591a\u4e00\u4e9b\uff0c\u6709\u7684\u559c\u6b22\u5fa1\u59d0\u591a\u4e00\u4e9b\u3002 rank = dict () related_user = [] interacted_items = dicc [ user ] for co_user , item in W2 . items (): if co_user [ 0 ] == user : related_user . append (( co_user [ 1 ], item )) #\u5148\u5efa\u7acb\u4e00\u4e2a\u548c\u5f85\u63a8\u8350\u7528\u6237\u5174\u8da3\u76f8\u5173\u7684\u6240\u6709\u7684\u7528\u6237\u5217\u8868\u3002 for v , wuv in sorted ( related_user , key = itemgetter ( 1 ), reverse = True )[ 0 : K ]: #\u627e\u5230K\u4e2a\u76f8\u5173\u7528\u6237\u4ee5\u53ca\u5bf9\u5e94\u5174\u8da3\u76f8\u4f3c\u5ea6\uff0c\u6309\u5174\u8da3\u76f8\u4f3c\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5217\u3002itemgetter\u8981\u5bfc\u5305\u3002 for i in dicc [ v ]: if i in interacted_items : continue #\u4e66\u4e2d\u5c11\u4e86continue\u8fd9\u4e00\u6b65\u5427\uff1f if i not in rank . keys (): #\u5982\u679c\u4e0d\u5199\u8981\u62a5\u9519\uff0c\u662f\u4e0d\u662f\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff1f rank [ i ] = 0 rank [ i ] += wuv * rvi return rank if __name__ == '__main__' : W3 = Usersim ( dic ) Last_Rank = Recommend ( 'A' , dic , W3 , 2 ) print ( Last_Rank ) \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4\u8fd0\u884c\u7ed3\u679c\u67e5\u770b {'c': 0.4082482904638631, 'e': 0.4082482904638631}","title":"4. \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4"},{"location":"ai/usercf/#_1","text":"","title":"\u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4\u6982\u8ff0"},{"location":"ai/usercf/#_2","text":"","title":"\u534f\u540c\u8fc7\u6ee4"},{"location":"ai/usercf/#_3","text":"\u534f\u540c\u8fc7\u6ee4\u63a8\u8350\u7b97\u6cd5\u662f\u8bde\u751f\u6700\u65e9\uff0c\u5e76\u4e14\u8f83\u4e3a\u8457\u540d\u7684\u63a8\u8350\u7b97\u6cd5\u3002\u4e3b\u8981\u7684\u529f\u80fd\u662f\u9884\u6d4b\u548c\u63a8\u8350\u3002\u7b97\u6cd5\u901a\u8fc7\u5bf9\u7528\u6237\u5386\u53f2\u884c\u4e3a\u6570\u636e\u7684\u6316\u6398\u53d1\u73b0\u7528\u6237\u7684\u504f\u597d\uff0c\u57fa\u4e8e\u4e0d\u540c\u7684\u504f\u597d\u5bf9\u7528\u6237\u8fdb\u884c\u7fa4\u7ec4\u5212\u5206\u5e76\u63a8\u8350\u54c1\u5473\u76f8\u4f3c\u7684\u5546\u54c1\u3002 \u534f\u540c\u8fc7\u6ee4(Collaborative Filtering)\u4f5c\u4e3a\u63a8\u8350\u7b97\u6cd5\u4e2d\u6700\u7ecf\u5178\u7684\u7c7b\u578b\uff0c\u5305\u62ec\u5728\u7ebf\u7684\u534f\u540c\u548c\u79bb\u7ebf\u7684\u8fc7\u6ee4\u4e24\u90e8\u5206\u3002\u6240\u8c13\u5728\u7ebf\u534f\u540c\uff0c\u5c31\u662f\u901a\u8fc7\u5728\u7ebf\u6570\u636e\u627e\u5230\u7528\u6237\u53ef\u80fd\u559c\u6b22\u7684\u7269\u54c1\uff0c\u800c\u79bb\u7ebf\u8fc7\u6ee4\uff0c\u5219\u662f\u8fc7\u6ee4\u6389\u4e00\u4e9b\u4e0d\u503c\u5f97\u63a8\u8350\u7684\u6570\u636e\uff0c\u6bd4\u5982\u63a8\u8350\u503c\u8bc4\u5206\u4f4e\u7684\u6570\u636e\uff0c\u6216\u8005\u867d\u7136\u63a8\u8350\u503c\u9ad8\u4f46\u662f\u7528\u6237\u5df2\u7ecf\u8d2d\u4e70\u7684\u6570\u636e\u3002 \u534f\u540c\u8fc7\u6ee4\u7684\u6a21\u578b\u4e00\u822c\u4e3am\u4e2a\u7269\u54c1\uff0cm\u4e2a\u7528\u6237\u7684\u6570\u636e\uff0c\u5728\u9884\u6d4b\u8fc7\u7a0b\u4e2d\u53ea\u6709\u90e8\u5206\u7528\u6237\u548c\u90e8\u5206\u6570\u636e\u4e4b\u95f4\u662f\u6709\u8bc4\u5206\u6570\u636e\u7684\uff0c\u5176\u5b83\u90e8\u5206\u8bc4\u5206\u662f\u7a7a\u767d\uff0c\u6b64\u65f6\u6211\u4eec\u8981\u7528\u5df2\u6709\u7684\u90e8\u5206\u7a00\u758f\u6570\u636e\u6765\u9884\u6d4b\u90a3\u4e9b\u7a7a\u767d\u7684\u7269\u54c1\u548c\u6570\u636e\u4e4b\u95f4\u7684\u8bc4\u5206\u5173\u7cfb\uff0c\u627e\u5230\u6700\u9ad8\u8bc4\u5206\u7684\u7269\u54c1\u63a8\u8350\u7ed9\u7528\u6237\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/usercf/#_4","text":"1\uff09\u6536\u96c6\u7528\u6237\u7684\u7231\u597d \u8981\u4ece\u7528\u6237\u7684\u884c\u4e3a\u548c\u504f\u597d\u4e2d\u53d1\u73b0\u89c4\u5f8b\uff0c\u5e76\u57fa\u4e8e\u6b64\u7ed9\u4e88\u63a8\u8350\uff0c\u5982\u4f55\u6536\u96c6\u7528\u6237\u7684\u504f\u597d\u4fe1\u606f\u6210\u4e3a\u7cfb\u7edf\u63a8\u8350\u6548\u679c\u6700\u57fa\u7840\u7684\u51b3\u5b9a\u56e0\u7d20\u3002\u7528\u6237\u6709\u5f88\u591a\u65b9\u5f0f\u5411\u7cfb\u7edf\u63d0\u4f9b\u81ea\u5df1\u7684\u504f\u597d\u4fe1\u606f\uff0c\u800c\u4e14\u4e0d\u540c\u7684\u5e94\u7528\u4e5f\u53ef\u80fd\u5927\u4e0d\u76f8\u540c\u3002 \u4ee5\u4e0a\u5217\u4e3e\u7684\u7528\u6237\u884c\u4e3a\u90fd\u662f\u6bd4\u8f83\u901a\u7528\u7684\uff0c\u63a8\u8350\u5f15\u64ce\u8bbe\u8ba1\u4eba\u5458\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u5e94\u7528\u7684\u7279\u70b9\u6dfb\u52a0\u7279\u6b8a\u7684\u7528\u6237\u884c\u4e3a\uff0c\u5e76\u7528\u4ed6\u4eec\u8868\u793a\u7528\u6237\u5bf9\u7269\u54c1\u7684\u559c\u597d\u3002\u5728\u4e00\u822c\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u63d0\u53d6\u7684\u7528\u6237\u884c\u4e3a\u4e00\u822c\u90fd\u591a\u4e8e\u4e00\u79cd\uff0c\u5173\u4e8e\u5982\u4f55\u7ec4\u5408\u8fd9\u4e9b\u4e0d\u540c\u7684\u7528\u6237\u884c\u4e3a\uff0c\u57fa\u672c\u4e0a\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a \u5c06\u4e0d\u540c\u7684\u884c\u4e3a \u5206\u7ec4 \uff1a\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u201c\u67e5\u770b\u201d\u548c\u201c\u8d2d\u4e70\u201d\u7b49\u7b49\uff0c\u7136\u540e\u57fa\u4e8e\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u8ba1\u7b97\u4e0d\u540c\u7684\u7528\u6237 / \u7269\u54c1\u76f8\u4f3c\u5ea6\u3002\u7c7b\u4f3c\u4e8e\u5f53\u5f53\u7f51\u6216\u8005 Amazon \u7ed9\u51fa\u7684\u201c\u8d2d\u4e70\u4e86\u8be5\u56fe\u4e66\u7684\u4eba\u8fd8\u8d2d\u4e70\u4e86 ...\u201d\uff0c\u201c\u67e5\u770b\u4e86\u56fe\u4e66\u7684\u4eba\u8fd8\u67e5\u770b\u4e86 ...\u201d\u3002 \u6839\u636e\u4e0d\u540c\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u5c06\u5b83\u4eec\u8fdb\u884c \u52a0\u6743 \uff0c\u5f97\u5230\u7528\u6237\u5bf9\u4e8e\u7269\u54c1\u7684\u603b\u4f53\u559c\u597d\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u663e\u5f0f\u7684\u7528\u6237\u53cd\u9988\u6bd4\u9690\u5f0f\u7684\u6743\u503c\u5927\uff0c\u4f46\u6bd4\u8f83\u7a00\u758f\uff0c\u6bd5\u7adf\u8fdb\u884c\u663e\u793a\u53cd\u9988\u7684\u7528\u6237\u662f\u5c11\u6570\uff1b\u540c\u65f6\u76f8\u5bf9\u4e8e\u201c\u67e5\u770b\u201d\uff0c\u201c\u8d2d\u4e70\u201d\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u66f4\u5927\uff0c\u4f46\u8fd9\u4e5f\u56e0\u5e94\u7528\u800c\u5f02\u3002 \u5c06\u4e0d\u540c\u7684\u884c\u4e3a\u5206\u7ec4\uff1a\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u201c\u67e5\u770b\u201d\u548c\u201c\u8d2d\u4e70\u201d\u7b49\u7b49\uff0c\u7136\u540e\u57fa\u4e8e\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u8ba1\u7b97\u4e0d\u540c\u7684\u7528\u6237 / \u7269\u54c1\u76f8\u4f3c\u5ea6\u3002\u7c7b\u4f3c\u4e8e\u5f53\u5f53\u7f51\u6216\u8005 Amazon \u7ed9\u51fa\u7684\u201c\u8d2d\u4e70\u4e86\u8be5\u56fe\u4e66\u7684\u4eba\u8fd8\u8d2d\u4e70\u4e86 ...\u201d\uff0c\u201c\u67e5\u770b\u4e86\u56fe\u4e66\u7684\u4eba\u8fd8\u67e5\u770b\u4e86 ...\u201d\u3002 \u6839\u636e\u4e0d\u540c\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u5c06\u5b83\u4eec\u8fdb\u884c\u52a0\u6743\uff0c\u5f97\u5230\u7528\u6237\u5bf9\u4e8e\u7269\u54c1\u7684\u603b\u4f53\u559c\u597d\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u663e\u5f0f\u7684\u7528\u6237\u53cd\u9988\u6bd4\u9690\u5f0f\u7684\u6743\u503c\u5927\uff0c\u4f46\u6bd4\u8f83\u7a00\u758f\uff0c\u6bd5\u7adf\u8fdb\u884c\u663e\u793a\u53cd\u9988\u7684\u7528\u6237\u662f\u5c11\u6570\uff1b\u540c\u65f6\u76f8\u5bf9\u4e8e\u201c\u67e5\u770b\u201d\uff0c\u201c\u8d2d\u4e70\u201d\u884c\u4e3a\u53cd\u6620\u7528\u6237\u559c\u597d\u7684\u7a0b\u5ea6\u66f4\u5927\uff0c\u4f46\u8fd9\u4e5f\u56e0\u5e94\u7528\u800c\u5f02\u3002 \u6536\u96c6\u4e86\u7528\u6237\u884c\u4e3a\u6570\u636e\u540e\uff0c\u8fdb\u884c\u7ec4\u5408\u4e0d\u540c\u7528\u6237\u884c\u4e3a\u4e4b\u524d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u5b9a\u7684\u9884\u5904\u7406\uff0c\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u5de5\u4f5c\u5c31\u662f\uff1a\u51cf\u566a\u548c\u5f52\u4e00\u5316\u3002\u8fdb\u884c\u4e86\u9884\u5904\u7406\u540e\uff0c\u6839\u636e\u4e0d\u540c\u5e94\u7528\u7684\u884c\u4e3a\u5206\u6790\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u9009\u62e9\u6211\u4eec\u4f7f\u7528\u4e0a\u8ff0\u6240\u63d0\u5230\u7684\u5206\u7ec4\u6216\u8005\u52a0\u6743\u5904\u7406\uff0c\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7528\u6237\u504f\u597d\u7684\u4e8c\u7ef4\u77e9\u9635\uff0c\u4e00\u7ef4\u662f\u7528\u6237\u5217\u8868\uff0c\u53e6\u4e00\u7ef4\u662f\u7269\u54c1\u5217\u8868\uff0c\u503c\u662f\u7528\u6237\u5bf9\u7269\u54c1\u7684\u504f\u597d\uff0c\u4e00\u822c\u662f [0,1] \u6216\u8005 [-1, 1] \u7684\u6d6e\u70b9\u6570\u503c\u3002 2\uff09\u627e\u5230\u76f8\u4f3c\u7684\u7528\u6237\u6216\u8005\u7269\u54c1 \u5f53\u5df2\u7ecf\u5bf9\u7528\u6237\u884c\u4e3a\u8fdb\u884c\u5206\u6790\u5f97\u5230\u7528\u6237\u559c\u597d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u7528\u6237\u559c\u597d\u8ba1\u7b97\u76f8\u4f3c\u7528\u6237\u548c\u7269\u54c1\uff0c\u7136\u540e\u57fa\u4e8e\u76f8\u4f3c\u7528\u6237\u6216\u8005\u7269\u54c1\u8fdb\u884c\u63a8\u8350\uff0c\u8fd9\u5c31\u662f\u6700\u5178\u578b\u7684 CF \u7684\u4e24\u4e2a\u5206\u652f\uff1a \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4(UserCF) \u548c \u57fa\u4e8e\u7269\u54c1\u7684\u534f\u540c\u8fc7\u6ee4(ItemCF) \u3002 \u7136\u540e\u5728\u8fd9\u5176\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u4e86,\u5e38\u7528\u7684\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u6709: \u5411\u91cf\u7a7a\u95f4\u4f59\u5f26\u76f8\u4f3c\u5ea6(Cosine Similarity) \u76ae\u5c14\u68ee\u76f8\u5173\u7cfb\u6570(Pearson Correlation Coefficient) Jaccard\u76f8\u4f3c\u7cfb\u6570(Jaccard Coefficient) \u8c03\u6574\u4f59\u5f26\u76f8\u4f3c\u5ea6(Adjusted Cosine Similarity) (\u2605\u8865\u5145)\u8ddd\u79bb\u8ba1\u7b97\u548c\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u533a\u5206: \u8ddd\u79bb\u5ea6\u91cf\uff08Distance\uff09\u7528\u4e8e\u8861\u91cf\u4e2a\u4f53\u5728\u7a7a\u95f4\u4e0a\u5b58\u5728\u7684\u8ddd\u79bb\uff0c\u8ddd\u79bb\u8d8a\u8fdc\u8bf4\u660e\u4e2a\u4f53\u95f4\u7684\u5dee\u5f02\u8d8a\u5927\u3002 \u76f8\u4f3c\u5ea6\u5ea6\u91cf\uff08Similarity\uff09\uff0c\u5373\u8ba1\u7b97\u4e2a\u4f53\u95f4\u7684\u76f8\u4f3c\u7a0b\u5ea6\uff0c\u4e0e\u8ddd\u79bb\u5ea6\u91cf\u76f8\u53cd\uff0c\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u7684\u503c\u8d8a\u5c0f\uff0c\u8bf4\u660e\u4e2a\u4f53\u95f4\u76f8\u4f3c\u5ea6\u8d8a\u5c0f\uff0c\u5dee\u5f02\u8d8a\u5927\u3002 \u5e38\u7528\u7684\u8ddd\u79bb\u8ba1\u7b97: \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb(Euclidean Distance) \u660e\u53ef\u592b\u65af\u57fa\u8ddd\u79bb(Minkowski Distance) \u66fc\u54c8\u987f\u8ddd\u79bb(Manhattan Distance) \u5207\u6bd4\u96ea\u592b\u8ddd\u79bb(Chebyshev Distance) \u9a6c\u54c8\u62c9\u8bfa\u6bd4\u65af\u8ddd\u79bb(Mahalanobis Distance) \u6ce8\u610f :\u5728\u5b9e\u9645\u7684\u5e94\u7528\u4e2d\u8ddd\u79bb\u5ea6\u91cf\u548c\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u7684\u8ba1\u7b97\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u4e8e\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97!!! 3\uff09\u63a8\u8350 \u6839\u636e\u7528\u6237\u7684\u559c\u6b22\u7a0b\u5ea6(\u8bc4\u5206)\u4e0e\u5f97\u5230\u7684\u76f8\u4f3c\u77e9\u9635\u7684\u8ba1\u7b97\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f(\u9009\u53d6\u76f8\u4f3c\u5ea6\u6700\u9ad8\u7684\u524dk\u4e2a)\u63a8\u8350\u3002 4\uff09\u6a21\u578b\u8bc4\u4f30 \u5747\u65b9\u8bef\u5dee(MSE) \u5747\u65b9\u6839\u8bef\u5dee(RMSE) \u5e73\u5747\u7edd\u5bf9\u8bef\u5dee(MAE) \u6807\u51c6\u5dee(SD)","title":"\u6b65\u9aa4"},{"location":"ai/usercf/#_5","text":"","title":"\u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4"},{"location":"ai/usercf/#_6","text":"\u57fa\u4e8e\u7528\u6237\u7684 CF \u7684\u57fa\u672c\u601d\u60f3\u76f8\u5f53\u7b80\u5355\uff0c\u57fa\u4e8e\u7528\u6237\u5bf9\u7269\u54c1\u7684\u504f\u597d\u627e\u5230\u76f8\u90bb\u90bb\u5c45\u7528\u6237\uff0c\u7136\u540e\u5c06\u90bb\u5c45\u7528\u6237\u559c\u6b22\u7684\u63a8\u8350\u7ed9\u5f53\u524d\u7528\u6237\u3002\u8ba1\u7b97\u4e0a\uff0c\u5c31\u662f\u5c06\u4e00\u4e2a\u7528\u6237\u5bf9\u6240\u6709\u7269\u54c1\u7684\u504f\u597d\u4f5c\u4e3a\u4e00\u4e2a\u5411\u91cf\u6765\u8ba1\u7b97\u7528\u6237\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\uff0c\u627e\u5230 K \u90bb\u5c45\u540e\uff0c\u6839\u636e\u90bb\u5c45\u7684\u76f8\u4f3c\u5ea6\u6743\u91cd\u4ee5\u53ca\u4ed6\u4eec\u5bf9\u7269\u54c1\u7684\u504f\u597d\uff0c\u9884\u6d4b\u5f53\u524d\u7528\u6237\u6ca1\u6709\u504f\u597d\u7684\u672a\u6d89\u53ca\u7269\u54c1\uff0c\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u6392\u5e8f\u7684\u7269\u54c1\u5217\u8868\u4f5c\u4e3a\u63a8\u8350\u3002\u4e0b\u56fe\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u7528\u6237 A\uff0c\u6839\u636e\u7528\u6237\u7684\u5386\u53f2\u504f\u597d\uff0c\u8fd9\u91cc\u53ea\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u90bb\u5c45 - \u7528\u6237 C\uff0c\u7136\u540e\u5c06\u7528\u6237 C \u559c\u6b22\u7684\u7269\u54c1 D \u63a8\u8350\u7ed9\u7528\u6237 A\u3002","title":"\u4ecb\u7ecd"},{"location":"ai/usercf/#_7","text":"1\uff09(\u5efa\u7acb\u7269\u54c1-\u7528\u6237\u7684\u5012\u67e5\u8868) 2\uff09\u5efa\u7acb\u7528\u6237-\u7528\u6237\u7684\u7a00\u758f\u77e9\u9635(\u5171\u73b0\u77e9\u9635/\u540c\u73b0\u77e9\u9635) 3\uff09\u5efa\u7acb\u76f8\u4f3c\u77e9\u9635(\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff1a\u627e\u5230\u548c\u76ee\u6807\u7528\u6237\u5174\u8da3\u76f8\u4f3c\u7684\u7528\u6237\u96c6\u5408) 4\uff09\u63a8\u8350(\u6784\u5efa\u63a8\u8350\u77e9\u9635\uff1a\u627e\u5230\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7528\u6237\u559c\u6b22\u7684\uff0c\u4e14\u76ee\u6807\u7528\u6237\u6ca1\u6709\u542c\u8bf4\u8fc7\u7684\u7269\u54c1\u63a8\u8350\u7ed9\u76ee\u6807\u7528\u6237) \u5b9e\u4f8b\u63a8\u5bfc:","title":"\u63a8\u5bfc"},{"location":"ai/usercf/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 from operator import * import math #\u4f8b\u5b50\u4e2d\u7684\u6570\u636e\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u7528\u6237\u5b57\u5178{A:(a,b,d),B:(a,c),C:(b,e),D:(c,d,e)} #\u6211\u4eec\u8fd9\u6837\u5b58\u50a8\u539f\u59cb\u8f93\u5165\u6570\u636e dic = { 'A' :( 'a' , 'b' , 'd' ), 'B' :( 'a' , 'c' ), 'C' :( 'b' , 'e' ), 'D' :( 'c' , 'd' , 'e' )} #\u7b80\u5355\u7c97\u66b4\uff0c\u8bb0\u5f97\u52a0'' #\u8ba1\u7b97\u7528\u6237\u5174\u8da3\u76f8\u4f3c\u5ea6 def Usersim ( dicc ): #\u628a\u7528\u6237-\u5546\u54c1\u5b57\u5178\u8f6c\u6210\u5546\u54c1-\u7528\u6237\u5b57\u5178\uff08\u5982\u56fe\u4e2d\u7bad\u5934\u6307\u793a\u90a3\u6837\uff09 item_user = dict () for u , items in dicc . items (): for i in items : #\u6587\u4e2d\u7684\u4f8b\u5b50\u662f\u4e0d\u5e26\u8bc4\u5206\u7684\uff0c\u6240\u4ee5\u7528\u7684\u662f\u5143\u7ec4\u800c\u4e0d\u662f\u5d4c\u5957\u5b57\u5178\u3002 if i not in item_user . keys (): item_user [ i ] = set () #i\u952e\u6240\u5bf9\u5e94\u7684\u503c\u662f\u4e00\u4e2a\u96c6\u5408\uff08\u4e0d\u91cd\u590d\uff09\u3002 item_user [ i ] . add ( u ) #\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u7528\u6237\u3002 C = dict () #\u611f\u89c9\u7528\u6570\u7ec4\u66f4\u597d\u4e00\u4e9b\uff0c\u771f\u5b9e\u6570\u636e\u96c6\u662f\u6570\u5b57\u7f16\u53f7\uff0c\u4f46\u8fd9\u91cc\u662f\u5b57\u7b26\uff0c\u8fd9\u8fb9\u8fd8\u7528\u5b57\u5178\u3002 N = dict () for item , users in item_user . items (): for u in users : if u not in N . keys (): N [ u ] = 0 #\u4e66\u4e2d\u6ca1\u6709\u8fd9\u4e00\u6b65\uff0c\u4f46\u662f\u5b57\u5178\u6ca1\u6709\u521d\u59cb\u503c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u76f8\u52a0\u5427 N [ u ] += 1 #\u6bcf\u4e2a\u5546\u54c1\u4e0b\u7528\u6237\u51fa\u73b0\u4e00\u6b21\u5c31\u52a0\u4e00\u6b21\uff0c\u5c31\u662f\u8ba1\u7b97\u6bcf\u4e2a\u7528\u6237\u4e00\u5171\u8d2d\u4e70\u7684\u5546\u54c1\u4e2a\u6570\u3002 #\u4f46\u662f\u8fd9\u4e2a\u503c\u4e5f\u53ef\u4ee5\u4ece\u6700\u5f00\u59cb\u7684\u7528\u6237\u8868\u4e2d\u83b7\u5f97\u3002 #\u6bd4\u5982\uff1a for u in dic.keys(): # N[u]=len(dic[u]) for v in users : if u == v : continue if ( u , v ) not in C . keys (): #\u540c\u4e0a\uff0c\u6ca1\u6709\u521d\u59cb\u503c\u4e0d\u80fd+= C [ u , v ] = 0 C [ u , v ] += 1 #\u8fd9\u91cc\u6211\u4e0d\u6e05\u695a\u4e66\u4e2d\u662f\u4e0d\u662f\u7528\u7684\u5d4c\u5957\u5b57\u5178\uff0c\u611f\u89c9\u6709\u70b9\u8ff7\u7cca\u3002\u6240\u4ee5\u6211\u8fd9\u6837\u7528\u7684\u5b57\u5178\u3002 #\u5230\u8fd9\u91cc\u5012\u6392\u9635\u5c31\u5efa\u7acb\u597d\u4e86\uff0c\u4e0b\u9762\u662f\u8ba1\u7b97\u76f8\u4f3c\u5ea6\u3002 W = dict () for co_user , cuv in C . items (): W [ co_user ] = cuv / math . sqrt ( N [ co_user [ 0 ]] * N [ co_user [ 1 ]]) return W def Recommend ( user , dicc , W2 , K ): rvi = 1 #\u8fd9\u91cc\u90fd\u662f1,\u5b9e\u9645\u4e2d\u53ef\u80fd\u6bcf\u4e2a\u7528\u6237\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\u5c31\u50cf\u6bcf\u4e2a\u4eba\u90fd\u559c\u6b22beautiful girl,\u4f46\u6709\u7684\u559c\u6b22\u53ef\u7231\u7684\u591a\u4e00\u4e9b\uff0c\u6709\u7684\u559c\u6b22\u5fa1\u59d0\u591a\u4e00\u4e9b\u3002 rank = dict () related_user = [] interacted_items = dicc [ user ] for co_user , item in W2 . items (): if co_user [ 0 ] == user : related_user . append (( co_user [ 1 ], item )) #\u5148\u5efa\u7acb\u4e00\u4e2a\u548c\u5f85\u63a8\u8350\u7528\u6237\u5174\u8da3\u76f8\u5173\u7684\u6240\u6709\u7684\u7528\u6237\u5217\u8868\u3002 for v , wuv in sorted ( related_user , key = itemgetter ( 1 ), reverse = True )[ 0 : K ]: #\u627e\u5230K\u4e2a\u76f8\u5173\u7528\u6237\u4ee5\u53ca\u5bf9\u5e94\u5174\u8da3\u76f8\u4f3c\u5ea6\uff0c\u6309\u5174\u8da3\u76f8\u4f3c\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5217\u3002itemgetter\u8981\u5bfc\u5305\u3002 for i in dicc [ v ]: if i in interacted_items : continue #\u4e66\u4e2d\u5c11\u4e86continue\u8fd9\u4e00\u6b65\u5427\uff1f if i not in rank . keys (): #\u5982\u679c\u4e0d\u5199\u8981\u62a5\u9519\uff0c\u662f\u4e0d\u662f\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff1f rank [ i ] = 0 rank [ i ] += wuv * rvi return rank if __name__ == '__main__' : W3 = Usersim ( dic ) Last_Rank = Recommend ( 'A' , dic , W3 , 2 ) print ( Last_Rank ) \u57fa\u4e8e\u7528\u6237\u7684\u534f\u540c\u8fc7\u6ee4\u8fd0\u884c\u7ed3\u679c\u67e5\u770b {'c': 0.4082482904638631, 'e': 0.4082482904638631}","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"question/ad/","text":"\u978d\u70b9 \u00b6 \u5b9a\u4e49 \u00b6 \u4e00\u4e2a\u4e0d\u662f\u5c40\u90e8\u6700\u5c0f\u503c\u7684\u9a7b\u70b9\uff08\u4e00\u9636\u5bfc\u6570\u4e3a0\u7684\u70b9\uff09\u79f0\u4e3a\u978d\u70b9\u3002\u6570\u5b66\u542b\u4e49\u662f\uff1a\u76ee\u6807\u51fd\u6570\u5728\u6b64\u70b9\u4e0a\u7684\u68af\u5ea6\uff08\u4e00\u9636\u5bfc\u6570\uff09\u503c\u4e3a 0\uff0c\u4f46\u4ece\u6539\u70b9\u51fa\u53d1\u7684\u4e00\u4e2a\u65b9\u5411\u662f\u51fd\u6570\u7684\u6781\u5927\u503c\u70b9\uff0c\u800c\u5728\u53e6\u4e00\u4e2a\u65b9\u5411\u662f\u51fd\u6570\u7684\u6781\u5c0f\u503c\u70b9\u3002 \u5224\u65ad \u00b6 \u5224\u65ad\u978d\u70b9\u7684\u4e00\u4e2a\u5145\u5206\u6761\u4ef6\u662f\uff1a\u51fd\u6570\u5728\u4e00\u9636\u5bfc\u6570\u4e3a\u96f6\u5904\uff08\u9a7b\u70b9\uff09\u7684\u9ed1\u585e\u77e9\u9635\u4e3a\u4e0d\u5b9a\u77e9\u9635\u3002 1.\u9ed1\u585e\u77e9\u9635 \u00b6 \u5728\u6570\u5b66\u4e2d\uff0c\u9ed1\u585e\u77e9\u9635\uff08Hessian matrix \u6216 Hessian\uff09\u662f\u4e00\u4e2a\u591a\u53d8\u91cf\u5b9e\u503c\u51fd\u6570\u7684\u4e8c\u9636\u504f\u5bfc\u6570\u7ec4\u6210\u7684\u65b9\u9635\uff08\u7c7b\u4f3c\u4e8e\u591a\u5143\u51fd\u6570\u7684\u4e8c\u9636\u5bfc\u6570\uff09\uff0c\u5047\u8bbe\u6709\u4e00\u5b9e\u6570\u51fd\u6570f(x1,x2,x3...xn)\uff0c\u5982\u679cf\u6240\u6709\u7684\u4e8c\u9636\u504f\u5bfc\u6570\u90fd\u5b58\u5728\uff0c\u90a3\u4e48\u9ed1\u585e\u77e9\u9635\u8868\u793a\u5982\u4e0b\uff1a 2.\u4e0d\u5b9a\u77e9\u9635 \u00b6 \u534a\u6b63\u5b9a\u77e9\u9635\uff1a\u6240\u6709\u7279\u5f81\u503c\u4e3a\u975e\u8d1f\u3002 \u534a\u8d1f\u5b9a\u77e9\u9635\uff1a\u6240\u6709\u7279\u5f81\u503c\u4e3a\u975e\u6b63\u3002 \u4e0d\u5b9a\u77e9\u9635\uff1a\u7279\u5f81\u503c\u6709\u6b63\u6709\u8d1f\u3002 \u4f8b\u5b50 \u00b6 \u4e0b\u9762\u5bf9\u51fd\u6570z=x 2+y 2\u7684\u9a7b\u70b9(0,0)\u5224\u65ad\u662f\u5426\u4e3a\u978d\u70b9\u3002\u51fd\u6570\u56fe\u50cf\u5982\u4e0b\uff1a \u6211\u4eec\u6839\u636e\u5b9a\u4e49\u6765\u5224\u65ad(0,0)\u70b9\u7684\u9ed1\u585e\u77e9\u9635\uff1a \u6211\u4eec\u5bb9\u6613\u6c42\u5f97\u4e8c\u5143\u51fd\u6570z=x 2+y 2\u5728\u9a7b\u70b9 (0,0) \u5904\u7684 Hessian \u77e9\u9635\u5f62\u5f0f\u4e3a\uff1a \u5bb9\u6613\u89e3\u51fa\u7279\u5f81\u503c\u4e00\u4e2a\u4e3a2,\u4e00\u4e2a\u4e3a-2\uff08\u6709\u6b63\u6709\u8d1f\uff09\uff0c\u663e\u7136\u662f\u4e0d\u5b9a\u77e9\u9635\uff0c\u6240\u4ee5\u8be5\u70b9\u662f\u978d\u70b9\uff01 \u6ce8\u610f \uff1a\u51fd\u6570\u5728\u4e00\u9636\u5bfc\u6570\u4e3a\u96f6\u5904\uff08\u9a7b\u70b9\uff09\u7684\u9ed1\u585e\u77e9\u9635\u4e3a\u4e0d\u5b9a\u77e9\u9635\u53ea\u662f\u5224\u65ad\u8be5\u70b9\u662f\u5426\u4e3a\u978d\u70b9\u7684\u5145\u5206\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\u51fd\u6570\u5728\u4e00\u9636\u5bfc\u6570\u4e3a\u96f6\u5904\uff08\u9a7b\u70b9\uff09\u7684\u9ed1\u585e\u77e9\u9635\u4e0d\u6ee1\u8db3\u4e0d\u5b9a\u77e9\u9635\u7684\u5b9a\u4e49\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u591f\u8bf4\u660e\u5b83\u4e0d\u662f\u978d\u70b9\u3002 \u6bd4\u5982\u5728z=x 2+y 2\u70b9 (0,0)\u5904\u7684 Hessian \u77e9\u9635\u662f\u4e00\u4e2a 0 \u77e9\u9635,\u5e76\u4e0d\u6ee1\u8db3\u662f\u4e0d\u5b9a\u77e9\u9635\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a\u978d\u70b9\u3002","title":"6. \u978d\u70b9"},{"location":"question/ad/#_1","text":"","title":"\u978d\u70b9"},{"location":"question/ad/#_2","text":"\u4e00\u4e2a\u4e0d\u662f\u5c40\u90e8\u6700\u5c0f\u503c\u7684\u9a7b\u70b9\uff08\u4e00\u9636\u5bfc\u6570\u4e3a0\u7684\u70b9\uff09\u79f0\u4e3a\u978d\u70b9\u3002\u6570\u5b66\u542b\u4e49\u662f\uff1a\u76ee\u6807\u51fd\u6570\u5728\u6b64\u70b9\u4e0a\u7684\u68af\u5ea6\uff08\u4e00\u9636\u5bfc\u6570\uff09\u503c\u4e3a 0\uff0c\u4f46\u4ece\u6539\u70b9\u51fa\u53d1\u7684\u4e00\u4e2a\u65b9\u5411\u662f\u51fd\u6570\u7684\u6781\u5927\u503c\u70b9\uff0c\u800c\u5728\u53e6\u4e00\u4e2a\u65b9\u5411\u662f\u51fd\u6570\u7684\u6781\u5c0f\u503c\u70b9\u3002","title":"\u5b9a\u4e49"},{"location":"question/ad/#_3","text":"\u5224\u65ad\u978d\u70b9\u7684\u4e00\u4e2a\u5145\u5206\u6761\u4ef6\u662f\uff1a\u51fd\u6570\u5728\u4e00\u9636\u5bfc\u6570\u4e3a\u96f6\u5904\uff08\u9a7b\u70b9\uff09\u7684\u9ed1\u585e\u77e9\u9635\u4e3a\u4e0d\u5b9a\u77e9\u9635\u3002","title":"\u5224\u65ad"},{"location":"question/ad/#1","text":"\u5728\u6570\u5b66\u4e2d\uff0c\u9ed1\u585e\u77e9\u9635\uff08Hessian matrix \u6216 Hessian\uff09\u662f\u4e00\u4e2a\u591a\u53d8\u91cf\u5b9e\u503c\u51fd\u6570\u7684\u4e8c\u9636\u504f\u5bfc\u6570\u7ec4\u6210\u7684\u65b9\u9635\uff08\u7c7b\u4f3c\u4e8e\u591a\u5143\u51fd\u6570\u7684\u4e8c\u9636\u5bfc\u6570\uff09\uff0c\u5047\u8bbe\u6709\u4e00\u5b9e\u6570\u51fd\u6570f(x1,x2,x3...xn)\uff0c\u5982\u679cf\u6240\u6709\u7684\u4e8c\u9636\u504f\u5bfc\u6570\u90fd\u5b58\u5728\uff0c\u90a3\u4e48\u9ed1\u585e\u77e9\u9635\u8868\u793a\u5982\u4e0b\uff1a","title":"1.\u9ed1\u585e\u77e9\u9635"},{"location":"question/ad/#2","text":"\u534a\u6b63\u5b9a\u77e9\u9635\uff1a\u6240\u6709\u7279\u5f81\u503c\u4e3a\u975e\u8d1f\u3002 \u534a\u8d1f\u5b9a\u77e9\u9635\uff1a\u6240\u6709\u7279\u5f81\u503c\u4e3a\u975e\u6b63\u3002 \u4e0d\u5b9a\u77e9\u9635\uff1a\u7279\u5f81\u503c\u6709\u6b63\u6709\u8d1f\u3002","title":"2.\u4e0d\u5b9a\u77e9\u9635"},{"location":"question/ad/#_4","text":"\u4e0b\u9762\u5bf9\u51fd\u6570z=x 2+y 2\u7684\u9a7b\u70b9(0,0)\u5224\u65ad\u662f\u5426\u4e3a\u978d\u70b9\u3002\u51fd\u6570\u56fe\u50cf\u5982\u4e0b\uff1a \u6211\u4eec\u6839\u636e\u5b9a\u4e49\u6765\u5224\u65ad(0,0)\u70b9\u7684\u9ed1\u585e\u77e9\u9635\uff1a \u6211\u4eec\u5bb9\u6613\u6c42\u5f97\u4e8c\u5143\u51fd\u6570z=x 2+y 2\u5728\u9a7b\u70b9 (0,0) \u5904\u7684 Hessian \u77e9\u9635\u5f62\u5f0f\u4e3a\uff1a \u5bb9\u6613\u89e3\u51fa\u7279\u5f81\u503c\u4e00\u4e2a\u4e3a2,\u4e00\u4e2a\u4e3a-2\uff08\u6709\u6b63\u6709\u8d1f\uff09\uff0c\u663e\u7136\u662f\u4e0d\u5b9a\u77e9\u9635\uff0c\u6240\u4ee5\u8be5\u70b9\u662f\u978d\u70b9\uff01 \u6ce8\u610f \uff1a\u51fd\u6570\u5728\u4e00\u9636\u5bfc\u6570\u4e3a\u96f6\u5904\uff08\u9a7b\u70b9\uff09\u7684\u9ed1\u585e\u77e9\u9635\u4e3a\u4e0d\u5b9a\u77e9\u9635\u53ea\u662f\u5224\u65ad\u8be5\u70b9\u662f\u5426\u4e3a\u978d\u70b9\u7684\u5145\u5206\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\u51fd\u6570\u5728\u4e00\u9636\u5bfc\u6570\u4e3a\u96f6\u5904\uff08\u9a7b\u70b9\uff09\u7684\u9ed1\u585e\u77e9\u9635\u4e0d\u6ee1\u8db3\u4e0d\u5b9a\u77e9\u9635\u7684\u5b9a\u4e49\uff0c\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u591f\u8bf4\u660e\u5b83\u4e0d\u662f\u978d\u70b9\u3002 \u6bd4\u5982\u5728z=x 2+y 2\u70b9 (0,0)\u5904\u7684 Hessian \u77e9\u9635\u662f\u4e00\u4e2a 0 \u77e9\u9635,\u5e76\u4e0d\u6ee1\u8db3\u662f\u4e0d\u5b9a\u77e9\u9635\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a\u978d\u70b9\u3002","title":"\u4f8b\u5b50"},{"location":"question/bn/","text":"BN\u5c42 \u00b6 Batch Normalization\u662f\u7531google\u63d0\u51fa\u7684\u4e00\u79cd\u8bad\u7ec3\u4f18\u5316\u65b9\u6cd5\u3002 \u8bba\u6587\u540d\u5b57\uff1aBatch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift \u8bba\u6587\u5730\u5740\uff1a https://arxiv.org/abs/1502.03167 \u7f51\u4e0a\u5bf9BN\u89e3\u91ca\u8be6\u7ec6\u7684\u4e0d\u591a\uff0c\u5927\u591a\u4ece\u539f\u7406\u4e0a\u89e3\u91ca\uff0c\u6ca1\u6709\u8bf4\u51fa\u5b9e\u9645\u4f7f\u7528\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u4ecewhat, why, how\u4e09\u4e2a\u89d2\u5ea6\u53bb\u89e3\u91caBN\u3002 What is BN \u00b6 Normalization\u662f\u6570\u636e\u6807\u51c6\u5316\uff08\u5f52\u4e00\u5316\uff0c\u89c4\u8303\u5316\uff09\uff0cBatch \u53ef\u4ee5\u7406\u89e3\u4e3a\u6279\u91cf\uff0c\u52a0\u8d77\u6765\u5c31\u662f\u6279\u91cf\u6807\u51c6\u5316\u3002 \u5148\u8bf4Batch\u662f\u600e\u4e48\u786e\u5b9a\u7684\u3002\u5728CNN\u4e2d\uff0cBatch\u5c31\u662f\u8bad\u7ec3\u7f51\u7edc\u6240\u8bbe\u5b9a\u7684\u56fe\u7247\u6570\u91cfbatch_size\u3002 Normalization\u8fc7\u7a0b\uff0c\u5f15\u7528\u8bba\u6587\u4e2d\u7684\u89e3\u91ca\uff1a \u8f93\u5165\uff1a\u8f93\u5165\u6570\u636ex1\u2026xm\uff08\u8fd9\u4e9b\u6570\u636e\u662f\u51c6\u5907\u8fdb\u5165\u6fc0\u6d3b\u51fd\u6570\u7684\u6570\u636e\uff09 \u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u770b\u5230, 1.\u6c42\u6570\u636e\u5747\u503c 2.\u6c42\u6570\u636e\u65b9\u5dee 3.\u6570\u636e\u8fdb\u884c\u6807\u51c6\u5316\uff08\u4e2a\u4eba\u8ba4\u4e3a\u79f0\u4f5c\u6b63\u6001\u5316\u4e5f\u53ef\u4ee5\uff09 4.\u8bad\u7ec3\u53c2\u6570\u03b3\uff0c\u03b2 5.\u8f93\u51fay\u901a\u8fc7\u03b3\u4e0e\u03b2\u7684\u7ebf\u6027\u53d8\u6362\u5f97\u5230\u65b0\u7684\u503c \u5728\u6b63\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u53ef\u5b66\u4e60\u7684\u03b3\u4e0e\u03b2\u53c2\u6570\u6c42\u51fa\u65b0\u7684\u5206\u5e03\u503c \u5728\u53cd\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u94fe\u5f0f\u6c42\u5bfc\u65b9\u5f0f\uff0c\u6c42\u51fa\u03b3\u4e0e\u03b2\u4ee5\u53ca\u76f8\u5173\u6743\u503c Why is BN \u00b6 \u89e3\u51b3\u7684\u95ee\u9898\u662f\u68af\u5ea6\u6d88\u5931\u4e0e\u68af\u5ea6\u7206\u70b8\u3002 \u5173\u4e8e\u68af\u5ea6\u6d88\u5931\uff0c\u4ee5sigmoid\u51fd\u6570\u4e3a\u4f8b\u5b50\uff0csigmoid\u51fd\u6570\u4f7f\u5f97\u8f93\u51fa\u5728[0,1]\u4e4b\u95f4\u3002 \u4e8b\u5b9e\u4e0ax\u5230\u4e86\u4e00\u5b9a\u5927\u5c0f\uff0c\u7ecf\u8fc7sigmoid\u51fd\u6570\u7684\u8f93\u51fa\u8303\u56f4\u5c31\u5f88\u5c0f\u4e86\uff0c\u53c2\u8003\u4e0b\u56fe \u5982\u679c\u8f93\u5165\u5f88\u5927\uff0c\u5176\u5bf9\u5e94\u7684\u659c\u7387\u5c31\u5f88\u5c0f\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5176\u659c\u7387\uff08\u68af\u5ea6\uff09\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\u662f\u6743\u503c\u5b66\u4e60\u901f\u7387\u3002\u6240\u4ee5\u5c31\u4f1a\u51fa\u73b0\u5982\u4e0b\u7684\u95ee\u9898\uff0c \u5728\u6df1\u5ea6\u7f51\u7edc\u4e2d\uff0c\u5982\u679c\u7f51\u7edc\u7684\u6fc0\u6d3b\u8f93\u51fa\u5f88\u5927\uff0c\u5176\u68af\u5ea6\u5c31\u5f88\u5c0f\uff0c\u5b66\u4e60\u901f\u7387\u5c31\u5f88\u6162\u3002\u5047\u8bbe\u6bcf\u5c42\u5b66\u4e60\u68af\u5ea6\u90fd\u5c0f\u4e8e\u6700\u5927\u503c0.25\uff0c\u7f51\u7edc\u6709n\u5c42\uff0c\u56e0\u4e3a\u94fe\u5f0f\u6c42\u5bfc\u7684\u539f\u56e0\uff0c\u7b2c\u4e00\u5c42\u7684\u68af\u5ea6\u5c0f\u4e8e0.25\u7684n\u6b21\u65b9\uff0c\u6240\u4ee5\u5b66\u4e60\u901f\u7387\u5c31\u6162\uff0c\u5bf9\u4e8e\u6700\u540e\u4e00\u5c42\u53ea\u9700\u5bf9\u81ea\u8eab\u6c42\u5bfc1\u6b21\uff0c\u68af\u5ea6\u5c31\u5927\uff0c\u5b66\u4e60\u901f\u7387\u5c31\u5feb\u3002 \u8fd9\u4f1a\u9020\u6210\u7684\u5f71\u54cd\u662f\u5728\u4e00\u4e2a\u5f88\u5927\u7684\u6df1\u5ea6\u7f51\u7edc\u4e2d\uff0c\u6d45\u5c42\u57fa\u672c\u4e0d\u5b66\u4e60\uff0c\u6743\u503c\u53d8\u5316\u5c0f\uff0c\u540e\u9762\u51e0\u5c42\u4e00\u76f4\u5728\u5b66\u4e60\uff0c\u7ed3\u679c\u5c31\u662f\uff0c\u540e\u9762\u51e0\u5c42\u57fa\u672c\u53ef\u4ee5\u8868\u793a\u6574\u4e2a\u7f51\u7edc\uff0c\u5931\u53bb\u4e86\u6df1\u5ea6\u7684\u610f\u4e49\u3002 \u5173\u4e8e\u68af\u5ea6\u7206\u70b8\uff0c\u6839\u636e\u94fe\u5f0f\u6c42\u5bfc\u6cd5\uff0c\u7b2c\u4e00\u5c42\u504f\u79fb\u91cf\u7684\u68af\u5ea6=\u6fc0\u6d3b\u5c42\u659c\u73871x\u6743\u503c1x\u6fc0\u6d3b\u5c42\u659c\u73872x\u2026\u6fc0\u6d3b\u5c42\u659c\u7387(n-1)x\u6743\u503c(n-1)x\u6fc0\u6d3b\u5c42\u659c\u7387n\u3002 \u5047\u5982\u6fc0\u6d3b\u5c42\u659c\u7387\u5747\u4e3a\u6700\u5927\u503c0.25\uff0c\u6240\u6709\u5c42\u7684\u6743\u503c\u4e3a100\uff0c\u8fd9\u6837\u68af\u5ea6\u5c31\u4f1a\u6307\u6570\u589e\u52a0\u3002 How to use BN \u00b6 \u5148\u89e3\u91ca\u4e00\u4e0b\u5bf9\u4e8e\u56fe\u7247\u5377\u79ef\u662f\u5982\u4f55\u4f7f\u7528BN\u5c42\u3002 \u8fd9\u662f\u6587\u7ae0\u5377\u79ef\u795e\u7ecf\u7f51\u7edcCNN\uff081\uff09\u4e2d5x5\u7684\u56fe\u7247\u901a\u8fc7valid\u5377\u79ef\u5f97\u5230\u76843x3\u7279\u5f81\u56fe\uff08\u7c89\u7ea2\u8272\uff09\u3002\u8fd9\u91cc\u5047\u8bbe\u901a\u9053\u6570\u4e3a1\uff0cbatch\u4e3a4\uff0c\u5373\u5927\u5c0f\u4e3a[4,1,3,3] (n,c,h,w)\u3002\u7279\u5f81\u56fe\u91cc\u7684\u503c\uff0c\u4f5c\u4e3aBN\u7684\u8f93\u5165\uff0c\u8fd9\u91cc\u7b80\u5316\u8f93\u51fa\u53ea\u6709\u4e00\u4e2achannel\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e00\u4e2a4x3x3\u4e2a\u6570\u503c\u901a\u8fc7BN\u8ba1\u7b97\u5e76\u4fdd\u5b58\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5e76\u901a\u8fc7\u5f53\u524d\u5747\u503c\u4e0e\u65b9\u5dee\u8ba1\u7b97\u5f52\u4e00\u5316\u7684\u503c\uff0c\u6700\u540e\u6839\u636e\u03b3,\u03b2\u4ee5\u53ca\u5f52\u4e00\u5316\u5f97\u503c\u8ba1\u7b97BN\u5c42\u8f93\u51fa\u3002 \u8fd9\u91cc\u9700\u8981\u7740\u91cd\u8bf4\u660e\u7684\u7ec6\u8282\uff1a \u7f51\u7edc\u8bad\u7ec3\u4e2d\u4ee5batch_size\u4e3a\u6700\u5c0f\u5355\u4f4d\u4e0d\u65ad\u8fed\u4ee3\uff0c\u5f88\u663e\u7136\uff0c\u65b0\u7684batch_size\u8fdb\u5165\u7f51\u7edc\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u7684batch\u6709\u5dee\u5f02\uff0c\u5b9e\u9645\u662f\u901a\u8fc7\u53d8\u91cf\uff0c\u4ee5\u53ca\u6ed1\u52a8\u5e73\u5747\u6765\u8bb0\u5f55\u5747\u503c\u4e0e\u65b9\u5dee\u3002\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u63a8\u65ad\u9636\u6bb5\u65f6\u901a\u8fc7\u03b3, \u03b2\uff0c\u4ee5\u53ca\u8bb0\u5f55\u7684\u5747\u503c\u4e0e\u65b9\u5dee\u8ba1\u7b97bn\u5c42\u8f93\u51fa\u3002 \u7ed3\u5408\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u4f7f\u7528\u8fc7\u7a0b\u8fdb\u884c\u89e3\u91ca \u8f93\u5165\uff1a\u5f85\u8fdb\u5165\u6fc0\u6d3b\u51fd\u6570\u7684\u53d8\u91cf \u8f93\u51fa\uff1a \u5bf9\u4e8eK\u4e2a\u6fc0\u6d3b\u51fd\u6570\u524d\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u9700\u8981K\u4e2a\u5faa\u73af\u3002\u6bcf\u4e2a\u5faa\u73af\u4e2d\u6309\u7167\u4e0a\u9762\u6240\u4ecb\u7ecd\u7684\u65b9\u6cd5\u8ba1\u7b97\u5747\u503c\u4e0e\u65b9\u5dee\u3002\u901a\u8fc7\u03b3,\u03b2\u4e0e\u8f93\u5165x\u7684\u53d8\u6362\u6c42\u51faBN\u5c42\u8f93\u51fa\u3002 \u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5229\u7528\u03b3\u4e0e\u03b2\u6c42\u5f97\u68af\u5ea6\u4ece\u800c\u6539\u53d8\u8bad\u7ec3\u6743\u503c\uff08\u53d8\u91cf\uff09\u3002 \u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3\u76f4\u5230\u8bad\u7ec3\u7ed3\u675f\uff0c\u5f97\u5230\u03b3\u4e0e\u03b2\uff0c\u4ee5\u53ca\u8bb0\u5f55\u7684\u5747\u503c\u65b9\u5dee\u3002 \u5728\u9884\u6d4b\u7684\u6b63\u5411\u4f20\u64ad\u65f6\uff0c\u4f7f\u7528\u8bad\u7ec3\u65f6\u6700\u540e\u5f97\u5230\u7684\u03b3\u4e0e\u03b2\uff0c\u4ee5\u53ca\u5747\u503c\u4e0e\u65b9\u5dee\u7684\u65e0\u504f\u4f30\u8ba1\uff0c\u901a\u8fc7\u56fe\u4e2d11:\u6240\u8868\u793a\u7684\u516c\u5f0f\u8ba1\u7b97BN\u5c42\u8f93\u51fa\u3002","title":"7. BN\u5c42"},{"location":"question/bn/#bn","text":"Batch Normalization\u662f\u7531google\u63d0\u51fa\u7684\u4e00\u79cd\u8bad\u7ec3\u4f18\u5316\u65b9\u6cd5\u3002 \u8bba\u6587\u540d\u5b57\uff1aBatch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift \u8bba\u6587\u5730\u5740\uff1a https://arxiv.org/abs/1502.03167 \u7f51\u4e0a\u5bf9BN\u89e3\u91ca\u8be6\u7ec6\u7684\u4e0d\u591a\uff0c\u5927\u591a\u4ece\u539f\u7406\u4e0a\u89e3\u91ca\uff0c\u6ca1\u6709\u8bf4\u51fa\u5b9e\u9645\u4f7f\u7528\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u4ecewhat, why, how\u4e09\u4e2a\u89d2\u5ea6\u53bb\u89e3\u91caBN\u3002","title":"BN\u5c42"},{"location":"question/bn/#what-is-bn","text":"Normalization\u662f\u6570\u636e\u6807\u51c6\u5316\uff08\u5f52\u4e00\u5316\uff0c\u89c4\u8303\u5316\uff09\uff0cBatch \u53ef\u4ee5\u7406\u89e3\u4e3a\u6279\u91cf\uff0c\u52a0\u8d77\u6765\u5c31\u662f\u6279\u91cf\u6807\u51c6\u5316\u3002 \u5148\u8bf4Batch\u662f\u600e\u4e48\u786e\u5b9a\u7684\u3002\u5728CNN\u4e2d\uff0cBatch\u5c31\u662f\u8bad\u7ec3\u7f51\u7edc\u6240\u8bbe\u5b9a\u7684\u56fe\u7247\u6570\u91cfbatch_size\u3002 Normalization\u8fc7\u7a0b\uff0c\u5f15\u7528\u8bba\u6587\u4e2d\u7684\u89e3\u91ca\uff1a \u8f93\u5165\uff1a\u8f93\u5165\u6570\u636ex1\u2026xm\uff08\u8fd9\u4e9b\u6570\u636e\u662f\u51c6\u5907\u8fdb\u5165\u6fc0\u6d3b\u51fd\u6570\u7684\u6570\u636e\uff09 \u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u770b\u5230, 1.\u6c42\u6570\u636e\u5747\u503c 2.\u6c42\u6570\u636e\u65b9\u5dee 3.\u6570\u636e\u8fdb\u884c\u6807\u51c6\u5316\uff08\u4e2a\u4eba\u8ba4\u4e3a\u79f0\u4f5c\u6b63\u6001\u5316\u4e5f\u53ef\u4ee5\uff09 4.\u8bad\u7ec3\u53c2\u6570\u03b3\uff0c\u03b2 5.\u8f93\u51fay\u901a\u8fc7\u03b3\u4e0e\u03b2\u7684\u7ebf\u6027\u53d8\u6362\u5f97\u5230\u65b0\u7684\u503c \u5728\u6b63\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u53ef\u5b66\u4e60\u7684\u03b3\u4e0e\u03b2\u53c2\u6570\u6c42\u51fa\u65b0\u7684\u5206\u5e03\u503c \u5728\u53cd\u5411\u4f20\u64ad\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u94fe\u5f0f\u6c42\u5bfc\u65b9\u5f0f\uff0c\u6c42\u51fa\u03b3\u4e0e\u03b2\u4ee5\u53ca\u76f8\u5173\u6743\u503c","title":"What is BN"},{"location":"question/bn/#why-is-bn","text":"\u89e3\u51b3\u7684\u95ee\u9898\u662f\u68af\u5ea6\u6d88\u5931\u4e0e\u68af\u5ea6\u7206\u70b8\u3002 \u5173\u4e8e\u68af\u5ea6\u6d88\u5931\uff0c\u4ee5sigmoid\u51fd\u6570\u4e3a\u4f8b\u5b50\uff0csigmoid\u51fd\u6570\u4f7f\u5f97\u8f93\u51fa\u5728[0,1]\u4e4b\u95f4\u3002 \u4e8b\u5b9e\u4e0ax\u5230\u4e86\u4e00\u5b9a\u5927\u5c0f\uff0c\u7ecf\u8fc7sigmoid\u51fd\u6570\u7684\u8f93\u51fa\u8303\u56f4\u5c31\u5f88\u5c0f\u4e86\uff0c\u53c2\u8003\u4e0b\u56fe \u5982\u679c\u8f93\u5165\u5f88\u5927\uff0c\u5176\u5bf9\u5e94\u7684\u659c\u7387\u5c31\u5f88\u5c0f\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5176\u659c\u7387\uff08\u68af\u5ea6\uff09\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\u662f\u6743\u503c\u5b66\u4e60\u901f\u7387\u3002\u6240\u4ee5\u5c31\u4f1a\u51fa\u73b0\u5982\u4e0b\u7684\u95ee\u9898\uff0c \u5728\u6df1\u5ea6\u7f51\u7edc\u4e2d\uff0c\u5982\u679c\u7f51\u7edc\u7684\u6fc0\u6d3b\u8f93\u51fa\u5f88\u5927\uff0c\u5176\u68af\u5ea6\u5c31\u5f88\u5c0f\uff0c\u5b66\u4e60\u901f\u7387\u5c31\u5f88\u6162\u3002\u5047\u8bbe\u6bcf\u5c42\u5b66\u4e60\u68af\u5ea6\u90fd\u5c0f\u4e8e\u6700\u5927\u503c0.25\uff0c\u7f51\u7edc\u6709n\u5c42\uff0c\u56e0\u4e3a\u94fe\u5f0f\u6c42\u5bfc\u7684\u539f\u56e0\uff0c\u7b2c\u4e00\u5c42\u7684\u68af\u5ea6\u5c0f\u4e8e0.25\u7684n\u6b21\u65b9\uff0c\u6240\u4ee5\u5b66\u4e60\u901f\u7387\u5c31\u6162\uff0c\u5bf9\u4e8e\u6700\u540e\u4e00\u5c42\u53ea\u9700\u5bf9\u81ea\u8eab\u6c42\u5bfc1\u6b21\uff0c\u68af\u5ea6\u5c31\u5927\uff0c\u5b66\u4e60\u901f\u7387\u5c31\u5feb\u3002 \u8fd9\u4f1a\u9020\u6210\u7684\u5f71\u54cd\u662f\u5728\u4e00\u4e2a\u5f88\u5927\u7684\u6df1\u5ea6\u7f51\u7edc\u4e2d\uff0c\u6d45\u5c42\u57fa\u672c\u4e0d\u5b66\u4e60\uff0c\u6743\u503c\u53d8\u5316\u5c0f\uff0c\u540e\u9762\u51e0\u5c42\u4e00\u76f4\u5728\u5b66\u4e60\uff0c\u7ed3\u679c\u5c31\u662f\uff0c\u540e\u9762\u51e0\u5c42\u57fa\u672c\u53ef\u4ee5\u8868\u793a\u6574\u4e2a\u7f51\u7edc\uff0c\u5931\u53bb\u4e86\u6df1\u5ea6\u7684\u610f\u4e49\u3002 \u5173\u4e8e\u68af\u5ea6\u7206\u70b8\uff0c\u6839\u636e\u94fe\u5f0f\u6c42\u5bfc\u6cd5\uff0c\u7b2c\u4e00\u5c42\u504f\u79fb\u91cf\u7684\u68af\u5ea6=\u6fc0\u6d3b\u5c42\u659c\u73871x\u6743\u503c1x\u6fc0\u6d3b\u5c42\u659c\u73872x\u2026\u6fc0\u6d3b\u5c42\u659c\u7387(n-1)x\u6743\u503c(n-1)x\u6fc0\u6d3b\u5c42\u659c\u7387n\u3002 \u5047\u5982\u6fc0\u6d3b\u5c42\u659c\u7387\u5747\u4e3a\u6700\u5927\u503c0.25\uff0c\u6240\u6709\u5c42\u7684\u6743\u503c\u4e3a100\uff0c\u8fd9\u6837\u68af\u5ea6\u5c31\u4f1a\u6307\u6570\u589e\u52a0\u3002","title":"Why is BN"},{"location":"question/bn/#how-to-use-bn","text":"\u5148\u89e3\u91ca\u4e00\u4e0b\u5bf9\u4e8e\u56fe\u7247\u5377\u79ef\u662f\u5982\u4f55\u4f7f\u7528BN\u5c42\u3002 \u8fd9\u662f\u6587\u7ae0\u5377\u79ef\u795e\u7ecf\u7f51\u7edcCNN\uff081\uff09\u4e2d5x5\u7684\u56fe\u7247\u901a\u8fc7valid\u5377\u79ef\u5f97\u5230\u76843x3\u7279\u5f81\u56fe\uff08\u7c89\u7ea2\u8272\uff09\u3002\u8fd9\u91cc\u5047\u8bbe\u901a\u9053\u6570\u4e3a1\uff0cbatch\u4e3a4\uff0c\u5373\u5927\u5c0f\u4e3a[4,1,3,3] (n,c,h,w)\u3002\u7279\u5f81\u56fe\u91cc\u7684\u503c\uff0c\u4f5c\u4e3aBN\u7684\u8f93\u5165\uff0c\u8fd9\u91cc\u7b80\u5316\u8f93\u51fa\u53ea\u6709\u4e00\u4e2achannel\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e00\u4e2a4x3x3\u4e2a\u6570\u503c\u901a\u8fc7BN\u8ba1\u7b97\u5e76\u4fdd\u5b58\u5747\u503c\u4e0e\u65b9\u5dee\uff0c\u5e76\u901a\u8fc7\u5f53\u524d\u5747\u503c\u4e0e\u65b9\u5dee\u8ba1\u7b97\u5f52\u4e00\u5316\u7684\u503c\uff0c\u6700\u540e\u6839\u636e\u03b3,\u03b2\u4ee5\u53ca\u5f52\u4e00\u5316\u5f97\u503c\u8ba1\u7b97BN\u5c42\u8f93\u51fa\u3002 \u8fd9\u91cc\u9700\u8981\u7740\u91cd\u8bf4\u660e\u7684\u7ec6\u8282\uff1a \u7f51\u7edc\u8bad\u7ec3\u4e2d\u4ee5batch_size\u4e3a\u6700\u5c0f\u5355\u4f4d\u4e0d\u65ad\u8fed\u4ee3\uff0c\u5f88\u663e\u7136\uff0c\u65b0\u7684batch_size\u8fdb\u5165\u7f51\u7edc\uff0c\u7531\u4e8e\u6bcf\u4e00\u6b21\u7684batch\u6709\u5dee\u5f02\uff0c\u5b9e\u9645\u662f\u901a\u8fc7\u53d8\u91cf\uff0c\u4ee5\u53ca\u6ed1\u52a8\u5e73\u5747\u6765\u8bb0\u5f55\u5747\u503c\u4e0e\u65b9\u5dee\u3002\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u63a8\u65ad\u9636\u6bb5\u65f6\u901a\u8fc7\u03b3, \u03b2\uff0c\u4ee5\u53ca\u8bb0\u5f55\u7684\u5747\u503c\u4e0e\u65b9\u5dee\u8ba1\u7b97bn\u5c42\u8f93\u51fa\u3002 \u7ed3\u5408\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u4f7f\u7528\u8fc7\u7a0b\u8fdb\u884c\u89e3\u91ca \u8f93\u5165\uff1a\u5f85\u8fdb\u5165\u6fc0\u6d3b\u51fd\u6570\u7684\u53d8\u91cf \u8f93\u51fa\uff1a \u5bf9\u4e8eK\u4e2a\u6fc0\u6d3b\u51fd\u6570\u524d\u7684\u8f93\u5165\uff0c\u6240\u4ee5\u9700\u8981K\u4e2a\u5faa\u73af\u3002\u6bcf\u4e2a\u5faa\u73af\u4e2d\u6309\u7167\u4e0a\u9762\u6240\u4ecb\u7ecd\u7684\u65b9\u6cd5\u8ba1\u7b97\u5747\u503c\u4e0e\u65b9\u5dee\u3002\u901a\u8fc7\u03b3,\u03b2\u4e0e\u8f93\u5165x\u7684\u53d8\u6362\u6c42\u51faBN\u5c42\u8f93\u51fa\u3002 \u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5229\u7528\u03b3\u4e0e\u03b2\u6c42\u5f97\u68af\u5ea6\u4ece\u800c\u6539\u53d8\u8bad\u7ec3\u6743\u503c\uff08\u53d8\u91cf\uff09\u3002 \u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3\u76f4\u5230\u8bad\u7ec3\u7ed3\u675f\uff0c\u5f97\u5230\u03b3\u4e0e\u03b2\uff0c\u4ee5\u53ca\u8bb0\u5f55\u7684\u5747\u503c\u65b9\u5dee\u3002 \u5728\u9884\u6d4b\u7684\u6b63\u5411\u4f20\u64ad\u65f6\uff0c\u4f7f\u7528\u8bad\u7ec3\u65f6\u6700\u540e\u5f97\u5230\u7684\u03b3\u4e0e\u03b2\uff0c\u4ee5\u53ca\u5747\u503c\u4e0e\u65b9\u5dee\u7684\u65e0\u504f\u4f30\u8ba1\uff0c\u901a\u8fc7\u56fe\u4e2d11:\u6240\u8868\u793a\u7684\u516c\u5f0f\u8ba1\u7b97BN\u5c42\u8f93\u51fa\u3002","title":"How to use BN"},{"location":"question/cwpd/","text":"Train loss\u4e0eTest loss\u7ed3\u679c\u5206\u6790 \u00b6 \u5f15\u4f8b \u00b6 \u6211\u63d0\u95ee\u4e00\u4e2a\u95ee\u9898: \u5f53\u4e00\u4e2a\u6a21\u578b\u8bad\u7ec3\u5b8c\u6210\u540e\u82e5\u53d1\u73b0\u8bad\u7ec3\u96c6\u4e0a\u7684loss\u975e\u5e38\u9ad8,\u8bf7\u95ee\u5728\u4e0d\u5bf9\u4ee3\u7801\u8fdb\u884c\u5168\u9762\u6392\u67e5\u7684\u60c5\u51b5\u4e0b,\u600e\u4e48\u6837\u53ef\u4ee5\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u5b9a\u4f4d\u662f\u6a21\u578b\u672c\u8eab\u7684\u62df\u5408\u80fd\u529b\u4e0d\u8db3\u8fd8\u662f\u4ee3\u7801\u7684\u5b9e\u73b0\u5b58\u5728\u67d0\u79cd\u95ee\u9898\uff1f \u90a3\u4e48\u4f60\u89c9\u5f97\u5e94\u8be5\u662f\u600e\u4e48\u6837\u8fdb\u884c\u5224\u65ad\u5462\uff1f \u7b54\u6848 \u00b6 Train Loss Test Loss \u76ee\u524d\u60c5\u51b5 \u4e0b\u964d \u4e0b\u964d \u7f51\u7edc\u4ecd\u7136\u5728\u5b66\u4e60 \u4e0b\u964d \u8d8b\u4e8e\u4e0d\u53d8 \u7f51\u7edc\u8fc7\u62df\u5408 \u8d8b\u4e8e\u4e0d\u53d8 \u4e0b\u964d \u6570\u636e\u96c6100%\u6709\u95ee\u9898 \u8d8b\u4e8e\u4e0d\u53d8 \u8d8b\u4e8e\u4e0d\u53d8 \u7f51\u7edc\u5b66\u4e60\u9047\u5230\u74f6\u9888,\u9700\u8981\u51cf\u5c0f\u5b66\u4e60\u7387\u6216\u6279\u91cf\u6570\u76ee \u4e0a\u5347 \u4e0a\u5347 \u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u4e0d\u5f53,\u8bad\u7ec3\u53c2\u6570\u8bbe\u7f6e\u4e0d\u5f53,\u6570\u636e\u96c6\u7ecf\u8fc7\u6e05\u6d17\u7b49\u95ee\u9898","title":"3. Loss\u5206\u6790"},{"location":"question/cwpd/#train-losstest-loss","text":"","title":"Train loss\u4e0eTest loss\u7ed3\u679c\u5206\u6790"},{"location":"question/cwpd/#_1","text":"\u6211\u63d0\u95ee\u4e00\u4e2a\u95ee\u9898: \u5f53\u4e00\u4e2a\u6a21\u578b\u8bad\u7ec3\u5b8c\u6210\u540e\u82e5\u53d1\u73b0\u8bad\u7ec3\u96c6\u4e0a\u7684loss\u975e\u5e38\u9ad8,\u8bf7\u95ee\u5728\u4e0d\u5bf9\u4ee3\u7801\u8fdb\u884c\u5168\u9762\u6392\u67e5\u7684\u60c5\u51b5\u4e0b,\u600e\u4e48\u6837\u53ef\u4ee5\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u5b9a\u4f4d\u662f\u6a21\u578b\u672c\u8eab\u7684\u62df\u5408\u80fd\u529b\u4e0d\u8db3\u8fd8\u662f\u4ee3\u7801\u7684\u5b9e\u73b0\u5b58\u5728\u67d0\u79cd\u95ee\u9898\uff1f \u90a3\u4e48\u4f60\u89c9\u5f97\u5e94\u8be5\u662f\u600e\u4e48\u6837\u8fdb\u884c\u5224\u65ad\u5462\uff1f","title":"\u5f15\u4f8b"},{"location":"question/cwpd/#_2","text":"Train Loss Test Loss \u76ee\u524d\u60c5\u51b5 \u4e0b\u964d \u4e0b\u964d \u7f51\u7edc\u4ecd\u7136\u5728\u5b66\u4e60 \u4e0b\u964d \u8d8b\u4e8e\u4e0d\u53d8 \u7f51\u7edc\u8fc7\u62df\u5408 \u8d8b\u4e8e\u4e0d\u53d8 \u4e0b\u964d \u6570\u636e\u96c6100%\u6709\u95ee\u9898 \u8d8b\u4e8e\u4e0d\u53d8 \u8d8b\u4e8e\u4e0d\u53d8 \u7f51\u7edc\u5b66\u4e60\u9047\u5230\u74f6\u9888,\u9700\u8981\u51cf\u5c0f\u5b66\u4e60\u7387\u6216\u6279\u91cf\u6570\u76ee \u4e0a\u5347 \u4e0a\u5347 \u7f51\u7edc\u7ed3\u6784\u8bbe\u8ba1\u4e0d\u5f53,\u8bad\u7ec3\u53c2\u6570\u8bbe\u7f6e\u4e0d\u5f53,\u6570\u636e\u96c6\u7ecf\u8fc7\u6e05\u6d17\u7b49\u95ee\u9898","title":"\u7b54\u6848"},{"location":"question/h5/","text":"H5\u6587\u4ef6 \u00b6 h5\u6587\u4ef6\u662f\u5c42\u6b21\u6570\u636e\u683c\u5f0f\u7b2c5\u4ee3\u7684\u7248\u672c\uff08Hierarchical Data Format\uff0cHDF5\uff09\uff0c\u7528\u4ee5\u5b58\u50a8\u548c\u7ec4\u7ec7\u5927\u89c4\u6a21\u6570\u636e\u3002 H5\u5c06\u6587\u4ef6\u7ed3\u6784\u7b80\u5316\u6210\u4e24\u4e2a\u4e3b\u8981\u7684\u5bf9\u8c61\u7c7b\u578b: \u6570\u636e\u96c6dataset,\u5c31\u662f\u540c\u4e00\u7c7b\u578b\u6570\u636e\u7684\u591a\u7ef4\u6570\u7ec4 \u7ec4group,\u662f\u4e00\u79cd\u5bb9\u5668\u7ed3\u6784,\u53ef\u4ee5\u5305\u542b\u6570\u636e\u96c6\u548c\u5176\u4ed6\u7ec4,\u82e5\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b58\u653e\u4e86\u4e0d\u540c\u79cd\u7c7b\u7684\u6570\u636e\u96c6,\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u7ba1\u7406\u5c31\u7528\u5230\u4e86group \u76f4\u89c2\u7684\u7406\u89e3,\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u6587\u4ef6\u7cfb\u7edf,\u4e0d\u540c\u7684\u6587\u4ef6\u5b58\u653e\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u4e0b: \u76ee\u5f55\u5c31\u662f hdf5 \u6587\u4ef6\u4e2d\u7684 group,\u63cf\u8ff0\u4e86\u6570\u636e\u96c6 DataSet \u7684\u5206\u7c7b\u4fe1\u606f,\u901a\u8fc7 group \u6709\u6548\u7684\u5c06\u591a\u79cd dataset \u8fdb\u884c\u7ba1\u7406\u548c\u5212\u5206\u3002\u6587\u4ef6\u5c31\u662f hdf5 \u6587\u4ef6\u4e2d\u7684 dataset\uff0c\u8868\u793a\u5177\u4f53\u7684\u6570\u636e \u4e0b\u56fe\u5c31\u662f\u6570\u636e\u96c6\u548c\u7ec4\u7684\u5173\u7cfb\uff1a \u5728 Python \u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528 h5py \u5e93\u5bf9 .h5 \u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\uff0c\u5177\u4f53\u7684\u8bfb\u5199\u65b9\u6cd5\u81ea\u884c\u767e\u5ea6\uff0c\u8fd9\u91cc\u4e0d\u5728\u6f14\u793a\u3002","title":"8. H5\u6587\u4ef6"},{"location":"question/h5/#h5","text":"h5\u6587\u4ef6\u662f\u5c42\u6b21\u6570\u636e\u683c\u5f0f\u7b2c5\u4ee3\u7684\u7248\u672c\uff08Hierarchical Data Format\uff0cHDF5\uff09\uff0c\u7528\u4ee5\u5b58\u50a8\u548c\u7ec4\u7ec7\u5927\u89c4\u6a21\u6570\u636e\u3002 H5\u5c06\u6587\u4ef6\u7ed3\u6784\u7b80\u5316\u6210\u4e24\u4e2a\u4e3b\u8981\u7684\u5bf9\u8c61\u7c7b\u578b: \u6570\u636e\u96c6dataset,\u5c31\u662f\u540c\u4e00\u7c7b\u578b\u6570\u636e\u7684\u591a\u7ef4\u6570\u7ec4 \u7ec4group,\u662f\u4e00\u79cd\u5bb9\u5668\u7ed3\u6784,\u53ef\u4ee5\u5305\u542b\u6570\u636e\u96c6\u548c\u5176\u4ed6\u7ec4,\u82e5\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b58\u653e\u4e86\u4e0d\u540c\u79cd\u7c7b\u7684\u6570\u636e\u96c6,\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u7ba1\u7406\u5c31\u7528\u5230\u4e86group \u76f4\u89c2\u7684\u7406\u89e3,\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u6587\u4ef6\u7cfb\u7edf,\u4e0d\u540c\u7684\u6587\u4ef6\u5b58\u653e\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u4e0b: \u76ee\u5f55\u5c31\u662f hdf5 \u6587\u4ef6\u4e2d\u7684 group,\u63cf\u8ff0\u4e86\u6570\u636e\u96c6 DataSet \u7684\u5206\u7c7b\u4fe1\u606f,\u901a\u8fc7 group \u6709\u6548\u7684\u5c06\u591a\u79cd dataset \u8fdb\u884c\u7ba1\u7406\u548c\u5212\u5206\u3002\u6587\u4ef6\u5c31\u662f hdf5 \u6587\u4ef6\u4e2d\u7684 dataset\uff0c\u8868\u793a\u5177\u4f53\u7684\u6570\u636e \u4e0b\u56fe\u5c31\u662f\u6570\u636e\u96c6\u548c\u7ec4\u7684\u5173\u7cfb\uff1a \u5728 Python \u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528 h5py \u5e93\u5bf9 .h5 \u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\uff0c\u5177\u4f53\u7684\u8bfb\u5199\u65b9\u6cd5\u81ea\u884c\u767e\u5ea6\uff0c\u8fd9\u91cc\u4e0d\u5728\u6f14\u793a\u3002","title":"H5\u6587\u4ef6"},{"location":"question/losshs/","text":"\u4ecb\u7ecd \u00b6 \u60f3\u8c61\u4e00\u4e0b-\u4f60\u5df2\u7ecf\u5728\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e86\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5e76\u51c6\u5907\u597d\u5c06\u5b83\u4ea4\u4ed8\u7ed9\u5ba2\u6237\u3002\u4f46\u662f\uff0c\u4f60\u5982\u4f55\u786e\u5b9a\u8be5\u6a21\u578b\u80fd\u591f\u63d0\u4f9b\u6700\u4f73\u7ed3\u679c?\u662f\u5426\u6709\u6307\u6807\u6216\u6280\u672f\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u8bc4\u4f30\u6570\u636e\u96c6\u4e0a\u7684\u6a21\u578b? \u5f53\u7136\u662f\u6709\u7684\uff0c\u7b80\u800c\u8a00\u4e4b\uff0c\u673a\u5668\u5b66\u4e60\u4e2d\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\u3002 \u635f\u5931\u51fd\u6570\u662f\u6211\u4eec\u559c\u6b22\u4f7f\u7528\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u6838\u5fc3\u3002\u4f46\u5927\u591a\u6570\u521d\u5b66\u8005\u548c\u7231\u597d\u8005\u4e0d\u6e05\u695a\u5982\u4f55\u4ee5\u53ca\u5728\u4f55\u5904\u4f7f\u7528\u5b83\u4eec\u3002 \u5b83\u4eec\u5e76\u4e0d\u96be\u7406\u89e3\uff0c\u53cd\u800c\u53ef\u4ee5\u589e\u5f3a\u4f60\u5bf9\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u7406\u89e3\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff0c\u4f60\u5982\u4f55\u7406\u89e3\u5b83\u4eec\u7684\u610f\u4e49? \u5728\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u4e0b\u673a\u5668\u5b66\u4e60\u4e2d\u4f7f\u7528\u76847\u79cd\u5e38\u89c1\u635f\u5931\u51fd\u6570\uff0c\u5e76\u89e3\u91ca\u6bcf\u79cd\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u3002 \u76ee\u5f55 \u00b6 \u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff1f \u56de\u5f52\u635f\u5931\u51fd\u6570 \u5e73\u65b9\u8bef\u5dee\u635f\u5931 \u7edd\u5bf9\u8bef\u5dee\u635f\u5931 Huber\u635f\u5931 \u4e8c\u5206\u7c7b\u635f\u5931\u51fd\u6570 \u4e8c\u5206\u7c7b\u4ea4\u53c9\u71b5 Hinge\u635f\u5931 \u591a\u5206\u7c7b\u635f\u5931\u51fd\u6570 \u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931 KL\u6563\u5ea6 \u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff1f \u00b6 \u5047\u8bbe\u4f60\u5728\u5c71\u9876\uff0c\u9700\u8981\u4e0b\u5c71\u3002\u4f60\u5982\u4f55\u51b3\u5b9a\u8d70\u54ea\u4e2a\u65b9\u5411\uff1f \u6211\u8981\u505a\u7684\u4e8b\u60c5\u5982\u4e0b\uff1a \u73af\u987e\u56db\u5468\uff0c\u770b\u770b\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84 \u62d2\u7edd\u90a3\u4e9b\u4e0a\u5347\u7684\u8def\u5f84\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5b9e\u9645\u4e0a\u4f1a\u6d88\u8017\u66f4\u591a\u7684\u4f53\u529b\u5e76\u4f7f\u4e0b\u5c71\u4efb\u52a1\u53d8\u5f97\u66f4\u52a0\u8270\u96be \u6700\u540e\uff0c\u8d70\u6211\u8ba4\u4e3a\u7684\u5761\u5ea6\u6700\u5927\u7684\u8def\u5f84 \u5173\u4e8e\u6211\u5224\u65ad\u6211\u7684\u51b3\u7b56\u662f\u5426\u597d\u574f\u7684\u76f4\u89c9\uff0c\u8fd9\u6b63\u662f\u635f\u5931\u51fd\u6570\u80fd\u591f\u63d0\u4f9b\u7684\u529f\u80fd\u3002 \u635f\u5931\u51fd\u6570\u5c06\u51b3\u7b56\u6620\u5c04\u5230\u5176\u76f8\u5173\u6210\u672c \u51b3\u5b9a\u8d70\u4e0a\u5761\u7684\u8def\u5f84\u5c06\u8017\u8d39\u6211\u4eec\u7684\u4f53\u529b\u548c\u65f6\u95f4\u3002\u51b3\u5b9a\u8d70\u4e0b\u5761\u7684\u8def\u5f84\u5c06\u4f7f\u6211\u4eec\u53d7\u76ca\u3002\u56e0\u6b64\uff0c\u4e0b\u5761\u7684\u6210\u672c\u662f\u66f4\u5c0f\u7684\u3002 \u5728\u6709\u76d1\u7763\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6700\u5c0f\u5316\u6bcf\u4e2a\u8bad\u7ec3\u6837\u4f8b\u7684\u8bef\u5dee\u3002\u8fd9\u662f\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b49\u4e00\u4e9b\u4f18\u5316\u7b56\u7565\u5b8c\u6210\u7684\u3002\u800c\u8fd9\u4e2a\u8bef\u5dee\u6765\u81ea\u635f\u5931\u51fd\u6570\u3002 \u635f\u5931\u51fd\u6570(Loss Function)\u548c\u6210\u672c\u51fd\u6570(Cost Function)\u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u5728\u6b64\u5f3a\u8c03\u8fd9\u4e00\u70b9\uff0c\u5c3d\u7ba1 \u6210\u672c\u51fd\u6570 \u548c \u635f\u5931\u51fd\u6570 \u662f\u540c\u4e49\u8bcd\u5e76\u4e14\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528\uff0c\u4f46\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u3002 \u635f\u5931\u51fd\u6570\u7528\u4e8e\u5355\u4e2a\u8bad\u7ec3\u6837\u672c\u3002\u5b83\u6709\u65f6\u4e5f\u79f0\u4e3a \u8bef\u5dee\u51fd\u6570 (error function)\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6210\u672c\u51fd\u6570\u662f\u6574\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\u7684 \u5e73\u5747\u635f\u5931 (average function)\u3002\u4f18\u5316\u7b56\u7565\u65e8\u5728\u6700\u5c0f\u5316\u6210\u672c\u51fd\u6570\u3002 \u56de\u5f52\u635f\u5931\u51fd\u6570 \u00b6 \u6b64\u65f6\u4f60\u5fc5\u987b\u975e\u5e38\u719f\u6089\u7ebf\u6027\u56de\u5f52\u3002\u5b83\u6d89\u53ca\u5bf9\u56e0\u53d8\u91cfY\u548c\u51e0\u4e2a\u72ec\u7acb\u53d8\u91cfX\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u7a7a\u95f4\u4e2d\u5bf9\u8fd9\u4e9b\u6570\u636e\u62df\u5408\u51fa\u4e00\u6761\u76f4\u7ebf\u6216\u8005\u8d85\u5e73\u9762\u3002 1 Y = a0 + a1 * X1 + a2 * X2 + ....+ an * Xn \u6211\u4eec\u5c06\u4f7f\u7528\u7ed9\u5b9a\u7684\u6570\u636e\u70b9\u6765\u627e\u5230\u7cfb\u6570a0\uff0ca1\uff0c\u2026\uff0can\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u8457\u540d\u7684\u6ce2\u58eb\u987f\u4f4f\u623f\u6570\u636e\u96c6^1\u6765\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u7279\u5f81-\u6bcf\u4e2a\u4f4f\u5b85\u7684\u5e73\u5747\u623f\u95f4\u6570(Average number of rooms per dwelling)(X)\u6765\u9884\u6d4b\u56e0\u53d8\u91cf-1000\u7f8e\u5143\u4ef7\u4f4d\u7684\u623f\u5c4b\u7684\u4e2d\u4f4d\u6570\u4ef7\u503c(Median Value)(Y) \u6211\u4eec\u5c06\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d(Gradient Descent)\u4f5c\u4e3a\u4f18\u5316\u7b56\u7565\u6765\u67e5\u627e\u56de\u5f52\u7ebf\u3002\u6211\u4e0d\u4f1a\u8be6\u7ec6\u4ecb\u7ecdGradient Descent\u7684\u7ec6\u8282\uff0c\u4f46\u8fd9\u91cc\u63d0\u9192\u4e00\u4e0b\u6743\u91cd\u66f4\u65b0\u89c4\u5219\uff1a \u8fd9\u91cc\uff0c\u03b8\u662f\u8981\u66f4\u65b0\u7684\u6743\u91cd\uff0c\u03b1\u662f\u5b66\u4e60\u7387\uff0cJ\u662f\u6210\u672c\u51fd\u6570\u3002\u6210\u672c\u51fd\u6570\u7531\u03b8\u53c2\u6570\u5316\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4ea7\u751f\u6700\u5c0f\u603b\u6210\u672c\u7684\u03b8\u503c\u3002 \u6211\u5df2\u7ecf\u4e3a\u4e0b\u9762\u7684\u6bcf\u4e2a\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e86\u6211\u4eec\u5c06\u9075\u5faa\u7684\u6b65\u9aa4\uff1a \u5199\u51fa\u9884\u6d4b\u51fd\u6570f(X)\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u786e\u5b9a\u6211\u4eec\u9700\u8981\u627e\u5230\u7684\u53c2\u6570 \u786e\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u8ba1\u7b97\u5f97\u5230\u7684\u635f\u5931 \u627e\u5230\u6210\u672c\u51fd\u6570(\u6240\u6709\u6837\u672c\u7684\u5e73\u5747\u635f\u5931)\u7684\u8868\u8fbe\u5f0f \u627e\u5230\u4e0e\u6bcf\u4e2a\u672a\u77e5\u53c2\u6570\u76f8\u5173\u7684\u6210\u672c\u51fd\u6570\u7684\u68af\u5ea6 \u786e\u5b9a\u5b66\u4e60\u7387\u5e76\u5728\u56fa\u5b9a\u6b21\u6570\u4e2d\u8fdb\u884c\u8fed\u4ee3\u6267\u884c\u6743\u91cd\u66f4\u65b0\u89c4\u5219 \u5e73\u65b9\u8bef\u5dee\u635f\u5931 \u00b6 \u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u7684\u5e73\u65b9\u8bef\u5dee\u635f\u5931(\u4e5f\u79f0\u4e3aL2 Loss)\u662f\u5b9e\u9645\u503c\u548c\u9884\u6d4b\u503c\u4e4b\u5dee\u7684\u5e73\u65b9\uff1a \u76f8\u5e94\u7684\u6210\u672c\u51fd\u6570\u662f\u8fd9\u4e9b \u5e73\u65b9\u8bef\u5dee\u7684\u5e73\u5747\u503c(MSE) \u3002 \u63a8\u8350\u4f60\u5f15\u7528\u4ee5\u4e0b\u4ee3\u7801\u65f6\u5148\u5c1d\u8bd5\u81ea\u5df1\u8ba1\u7b97\u51fa\u68af\u5ea6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def update_weights_MSE ( m , b , X , Y , learning_rate ): m_deriv = 0 b_deriv = 0 N = len ( X ) for i in range ( N ): # \u8ba1\u7b97\u504f\u5bfc\u6570\u4e3a # -2x(y - (mx + b)) m_deriv += - 2 * X [ i ] * ( Y [ i ] - ( m * X [ i ] + b )) # -2(y - (mx + b)) b_deriv += - 2 * ( Y [ i ] - ( m * X [ i ] + b )) # \u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m -= ( m_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m , b \u5728\u6ce2\u58eb\u987f\u4f4f\u623f\u6570\u636e\u4e0a\uff0c\u5728\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u4e2d\u5206\u522b\u8fed\u4ee3\u4e86500\u6b21\u5f97\u5230\u4e0b\u56fe\uff1a \u8ba9\u6211\u4eec\u518d\u8c08\u8c08MSE\u635f\u5931\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570(\u5f62\u5f0f\u4e3aax^2+bx+c)\uff0c\u5e76\u4e14\u503c\u5927\u4e8e\u7b49\u4e8e0\u3002\u4e8c\u6b21\u51fd\u6570\u7684\u56fe\u5f62\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e8c\u6b21\u51fd\u6570\u4ec5\u5177\u6709\u5168\u5c40\u6700\u5c0f\u503c\u3002\u7531\u4e8e\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u9677\u5165\u5b83\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u68af\u5ea6\u4e0b\u964d\u5c06\u6536\u655b\u5230\u5168\u5c40\u6700\u5c0f\u503c(\u5982\u679c\u5b83\u5b8c\u5168\u6536\u655b)\u3002 MSE\u635f\u5931\u51fd\u6570\u901a\u8fc7\u5e73\u65b9\u8bef\u5dee\u6765\u60e9\u7f5a\u6a21\u578b\u72af\u7684\u5927\u9519\u8bef\u3002\u628a\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u6570\u5e73\u65b9\u4f1a\u4f7f\u5b83\u53d8\u5f97\u66f4\u5927\u3002\u4f46\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5c5e\u6027\u4f7fMSE\u6210\u672c\u51fd\u6570\u5bf9\u5f02\u5e38\u503c\u7684\u5065\u58ee\u6027\u964d\u4f4e\u3002\u56e0\u6b64\uff0c \u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u5bb9\u6613\u51fa\u73b0\u8bb8\u591a\u7684\u5f02\u5e38\u503c\uff0c\u5219\u4e0d\u5e94\u4f7f\u7528\u8fd9\u4e2a\u5b83 \u3002 \u7edd\u5bf9\u8bef\u5dee\u635f\u5931 \u00b6 \u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u7684\u7edd\u5bf9\u8bef\u5dee\u662f\u9884\u6d4b\u503c\u548c\u5b9e\u9645\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4e0e\u7b26\u53f7\u65e0\u5173\u3002\u7edd\u5bf9\u8bef\u5dee\u4e5f\u79f0\u4e3aL1 Loss\uff1a \u6b63\u5982\u6211\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u6210\u672c\u662f\u8fd9\u4e9b\u7edd\u5bf9\u8bef\u5dee\u7684\u5e73\u5747\u503c(MAE)\u3002 \u4e0eMSE\u76f8\u6bd4\uff0cMAE\u6210\u672c\u5bf9\u5f02\u5e38\u503c\u66f4\u52a0\u5065\u58ee \u3002\u4f46\u662f\uff0c\u5728\u6570\u5b66\u65b9\u7a0b\u4e2d\u5904\u7406\u7edd\u5bf9\u6216\u6a21\u6570\u8fd0\u7b97\u7b26\u5e76\u4e0d\u5bb9\u6613\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662fMAE\u7684\u7f3a\u70b9\u3002 \u4ee5\u4e0b\u662fMAE\u6210\u672c\u66f4\u65b0\u6743\u91cd\u7684\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def update_weights_MAE ( m , b , X , Y , learning_rate ): m_deriv = 0 b_deriv = 0 N = len ( X ) for i in range ( N ): #\u8ba1\u7b97\u504f\u5bfc\u6570 # -x(y - (mx + b)) / |mx + b| m_deriv += - X [ i ] * ( Y [ i ] - ( m * X [ i ] + b )) / abs ( Y [ i ] - ( m * X [ i ] + b )) # -(y - (mx + b)) / |mx + b| b_deriv += - ( Y [ i ] - ( m * X [ i ] + b )) / abs ( Y [ i ] - ( m * X [ i ] + b )) #\u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m -= ( m_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m , b \u5728\u4e0d\u540c\u5b66\u4e60\u901f\u7387\u4e2d\u5206\u522b\u8fed\u4ee3500\u6b21\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u56fe\uff1a Huber\u635f\u5931 \u00b6 Huber\u635f\u5931\u7ed3\u5408\u4e86MSE\u548cMAE\u7684\u6700\u4f73\u7279\u6027\u3002\u5bf9\u4e8e\u8f83\u5c0f\u7684\u8bef\u5dee\uff0c\u5b83\u662f\u4e8c\u6b21\u7684\uff0c\u5426\u5219\u662f\u7ebf\u6027\u7684(\u5bf9\u4e8e\u5176\u68af\u5ea6\u4e5f\u662f\u5982\u6b64)\u3002Huber\u635f\u5931\u9700\u8981\u786e\u5b9a\u03b4\u53c2\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def update_weights_Huber ( m , b , X , Y , delta , learning_rate ): m_deriv = 0 b_deriv = 0 N = len ( X ) for i in range ( N ): # \u5c0f\u503c\u7684\u4e8c\u6b21\u5bfc\u6570\uff0c\u5927\u503c\u7684\u7ebf\u6027\u5bfc\u6570 if abs ( Y [ i ] - m * X [ i ] - b ) <= delta : m_deriv += - X [ i ] * ( Y [ i ] - ( m * X [ i ] + b )) b_deriv += - ( Y [ i ] - ( m * X [ i ] + b )) else : m_deriv += delta * X [ i ] * (( m * X [ i ] + b ) - Y [ i ]) / abs (( m * X [ i ] + b ) - Y [ i ]) b_deriv += delta * (( m * X [ i ] + b ) - Y [ i ]) / abs (( m * X [ i ] + b ) - Y [ i ]) #\u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m -= ( m_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m , b \u6211\u4eec\u4ee50.0001\u7684\u5b66\u4e60\u901f\u7387\u5206\u522b\u5bf9\u03b4\u53c2\u6570\u7684\u4e0d\u540c\u503c\u8fdb\u884c500\u6b21\u6743\u91cd\u66f4\u65b0\u8fed\u4ee3\u5f97\u5230\u4e0b\u56fe\uff1a Huber\u635f\u5931\u5bf9\u4e8e\u5f02\u5e38\u503c\u6bd4MSE\u66f4\u5f3a\u3002 \u5b83\u7528\u4e8e\u7a33\u5065\u56de\u5f52(robust regression)\uff0cM\u4f30\u8ba1\u6cd5(M-estimator)\u548c\u53ef\u52a0\u6a21\u578b(additive model)\u3002Huber\u635f\u5931\u7684\u53d8\u4f53\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b \u3002 \u4e8c\u5206\u7c7b\u635f\u5931\u51fd\u6570 \u00b6 \u610f\u4e49\u5982\u5176\u540d\u3002\u4e8c\u5206\u7c7b\u662f\u6307\u5c06\u7269\u54c1\u5206\u914d\u5230\u4e24\u4e2a\u7c7b\u4e2d\u7684\u4e00\u4e2a\u3002\u8be5\u5206\u7c7b\u57fa\u4e8e\u5e94\u7528\u4e8e\u8f93\u5165\u7279\u5f81\u5411\u91cf\u7684\u89c4\u5219\u3002\u4e8c\u5206\u7c7b\u7684\u4f8b\u5b50\u4f8b\u5982\uff0c\u6839\u636e\u90ae\u4ef6\u7684\u4e3b\u9898\u5c06\u7535\u5b50\u90ae\u4ef6\u5206\u7c7b\u4e3a\u5783\u573e\u90ae\u4ef6\u6216\u975e\u5783\u573e\u90ae\u4ef6\u3002 \u6211\u5c06\u5728\u4e73\u817a\u764c\u6570\u636e\u96c6^2\u4e0a\u8bf4\u660e\u8fd9\u4e9b\u4e8c\u5206\u7c7b\u635f\u5931\u51fd\u6570\u3002 \u6211\u4eec\u5e0c\u671b\u6839\u636e\u5e73\u5747\u534a\u5f84\uff0c\u9762\u79ef\uff0c\u5468\u957f\u7b49\u7279\u5f81\u5c06\u80bf\u7624\u5206\u7c7b\u4e3a\" \u6076\u6027(Malignant) \"\u6216\" \u826f\u6027(Benign) \"\u3002\u4e3a\u7b80\u5316\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u4ec5\u4f7f\u7528\u4e24\u4e2a\u8f93\u5165\u7279\u5f81(X_1\u548cX_2)\uff0c\u5373\" \u6700\u5dee\u533a\u57df(worst area) \"\u548c\" \u5e73\u5747\u5bf9\u79f0\u6027(mean symmetry) \"\u7528\u4e8e\u5206\u7c7b\u3002Y\u662f\u4e8c\u503c\u7684\uff0c\u4e3a0(\u6076\u6027)\u62161(\u826f\u6027)\u3002 \u8fd9\u662f\u6211\u4eec\u6570\u636e\u7684\u6563\u70b9\u56fe\uff1a \u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931 \u00b6 \u8ba9\u6211\u4eec\u4ece\u7406\u89e3\u672f\u8bed\"\u71b5\"\u5f00\u59cb\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f7f\u7528\u71b5\u6765\u8868\u793a\u65e0\u5e8f\u6216\u4e0d\u786e\u5b9a\u6027\u3002\u6d4b\u91cf\u5177\u6709\u6982\u7387\u5206\u5e03p(X)\u7684\u968f\u673a\u53d8\u91cfX\uff1a \u8d1f\u53f7\u7528\u4e8e\u4f7f\u6700\u540e\u7684\u7ed3\u679c\u4e3a\u6b63\u6570\u3002 \u6982\u7387\u5206\u5e03\u7684\u71b5\u503c\u8d8a\u5927\uff0c\u8868\u660e\u5206\u5e03\u7684\u4e0d\u786e\u5b9a\u6027\u8d8a\u5927\u3002\u540c\u6837\uff0c\u4e00\u4e2a\u8f83\u5c0f\u7684\u503c\u4ee3\u8868\u4e00\u4e2a\u66f4\u786e\u5b9a\u7684\u5206\u5e03\u3002 \u8fd9\u4f7f\u5f97\u4e8c\u5143\u4ea4\u53c9\u71b5\u9002\u5408\u4f5c\u4e3a\u635f\u5931\u51fd\u6570( \u4f60\u5e0c\u671b\u6700\u5c0f\u5316\u5176\u503c )\u3002\u6211\u4eec\u5bf9\u8f93\u51fa\u6982\u7387p\u7684\u5206\u7c7b\u6a21\u578b\u4f7f\u7528 \u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931 \u3002 1 2 \u5143\u7d20\u5c5e\u4e8e\u7b2c1\u7c7b(\u6216\u6b63\u7c7b)\u7684\u6982\u7387=p \u5143\u7d20\u5c5e\u4e8e\u7b2c0\u7c7b(\u6216\u8d1f\u7c7b)\u7684\u6982\u7387=1-p \u7136\u540e\uff0c\u8f93\u51fa\u6807\u7b7ey(\u53ef\u4ee5\u53d6\u503c0\u548c1)\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u548c\u548c\u9884\u6d4b\u6982\u7387p\u5b9a\u4e49\u4e3a\uff1a \u8fd9\u4e5f\u79f0\u4e3aLog-Loss(\u5bf9\u6570\u635f\u5931)\u3002\u4e3a\u4e86\u8ba1\u7b97\u6982\u7387p\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528sigmoid\u51fd\u6570\u3002\u8fd9\u91cc\uff0cz\u662f\u6211\u4eec\u8f93\u5165\u529f\u80fd\u7684\u51fd\u6570\uff1a sigmoid\u51fd\u6570\u7684\u8303\u56f4\u662f[0,1]\uff0c\u8fd9\u4f7f\u5f97\u5b83\u9002\u5408\u4e8e\u8ba1\u7b97\u6982\u7387\u3002 \u63a8\u8350\u4f60\u5f15\u7528\u4ee5\u4e0b\u4ee3\u7801\u65f6\u5148\u5c1d\u8bd5\u81ea\u5df1\u8ba1\u7b97\u51fa\u68af\u5ea6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def update_weights_BCE ( m1 , m2 , b , X1 , X2 , Y , learning_rate ): m1_deriv = 0 m2_deriv = 0 b_deriv = 0 N = len ( X1 ) for i in range ( N ): s = 1 / ( 1 / ( 1 + math . exp ( - m1 * X1 [ i ] - m2 * X2 [ i ] - b ))) # \u8ba1\u7b97\u504f\u5bfc\u6570 m1_deriv += - X1 [ i ] * ( s - Y [ i ]) m2_deriv += - X2 [ i ] * ( s - Y [ i ]) b_deriv += - ( s - Y [ i ]) # \u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m1 -= ( m1_deriv / float ( N )) * learning_rate m2 -= ( m2_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m1 , m2 , b \u5728\u4e0d\u540calpha\u503c\u91cc\u4f7f\u7528\u6743\u91cd\u66f4\u65b0\u89c4\u5219\u8fdb\u884c1000\u6b21\u8fed\u4ee3\u5f97\u5230\u4e0b\u56fe\uff1a Hinge\u635f\u5931 \u00b6 Hinge\u635f\u5931\u4e3b\u8981\u7528\u4e8e\u5e26\u6709\u7c7b\u6807\u7b7e-1\u548c1\u7684\u652f\u6301\u5411\u91cf\u673a(SVM) \u3002\u56e0\u6b64\uff0c\u8bf7\u786e\u4fdd\u5c06\u6570\u636e\u96c6\u4e2d\"\u6076\u6027\"\u7c7b\u7684\u6807\u7b7e\u4ece0\u66f4\u6539\u4e3a-1\u3002 Hinge\u635f\u5931\u4e0d\u4ec5\u4f1a\u60e9\u7f5a\u9519\u8bef\u7684\u9884\u6d4b\uff0c\u8fd8\u4f1a\u60e9\u7f5a\u4e0d\u81ea\u4fe1\u7684\u6b63\u786e\u9884\u6d4b\u3002 \u6570\u636e\u5bf9(x\uff0cy)\u7684Hinge\u635f\u5931\u5982\u56fe\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def update_weights_Hinge ( m1 , m2 , b , X1 , X2 , Y , learning_rate ): m1_deriv = 0 m2_deriv = 0 b_deriv = 0 N = len ( X1 ) for i in range ( N ): # \u8ba1\u7b97\u504f\u5bfc\u6570 if Y [ i ] * ( m1 * X1 [ i ] + m2 * X2 [ i ] + b ) <= 1 : m1_deriv += - X1 [ i ] * Y [ i ] m2_deriv += - X2 [ i ] * Y [ i ] b_deriv += - Y [ i ] # \u5426\u5219\u504f\u5bfc\u6570\u4e3a0 # \u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m1 -= ( m1_deriv / float ( N )) * learning_rate m2 -= ( m2_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m1 , m2 , b \u5728\u4f7f\u7528\u4e09\u4e2a\u4e0d\u540c\u7684alpha\u503c\u8fd0\u884c2000\u6b21\u8fed\u4ee3\u7684\u66f4\u65b0\u51fd\u6570\u4e4b\u540e\uff0c\u5f97\u5230\u4e0b\u56fe\uff1a Hinge\u635f\u5931\u7b80\u5316\u4e86SVM\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u540c\u65f6\u6700\u5927\u5316\u4e86\u635f\u5931(\u4e0e\u5bf9\u6570\u635f\u5931(Log-Loss)\u76f8\u6bd4)\u3002\u5f53\u6211\u4eec\u60f3\u8981\u505a\u5b9e\u65f6\u51b3\u7b56\u800c\u4e0d\u662f\u9ad8\u5ea6\u5173\u6ce8\u51c6\u786e\u6027\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002 \u591a\u5206\u7c7b\u635f\u5931\u51fd\u6570 \u00b6 \u7535\u5b50\u90ae\u4ef6\u4e0d\u4ec5\u88ab\u5f52\u7c7b\u4e3a\u5783\u573e\u90ae\u4ef6\u6216\u5783\u573e\u90ae\u4ef6(\u8fd9\u4e0d\u518d\u662f90\u5e74\u4ee3\u4e86!)\u3002\u5b83\u4eec\u5206\u4e3a\u5404\u79cd\u5176\u4ed6\u7c7b\u522b-\u5de5\u4f5c\uff0c\u5bb6\u5ead\uff0c\u793e\u4ea4\uff0c\u4fc3\u9500\u7b49\u3002 \u6211\u4eec\u5c06\u4f7f\u7528Iris\u6570\u636e\u96c6^3\u6765\u7406\u89e3\u5269\u4f59\u7684\u4e24\u4e2a\u635f\u5931\u51fd\u6570\u3002\u6211\u4eec\u5c06\u4f7f\u75282\u4e2a\u7279\u5f81X \u843c\u7247\u957f\u5ea6(Sepal length)\u548c\u7279\u5f81X\u82b1\u74e3\u5bbd\u5ea6(Petal width)\u6765\u9884\u6d4b\u9e22\u5c3e\u82b1\u7684\u7c7b\u522b(Y) -Setosa\uff0cVersicolor\u6216Virginica \u6211\u4eec\u7684\u4efb\u52a1\u662f\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u548cKeras\u5185\u7f6e\u7684Adam\u4f18\u5316\u5668\u6765\u5b9e\u73b0\u5206\u7c7b\u5668\u3002\u8fd9\u662f\u56e0\u4e3a\u968f\u7740\u53c2\u6570\u6570\u91cf\u7684\u589e\u52a0\uff0c\u6570\u5b66\u4ee5\u53ca\u4ee3\u7801\u5c06\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002 \u8fd9\u662f\u6211\u4eec\u6570\u636e\u7684\u6563\u70b9\u56fe\uff1a \u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931 \u00b6 \u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\u662f\u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\u7684\u63a8\u5e7f\u3002\u8f93\u5165\u5411\u91cfXi\u548c\u76f8\u5e94\u7684one-hot\u7f16\u7801\u76ee\u6807\u5411\u91cfYi\u7684\u635f\u5931\u662f\uff1a \u6211\u4eec\u4f7f\u7528softmax\u51fd\u6570\u6765\u627e\u5230\u6982\u7387pij\uff1a \"Softmax\u5c42\u662f\u63a5\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u5c42\u524d\u3002Softmax\u5c42\u5fc5\u987b\u4e0e\u8f93\u51fa\u5c42\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u3002\"Google Developer's Blog \u6700\u540e\uff0c\u6211\u4eec\u7684\u8f93\u51fa\u662f\u5177\u6709\u7ed9\u5b9a\u8f93\u5165\u7684\u6700\u5927\u6982\u7387\u7684\u7c7b\u522b\u3002 \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u8f93\u5165\u5c42\u548c\u4e00\u4e2a\u8f93\u51fa\u5c42\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\uff0c\u5e76\u7528\u4e0d\u540c\u7684\u5b66\u4e60\u901f\u5ea6\u7f16\u8bd1\u5b83\u3002\u5728model.compile()\u8bed\u53e5\u4e2d\u5c06\u635f\u5931\u51fd\u6570\u6307\u5b9a\u4e3a' categorical_crossentropy ': 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # \u5bfc\u5165\u5305 from keras.layers import Dense from keras.models import Sequential from keras.optimizers import adam #alpha\u8bbe\u7f6e\u4e3a0.001\uff0c\u5982adam\u4f18\u5316\u5668\u4e2d\u7684lr\u53c2\u6570\u6240\u793a # \u521b\u5efa\u6a21\u578b model_alpha1 = Sequential () model_alpha1 . add ( Dense ( 50 , input_dim = 2 , activation = 'relu' )) model_alpha1 . add ( Dense ( 3 , activation = 'softmax' )) # \u7f16\u8bd1\u6a21\u578b opt_alpha1 = adam ( lr = 0.001 ) model_alpha1 . compile ( loss = 'categorical_crossentropy' , optimizer = opt_alpha1 , metrics = [ 'accuracy' ]) # \u62df\u5408\u6a21\u578b # dummy_Y\u662fone-hot\u5f62\u5f0f\u7f16\u7801\u7684 # history_alpha1\u7528\u4e8e\u4e3a\u7ed8\u56fe\u7684\u9a8c\u8bc1\u548c\u51c6\u786e\u6027\u8bc4\u5206 history_alpha1 = model_alpha1 . fit ( dataX , dummy_Y , validation_data = ( dataX , dummy_Y ), epochs = 200 , verbose = 0 ) \u5728\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u7ecf\u8fc7200\u8f6e\u8bad\u7ec3\u540e\u6210\u672c\u548c\u51c6\u786e\u5ea6\u7684\u56fe\u5982\u4e0b\uff1a KL\u6563\u5ea6 \u00b6 KL\u6563\u5ea6(Kullback Leibler Divergence Loss)\u6982\u7387\u5206\u5e03\u4e0e\u53e6\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u533a\u522b\u7684\u5ea6\u91cf\u3002KL\u6563\u5ea6\u4e3a\u96f6\u8868\u793a\u5206\u5e03\u76f8\u540c\u3002 \u8bf7\u6ce8\u610f\uff0c\u53d1\u6563\u51fd\u6570\u4e0d\u5bf9\u79f0\u3002\u5373\uff1a \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48KL\u6563\u5ea6\u4e0d\u80fd\u7528\u4f5c\u8ddd\u79bb\u5ea6\u91cf\u7684\u539f\u56e0\u3002 \u6211\u5c06\u63cf\u8ff0\u4f7f\u7528KL\u6563\u5ea6\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u800c\u4e0d\u8fdb\u884c\u6570\u5b66\u8ba1\u7b97\u7684\u57fa\u672c\u65b9\u6cd5\u3002\u5728\u7ed9\u5b9a\u4e00\u4e9b\u8fd1\u4f3c\u5206\u5e03Q\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u8fd1\u4f3c\u5173\u4e8e\u8f93\u5165\u7279\u5f81\u7684\u76ee\u6807\u53d8\u91cf\u7684\u771f\u5b9e\u6982\u7387\u5206\u5e03P. \u7531\u4e8eKL\u6563\u5ea6\u4e0d\u5bf9\u79f0\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u7528\u4e8e\u76d1\u7763\u5b66\u4e60\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7528\u4e8e\u5f3a\u5316\u5b66\u4e60\u3002KL\u6563\u5ea6\u5728\u529f\u80fd\u4e0a\u7c7b\u4f3c\u4e8e\u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\uff0cKL\u6563\u5ea6\u4e5f\u53ef\u4ee5\u79f0\u4e3aP\u76f8\u5bf9\u4e8eQ\u7684\u76f8\u5bf9\u71b5\uff1a \u6211\u4eec\u5728compile()\u51fd\u6570\u4e2d\u6307\u5b9a'kullback_leibler_divergence'\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u5728\u5904\u7406\u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\u65f6\u6240\u505a\u7684\u90a3\u6837\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # \u5bfc\u5165\u5305 from keras.layers import Dense from keras.models import Sequential from keras.optimizers import adam # alpha\u8bbe\u7f6e\u4e3a0.001\uff0c\u5982adam\u4f18\u5316\u5668\u4e2d\u7684lr\u53c2\u6570\u6240\u793a # \u521b\u5efa\u6a21\u578b model_alpha1 = Sequential () model_alpha1 . add ( Dense ( 50 , input_dim = 2 , activation = 'relu' )) model_alpha1 . add ( Dense ( 3 , activation = 'softmax' )) # \u7f16\u8bd1\u6a21\u578b opt_alpha1 = adam ( lr = 0.001 ) model_alpha1 . compile ( loss = 'kullback_leibler_divergence' , optimizer = opt_alpha1 , metrics = [ 'accuracy' ]) # \u62df\u5408\u6a21\u578b # dummy_Y\u662fone-hot\u5f62\u5f0f\u7f16\u7801\u7684 # history_alpha1\u7528\u4e8e\u4e3a\u7ed8\u56fe\u7684\u9a8c\u8bc1\u548c\u51c6\u786e\u6027\u8bc4\u5206 history_alpha1 = model_alpha1 . fit ( dataX , dummy_Y , validation_data = ( dataX , dummy_Y ), epochs = 200 , verbose = 0 ) \u5728\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u7ecf\u8fc7200\u8f6e\u8bad\u7ec3\u540e\u6210\u672c\u548c\u51c6\u786e\u5ea6\u7684\u56fe\u5982\u4e0b\uff1a \u4e0e\u591a\u5206\u7c7b\u5206\u7c7b\u76f8\u6bd4\uff0cKL\u6563\u5ea6\u66f4\u5e38\u7528\u4e8e\u903c\u8fd1\u590d\u6742\u51fd\u6570\u3002\u6211\u4eec\u5728\u4f7f\u7528\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668(VAE)\u7b49\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u65f6\u7ecf\u5e38\u4f7f\u7528KL\u6563\u5ea6\u3002","title":"5. \u635f\u5931\u51fd\u6570"},{"location":"question/losshs/#_1","text":"\u60f3\u8c61\u4e00\u4e0b-\u4f60\u5df2\u7ecf\u5728\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u4e86\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5e76\u51c6\u5907\u597d\u5c06\u5b83\u4ea4\u4ed8\u7ed9\u5ba2\u6237\u3002\u4f46\u662f\uff0c\u4f60\u5982\u4f55\u786e\u5b9a\u8be5\u6a21\u578b\u80fd\u591f\u63d0\u4f9b\u6700\u4f73\u7ed3\u679c?\u662f\u5426\u6709\u6307\u6807\u6216\u6280\u672f\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u8bc4\u4f30\u6570\u636e\u96c6\u4e0a\u7684\u6a21\u578b? \u5f53\u7136\u662f\u6709\u7684\uff0c\u7b80\u800c\u8a00\u4e4b\uff0c\u673a\u5668\u5b66\u4e60\u4e2d\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\u3002 \u635f\u5931\u51fd\u6570\u662f\u6211\u4eec\u559c\u6b22\u4f7f\u7528\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u6838\u5fc3\u3002\u4f46\u5927\u591a\u6570\u521d\u5b66\u8005\u548c\u7231\u597d\u8005\u4e0d\u6e05\u695a\u5982\u4f55\u4ee5\u53ca\u5728\u4f55\u5904\u4f7f\u7528\u5b83\u4eec\u3002 \u5b83\u4eec\u5e76\u4e0d\u96be\u7406\u89e3\uff0c\u53cd\u800c\u53ef\u4ee5\u589e\u5f3a\u4f60\u5bf9\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u7406\u89e3\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff0c\u4f60\u5982\u4f55\u7406\u89e3\u5b83\u4eec\u7684\u610f\u4e49? \u5728\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u4e0b\u673a\u5668\u5b66\u4e60\u4e2d\u4f7f\u7528\u76847\u79cd\u5e38\u89c1\u635f\u5931\u51fd\u6570\uff0c\u5e76\u89e3\u91ca\u6bcf\u79cd\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u3002","title":"\u4ecb\u7ecd"},{"location":"question/losshs/#_2","text":"\u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff1f \u56de\u5f52\u635f\u5931\u51fd\u6570 \u5e73\u65b9\u8bef\u5dee\u635f\u5931 \u7edd\u5bf9\u8bef\u5dee\u635f\u5931 Huber\u635f\u5931 \u4e8c\u5206\u7c7b\u635f\u5931\u51fd\u6570 \u4e8c\u5206\u7c7b\u4ea4\u53c9\u71b5 Hinge\u635f\u5931 \u591a\u5206\u7c7b\u635f\u5931\u51fd\u6570 \u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931 KL\u6563\u5ea6","title":"\u76ee\u5f55"},{"location":"question/losshs/#_3","text":"\u5047\u8bbe\u4f60\u5728\u5c71\u9876\uff0c\u9700\u8981\u4e0b\u5c71\u3002\u4f60\u5982\u4f55\u51b3\u5b9a\u8d70\u54ea\u4e2a\u65b9\u5411\uff1f \u6211\u8981\u505a\u7684\u4e8b\u60c5\u5982\u4e0b\uff1a \u73af\u987e\u56db\u5468\uff0c\u770b\u770b\u6240\u6709\u53ef\u80fd\u7684\u8def\u5f84 \u62d2\u7edd\u90a3\u4e9b\u4e0a\u5347\u7684\u8def\u5f84\u3002\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e9b\u8def\u5f84\u5b9e\u9645\u4e0a\u4f1a\u6d88\u8017\u66f4\u591a\u7684\u4f53\u529b\u5e76\u4f7f\u4e0b\u5c71\u4efb\u52a1\u53d8\u5f97\u66f4\u52a0\u8270\u96be \u6700\u540e\uff0c\u8d70\u6211\u8ba4\u4e3a\u7684\u5761\u5ea6\u6700\u5927\u7684\u8def\u5f84 \u5173\u4e8e\u6211\u5224\u65ad\u6211\u7684\u51b3\u7b56\u662f\u5426\u597d\u574f\u7684\u76f4\u89c9\uff0c\u8fd9\u6b63\u662f\u635f\u5931\u51fd\u6570\u80fd\u591f\u63d0\u4f9b\u7684\u529f\u80fd\u3002 \u635f\u5931\u51fd\u6570\u5c06\u51b3\u7b56\u6620\u5c04\u5230\u5176\u76f8\u5173\u6210\u672c \u51b3\u5b9a\u8d70\u4e0a\u5761\u7684\u8def\u5f84\u5c06\u8017\u8d39\u6211\u4eec\u7684\u4f53\u529b\u548c\u65f6\u95f4\u3002\u51b3\u5b9a\u8d70\u4e0b\u5761\u7684\u8def\u5f84\u5c06\u4f7f\u6211\u4eec\u53d7\u76ca\u3002\u56e0\u6b64\uff0c\u4e0b\u5761\u7684\u6210\u672c\u662f\u66f4\u5c0f\u7684\u3002 \u5728\u6709\u76d1\u7763\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u6700\u5c0f\u5316\u6bcf\u4e2a\u8bad\u7ec3\u6837\u4f8b\u7684\u8bef\u5dee\u3002\u8fd9\u662f\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b49\u4e00\u4e9b\u4f18\u5316\u7b56\u7565\u5b8c\u6210\u7684\u3002\u800c\u8fd9\u4e2a\u8bef\u5dee\u6765\u81ea\u635f\u5931\u51fd\u6570\u3002 \u635f\u5931\u51fd\u6570(Loss Function)\u548c\u6210\u672c\u51fd\u6570(Cost Function)\u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u5728\u6b64\u5f3a\u8c03\u8fd9\u4e00\u70b9\uff0c\u5c3d\u7ba1 \u6210\u672c\u51fd\u6570 \u548c \u635f\u5931\u51fd\u6570 \u662f\u540c\u4e49\u8bcd\u5e76\u4e14\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528\uff0c\u4f46\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u3002 \u635f\u5931\u51fd\u6570\u7528\u4e8e\u5355\u4e2a\u8bad\u7ec3\u6837\u672c\u3002\u5b83\u6709\u65f6\u4e5f\u79f0\u4e3a \u8bef\u5dee\u51fd\u6570 (error function)\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6210\u672c\u51fd\u6570\u662f\u6574\u4e2a\u8bad\u7ec3\u6570\u636e\u96c6\u7684 \u5e73\u5747\u635f\u5931 (average function)\u3002\u4f18\u5316\u7b56\u7565\u65e8\u5728\u6700\u5c0f\u5316\u6210\u672c\u51fd\u6570\u3002","title":"\u4ec0\u4e48\u662f\u635f\u5931\u51fd\u6570\uff1f"},{"location":"question/losshs/#_4","text":"\u6b64\u65f6\u4f60\u5fc5\u987b\u975e\u5e38\u719f\u6089\u7ebf\u6027\u56de\u5f52\u3002\u5b83\u6d89\u53ca\u5bf9\u56e0\u53d8\u91cfY\u548c\u51e0\u4e2a\u72ec\u7acb\u53d8\u91cfX\u4e4b\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u7a7a\u95f4\u4e2d\u5bf9\u8fd9\u4e9b\u6570\u636e\u62df\u5408\u51fa\u4e00\u6761\u76f4\u7ebf\u6216\u8005\u8d85\u5e73\u9762\u3002 1 Y = a0 + a1 * X1 + a2 * X2 + ....+ an * Xn \u6211\u4eec\u5c06\u4f7f\u7528\u7ed9\u5b9a\u7684\u6570\u636e\u70b9\u6765\u627e\u5230\u7cfb\u6570a0\uff0ca1\uff0c\u2026\uff0can\u3002 \u6211\u4eec\u5c06\u4f7f\u7528\u8457\u540d\u7684\u6ce2\u58eb\u987f\u4f4f\u623f\u6570\u636e\u96c6^1\u6765\u7406\u89e3\u8fd9\u4e2a\u6982\u5ff5\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u53ea\u4f7f\u7528\u4e00\u4e2a\u7279\u5f81-\u6bcf\u4e2a\u4f4f\u5b85\u7684\u5e73\u5747\u623f\u95f4\u6570(Average number of rooms per dwelling)(X)\u6765\u9884\u6d4b\u56e0\u53d8\u91cf-1000\u7f8e\u5143\u4ef7\u4f4d\u7684\u623f\u5c4b\u7684\u4e2d\u4f4d\u6570\u4ef7\u503c(Median Value)(Y) \u6211\u4eec\u5c06\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d(Gradient Descent)\u4f5c\u4e3a\u4f18\u5316\u7b56\u7565\u6765\u67e5\u627e\u56de\u5f52\u7ebf\u3002\u6211\u4e0d\u4f1a\u8be6\u7ec6\u4ecb\u7ecdGradient Descent\u7684\u7ec6\u8282\uff0c\u4f46\u8fd9\u91cc\u63d0\u9192\u4e00\u4e0b\u6743\u91cd\u66f4\u65b0\u89c4\u5219\uff1a \u8fd9\u91cc\uff0c\u03b8\u662f\u8981\u66f4\u65b0\u7684\u6743\u91cd\uff0c\u03b1\u662f\u5b66\u4e60\u7387\uff0cJ\u662f\u6210\u672c\u51fd\u6570\u3002\u6210\u672c\u51fd\u6570\u7531\u03b8\u53c2\u6570\u5316\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4ea7\u751f\u6700\u5c0f\u603b\u6210\u672c\u7684\u03b8\u503c\u3002 \u6211\u5df2\u7ecf\u4e3a\u4e0b\u9762\u7684\u6bcf\u4e2a\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e86\u6211\u4eec\u5c06\u9075\u5faa\u7684\u6b65\u9aa4\uff1a \u5199\u51fa\u9884\u6d4b\u51fd\u6570f(X)\u7684\u8868\u8fbe\u5f0f\uff0c\u5e76\u786e\u5b9a\u6211\u4eec\u9700\u8981\u627e\u5230\u7684\u53c2\u6570 \u786e\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u8ba1\u7b97\u5f97\u5230\u7684\u635f\u5931 \u627e\u5230\u6210\u672c\u51fd\u6570(\u6240\u6709\u6837\u672c\u7684\u5e73\u5747\u635f\u5931)\u7684\u8868\u8fbe\u5f0f \u627e\u5230\u4e0e\u6bcf\u4e2a\u672a\u77e5\u53c2\u6570\u76f8\u5173\u7684\u6210\u672c\u51fd\u6570\u7684\u68af\u5ea6 \u786e\u5b9a\u5b66\u4e60\u7387\u5e76\u5728\u56fa\u5b9a\u6b21\u6570\u4e2d\u8fdb\u884c\u8fed\u4ee3\u6267\u884c\u6743\u91cd\u66f4\u65b0\u89c4\u5219","title":"\u56de\u5f52\u635f\u5931\u51fd\u6570"},{"location":"question/losshs/#_5","text":"\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u7684\u5e73\u65b9\u8bef\u5dee\u635f\u5931(\u4e5f\u79f0\u4e3aL2 Loss)\u662f\u5b9e\u9645\u503c\u548c\u9884\u6d4b\u503c\u4e4b\u5dee\u7684\u5e73\u65b9\uff1a \u76f8\u5e94\u7684\u6210\u672c\u51fd\u6570\u662f\u8fd9\u4e9b \u5e73\u65b9\u8bef\u5dee\u7684\u5e73\u5747\u503c(MSE) \u3002 \u63a8\u8350\u4f60\u5f15\u7528\u4ee5\u4e0b\u4ee3\u7801\u65f6\u5148\u5c1d\u8bd5\u81ea\u5df1\u8ba1\u7b97\u51fa\u68af\u5ea6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def update_weights_MSE ( m , b , X , Y , learning_rate ): m_deriv = 0 b_deriv = 0 N = len ( X ) for i in range ( N ): # \u8ba1\u7b97\u504f\u5bfc\u6570\u4e3a # -2x(y - (mx + b)) m_deriv += - 2 * X [ i ] * ( Y [ i ] - ( m * X [ i ] + b )) # -2(y - (mx + b)) b_deriv += - 2 * ( Y [ i ] - ( m * X [ i ] + b )) # \u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m -= ( m_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m , b \u5728\u6ce2\u58eb\u987f\u4f4f\u623f\u6570\u636e\u4e0a\uff0c\u5728\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u4e2d\u5206\u522b\u8fed\u4ee3\u4e86500\u6b21\u5f97\u5230\u4e0b\u56fe\uff1a \u8ba9\u6211\u4eec\u518d\u8c08\u8c08MSE\u635f\u5931\u51fd\u6570\uff0c\u5b83\u662f\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570(\u5f62\u5f0f\u4e3aax^2+bx+c)\uff0c\u5e76\u4e14\u503c\u5927\u4e8e\u7b49\u4e8e0\u3002\u4e8c\u6b21\u51fd\u6570\u7684\u56fe\u5f62\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e8c\u6b21\u51fd\u6570\u4ec5\u5177\u6709\u5168\u5c40\u6700\u5c0f\u503c\u3002\u7531\u4e8e\u6ca1\u6709\u5c40\u90e8\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u9677\u5165\u5b83\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u68af\u5ea6\u4e0b\u964d\u5c06\u6536\u655b\u5230\u5168\u5c40\u6700\u5c0f\u503c(\u5982\u679c\u5b83\u5b8c\u5168\u6536\u655b)\u3002 MSE\u635f\u5931\u51fd\u6570\u901a\u8fc7\u5e73\u65b9\u8bef\u5dee\u6765\u60e9\u7f5a\u6a21\u578b\u72af\u7684\u5927\u9519\u8bef\u3002\u628a\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u6570\u5e73\u65b9\u4f1a\u4f7f\u5b83\u53d8\u5f97\u66f4\u5927\u3002\u4f46\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5c5e\u6027\u4f7fMSE\u6210\u672c\u51fd\u6570\u5bf9\u5f02\u5e38\u503c\u7684\u5065\u58ee\u6027\u964d\u4f4e\u3002\u56e0\u6b64\uff0c \u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u5bb9\u6613\u51fa\u73b0\u8bb8\u591a\u7684\u5f02\u5e38\u503c\uff0c\u5219\u4e0d\u5e94\u4f7f\u7528\u8fd9\u4e2a\u5b83 \u3002","title":"\u5e73\u65b9\u8bef\u5dee\u635f\u5931"},{"location":"question/losshs/#_6","text":"\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u7684\u7edd\u5bf9\u8bef\u5dee\u662f\u9884\u6d4b\u503c\u548c\u5b9e\u9645\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4e0e\u7b26\u53f7\u65e0\u5173\u3002\u7edd\u5bf9\u8bef\u5dee\u4e5f\u79f0\u4e3aL1 Loss\uff1a \u6b63\u5982\u6211\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u6210\u672c\u662f\u8fd9\u4e9b\u7edd\u5bf9\u8bef\u5dee\u7684\u5e73\u5747\u503c(MAE)\u3002 \u4e0eMSE\u76f8\u6bd4\uff0cMAE\u6210\u672c\u5bf9\u5f02\u5e38\u503c\u66f4\u52a0\u5065\u58ee \u3002\u4f46\u662f\uff0c\u5728\u6570\u5b66\u65b9\u7a0b\u4e2d\u5904\u7406\u7edd\u5bf9\u6216\u6a21\u6570\u8fd0\u7b97\u7b26\u5e76\u4e0d\u5bb9\u6613\u3002\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662fMAE\u7684\u7f3a\u70b9\u3002 \u4ee5\u4e0b\u662fMAE\u6210\u672c\u66f4\u65b0\u6743\u91cd\u7684\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def update_weights_MAE ( m , b , X , Y , learning_rate ): m_deriv = 0 b_deriv = 0 N = len ( X ) for i in range ( N ): #\u8ba1\u7b97\u504f\u5bfc\u6570 # -x(y - (mx + b)) / |mx + b| m_deriv += - X [ i ] * ( Y [ i ] - ( m * X [ i ] + b )) / abs ( Y [ i ] - ( m * X [ i ] + b )) # -(y - (mx + b)) / |mx + b| b_deriv += - ( Y [ i ] - ( m * X [ i ] + b )) / abs ( Y [ i ] - ( m * X [ i ] + b )) #\u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m -= ( m_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m , b \u5728\u4e0d\u540c\u5b66\u4e60\u901f\u7387\u4e2d\u5206\u522b\u8fed\u4ee3500\u6b21\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u56fe\uff1a","title":"\u7edd\u5bf9\u8bef\u5dee\u635f\u5931"},{"location":"question/losshs/#huber","text":"Huber\u635f\u5931\u7ed3\u5408\u4e86MSE\u548cMAE\u7684\u6700\u4f73\u7279\u6027\u3002\u5bf9\u4e8e\u8f83\u5c0f\u7684\u8bef\u5dee\uff0c\u5b83\u662f\u4e8c\u6b21\u7684\uff0c\u5426\u5219\u662f\u7ebf\u6027\u7684(\u5bf9\u4e8e\u5176\u68af\u5ea6\u4e5f\u662f\u5982\u6b64)\u3002Huber\u635f\u5931\u9700\u8981\u786e\u5b9a\u03b4\u53c2\u6570\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def update_weights_Huber ( m , b , X , Y , delta , learning_rate ): m_deriv = 0 b_deriv = 0 N = len ( X ) for i in range ( N ): # \u5c0f\u503c\u7684\u4e8c\u6b21\u5bfc\u6570\uff0c\u5927\u503c\u7684\u7ebf\u6027\u5bfc\u6570 if abs ( Y [ i ] - m * X [ i ] - b ) <= delta : m_deriv += - X [ i ] * ( Y [ i ] - ( m * X [ i ] + b )) b_deriv += - ( Y [ i ] - ( m * X [ i ] + b )) else : m_deriv += delta * X [ i ] * (( m * X [ i ] + b ) - Y [ i ]) / abs (( m * X [ i ] + b ) - Y [ i ]) b_deriv += delta * (( m * X [ i ] + b ) - Y [ i ]) / abs (( m * X [ i ] + b ) - Y [ i ]) #\u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m -= ( m_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m , b \u6211\u4eec\u4ee50.0001\u7684\u5b66\u4e60\u901f\u7387\u5206\u522b\u5bf9\u03b4\u53c2\u6570\u7684\u4e0d\u540c\u503c\u8fdb\u884c500\u6b21\u6743\u91cd\u66f4\u65b0\u8fed\u4ee3\u5f97\u5230\u4e0b\u56fe\uff1a Huber\u635f\u5931\u5bf9\u4e8e\u5f02\u5e38\u503c\u6bd4MSE\u66f4\u5f3a\u3002 \u5b83\u7528\u4e8e\u7a33\u5065\u56de\u5f52(robust regression)\uff0cM\u4f30\u8ba1\u6cd5(M-estimator)\u548c\u53ef\u52a0\u6a21\u578b(additive model)\u3002Huber\u635f\u5931\u7684\u53d8\u4f53\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5206\u7c7b \u3002","title":"Huber\u635f\u5931"},{"location":"question/losshs/#_7","text":"\u610f\u4e49\u5982\u5176\u540d\u3002\u4e8c\u5206\u7c7b\u662f\u6307\u5c06\u7269\u54c1\u5206\u914d\u5230\u4e24\u4e2a\u7c7b\u4e2d\u7684\u4e00\u4e2a\u3002\u8be5\u5206\u7c7b\u57fa\u4e8e\u5e94\u7528\u4e8e\u8f93\u5165\u7279\u5f81\u5411\u91cf\u7684\u89c4\u5219\u3002\u4e8c\u5206\u7c7b\u7684\u4f8b\u5b50\u4f8b\u5982\uff0c\u6839\u636e\u90ae\u4ef6\u7684\u4e3b\u9898\u5c06\u7535\u5b50\u90ae\u4ef6\u5206\u7c7b\u4e3a\u5783\u573e\u90ae\u4ef6\u6216\u975e\u5783\u573e\u90ae\u4ef6\u3002 \u6211\u5c06\u5728\u4e73\u817a\u764c\u6570\u636e\u96c6^2\u4e0a\u8bf4\u660e\u8fd9\u4e9b\u4e8c\u5206\u7c7b\u635f\u5931\u51fd\u6570\u3002 \u6211\u4eec\u5e0c\u671b\u6839\u636e\u5e73\u5747\u534a\u5f84\uff0c\u9762\u79ef\uff0c\u5468\u957f\u7b49\u7279\u5f81\u5c06\u80bf\u7624\u5206\u7c7b\u4e3a\" \u6076\u6027(Malignant) \"\u6216\" \u826f\u6027(Benign) \"\u3002\u4e3a\u7b80\u5316\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u4ec5\u4f7f\u7528\u4e24\u4e2a\u8f93\u5165\u7279\u5f81(X_1\u548cX_2)\uff0c\u5373\" \u6700\u5dee\u533a\u57df(worst area) \"\u548c\" \u5e73\u5747\u5bf9\u79f0\u6027(mean symmetry) \"\u7528\u4e8e\u5206\u7c7b\u3002Y\u662f\u4e8c\u503c\u7684\uff0c\u4e3a0(\u6076\u6027)\u62161(\u826f\u6027)\u3002 \u8fd9\u662f\u6211\u4eec\u6570\u636e\u7684\u6563\u70b9\u56fe\uff1a","title":"\u4e8c\u5206\u7c7b\u635f\u5931\u51fd\u6570"},{"location":"question/losshs/#_8","text":"\u8ba9\u6211\u4eec\u4ece\u7406\u89e3\u672f\u8bed\"\u71b5\"\u5f00\u59cb\u3002\u901a\u5e38\uff0c\u6211\u4eec\u4f7f\u7528\u71b5\u6765\u8868\u793a\u65e0\u5e8f\u6216\u4e0d\u786e\u5b9a\u6027\u3002\u6d4b\u91cf\u5177\u6709\u6982\u7387\u5206\u5e03p(X)\u7684\u968f\u673a\u53d8\u91cfX\uff1a \u8d1f\u53f7\u7528\u4e8e\u4f7f\u6700\u540e\u7684\u7ed3\u679c\u4e3a\u6b63\u6570\u3002 \u6982\u7387\u5206\u5e03\u7684\u71b5\u503c\u8d8a\u5927\uff0c\u8868\u660e\u5206\u5e03\u7684\u4e0d\u786e\u5b9a\u6027\u8d8a\u5927\u3002\u540c\u6837\uff0c\u4e00\u4e2a\u8f83\u5c0f\u7684\u503c\u4ee3\u8868\u4e00\u4e2a\u66f4\u786e\u5b9a\u7684\u5206\u5e03\u3002 \u8fd9\u4f7f\u5f97\u4e8c\u5143\u4ea4\u53c9\u71b5\u9002\u5408\u4f5c\u4e3a\u635f\u5931\u51fd\u6570( \u4f60\u5e0c\u671b\u6700\u5c0f\u5316\u5176\u503c )\u3002\u6211\u4eec\u5bf9\u8f93\u51fa\u6982\u7387p\u7684\u5206\u7c7b\u6a21\u578b\u4f7f\u7528 \u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931 \u3002 1 2 \u5143\u7d20\u5c5e\u4e8e\u7b2c1\u7c7b(\u6216\u6b63\u7c7b)\u7684\u6982\u7387=p \u5143\u7d20\u5c5e\u4e8e\u7b2c0\u7c7b(\u6216\u8d1f\u7c7b)\u7684\u6982\u7387=1-p \u7136\u540e\uff0c\u8f93\u51fa\u6807\u7b7ey(\u53ef\u4ee5\u53d6\u503c0\u548c1)\u7684\u4ea4\u53c9\u71b5\u635f\u5931\u548c\u548c\u9884\u6d4b\u6982\u7387p\u5b9a\u4e49\u4e3a\uff1a \u8fd9\u4e5f\u79f0\u4e3aLog-Loss(\u5bf9\u6570\u635f\u5931)\u3002\u4e3a\u4e86\u8ba1\u7b97\u6982\u7387p\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528sigmoid\u51fd\u6570\u3002\u8fd9\u91cc\uff0cz\u662f\u6211\u4eec\u8f93\u5165\u529f\u80fd\u7684\u51fd\u6570\uff1a sigmoid\u51fd\u6570\u7684\u8303\u56f4\u662f[0,1]\uff0c\u8fd9\u4f7f\u5f97\u5b83\u9002\u5408\u4e8e\u8ba1\u7b97\u6982\u7387\u3002 \u63a8\u8350\u4f60\u5f15\u7528\u4ee5\u4e0b\u4ee3\u7801\u65f6\u5148\u5c1d\u8bd5\u81ea\u5df1\u8ba1\u7b97\u51fa\u68af\u5ea6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 def update_weights_BCE ( m1 , m2 , b , X1 , X2 , Y , learning_rate ): m1_deriv = 0 m2_deriv = 0 b_deriv = 0 N = len ( X1 ) for i in range ( N ): s = 1 / ( 1 / ( 1 + math . exp ( - m1 * X1 [ i ] - m2 * X2 [ i ] - b ))) # \u8ba1\u7b97\u504f\u5bfc\u6570 m1_deriv += - X1 [ i ] * ( s - Y [ i ]) m2_deriv += - X2 [ i ] * ( s - Y [ i ]) b_deriv += - ( s - Y [ i ]) # \u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m1 -= ( m1_deriv / float ( N )) * learning_rate m2 -= ( m2_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m1 , m2 , b \u5728\u4e0d\u540calpha\u503c\u91cc\u4f7f\u7528\u6743\u91cd\u66f4\u65b0\u89c4\u5219\u8fdb\u884c1000\u6b21\u8fed\u4ee3\u5f97\u5230\u4e0b\u56fe\uff1a","title":"\u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931"},{"location":"question/losshs/#hinge","text":"Hinge\u635f\u5931\u4e3b\u8981\u7528\u4e8e\u5e26\u6709\u7c7b\u6807\u7b7e-1\u548c1\u7684\u652f\u6301\u5411\u91cf\u673a(SVM) \u3002\u56e0\u6b64\uff0c\u8bf7\u786e\u4fdd\u5c06\u6570\u636e\u96c6\u4e2d\"\u6076\u6027\"\u7c7b\u7684\u6807\u7b7e\u4ece0\u66f4\u6539\u4e3a-1\u3002 Hinge\u635f\u5931\u4e0d\u4ec5\u4f1a\u60e9\u7f5a\u9519\u8bef\u7684\u9884\u6d4b\uff0c\u8fd8\u4f1a\u60e9\u7f5a\u4e0d\u81ea\u4fe1\u7684\u6b63\u786e\u9884\u6d4b\u3002 \u6570\u636e\u5bf9(x\uff0cy)\u7684Hinge\u635f\u5931\u5982\u56fe\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def update_weights_Hinge ( m1 , m2 , b , X1 , X2 , Y , learning_rate ): m1_deriv = 0 m2_deriv = 0 b_deriv = 0 N = len ( X1 ) for i in range ( N ): # \u8ba1\u7b97\u504f\u5bfc\u6570 if Y [ i ] * ( m1 * X1 [ i ] + m2 * X2 [ i ] + b ) <= 1 : m1_deriv += - X1 [ i ] * Y [ i ] m2_deriv += - X2 [ i ] * Y [ i ] b_deriv += - Y [ i ] # \u5426\u5219\u504f\u5bfc\u6570\u4e3a0 # \u6211\u4eec\u51cf\u53bb\u5b83\uff0c\u56e0\u4e3a\u5bfc\u6570\u6307\u5411\u6700\u9661\u7684\u4e0a\u5347\u65b9\u5411 m1 -= ( m1_deriv / float ( N )) * learning_rate m2 -= ( m2_deriv / float ( N )) * learning_rate b -= ( b_deriv / float ( N )) * learning_rate return m1 , m2 , b \u5728\u4f7f\u7528\u4e09\u4e2a\u4e0d\u540c\u7684alpha\u503c\u8fd0\u884c2000\u6b21\u8fed\u4ee3\u7684\u66f4\u65b0\u51fd\u6570\u4e4b\u540e\uff0c\u5f97\u5230\u4e0b\u56fe\uff1a Hinge\u635f\u5931\u7b80\u5316\u4e86SVM\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u540c\u65f6\u6700\u5927\u5316\u4e86\u635f\u5931(\u4e0e\u5bf9\u6570\u635f\u5931(Log-Loss)\u76f8\u6bd4)\u3002\u5f53\u6211\u4eec\u60f3\u8981\u505a\u5b9e\u65f6\u51b3\u7b56\u800c\u4e0d\u662f\u9ad8\u5ea6\u5173\u6ce8\u51c6\u786e\u6027\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002","title":"Hinge\u635f\u5931"},{"location":"question/losshs/#_9","text":"\u7535\u5b50\u90ae\u4ef6\u4e0d\u4ec5\u88ab\u5f52\u7c7b\u4e3a\u5783\u573e\u90ae\u4ef6\u6216\u5783\u573e\u90ae\u4ef6(\u8fd9\u4e0d\u518d\u662f90\u5e74\u4ee3\u4e86!)\u3002\u5b83\u4eec\u5206\u4e3a\u5404\u79cd\u5176\u4ed6\u7c7b\u522b-\u5de5\u4f5c\uff0c\u5bb6\u5ead\uff0c\u793e\u4ea4\uff0c\u4fc3\u9500\u7b49\u3002 \u6211\u4eec\u5c06\u4f7f\u7528Iris\u6570\u636e\u96c6^3\u6765\u7406\u89e3\u5269\u4f59\u7684\u4e24\u4e2a\u635f\u5931\u51fd\u6570\u3002\u6211\u4eec\u5c06\u4f7f\u75282\u4e2a\u7279\u5f81X \u843c\u7247\u957f\u5ea6(Sepal length)\u548c\u7279\u5f81X\u82b1\u74e3\u5bbd\u5ea6(Petal width)\u6765\u9884\u6d4b\u9e22\u5c3e\u82b1\u7684\u7c7b\u522b(Y) -Setosa\uff0cVersicolor\u6216Virginica \u6211\u4eec\u7684\u4efb\u52a1\u662f\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u548cKeras\u5185\u7f6e\u7684Adam\u4f18\u5316\u5668\u6765\u5b9e\u73b0\u5206\u7c7b\u5668\u3002\u8fd9\u662f\u56e0\u4e3a\u968f\u7740\u53c2\u6570\u6570\u91cf\u7684\u589e\u52a0\uff0c\u6570\u5b66\u4ee5\u53ca\u4ee3\u7801\u5c06\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002 \u8fd9\u662f\u6211\u4eec\u6570\u636e\u7684\u6563\u70b9\u56fe\uff1a","title":"\u591a\u5206\u7c7b\u635f\u5931\u51fd\u6570"},{"location":"question/losshs/#_10","text":"\u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\u662f\u4e8c\u5143\u4ea4\u53c9\u71b5\u635f\u5931\u7684\u63a8\u5e7f\u3002\u8f93\u5165\u5411\u91cfXi\u548c\u76f8\u5e94\u7684one-hot\u7f16\u7801\u76ee\u6807\u5411\u91cfYi\u7684\u635f\u5931\u662f\uff1a \u6211\u4eec\u4f7f\u7528softmax\u51fd\u6570\u6765\u627e\u5230\u6982\u7387pij\uff1a \"Softmax\u5c42\u662f\u63a5\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u51fa\u5c42\u524d\u3002Softmax\u5c42\u5fc5\u987b\u4e0e\u8f93\u51fa\u5c42\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u3002\"Google Developer's Blog \u6700\u540e\uff0c\u6211\u4eec\u7684\u8f93\u51fa\u662f\u5177\u6709\u7ed9\u5b9a\u8f93\u5165\u7684\u6700\u5927\u6982\u7387\u7684\u7c7b\u522b\u3002 \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u8f93\u5165\u5c42\u548c\u4e00\u4e2a\u8f93\u51fa\u5c42\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\uff0c\u5e76\u7528\u4e0d\u540c\u7684\u5b66\u4e60\u901f\u5ea6\u7f16\u8bd1\u5b83\u3002\u5728model.compile()\u8bed\u53e5\u4e2d\u5c06\u635f\u5931\u51fd\u6570\u6307\u5b9a\u4e3a' categorical_crossentropy ': 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # \u5bfc\u5165\u5305 from keras.layers import Dense from keras.models import Sequential from keras.optimizers import adam #alpha\u8bbe\u7f6e\u4e3a0.001\uff0c\u5982adam\u4f18\u5316\u5668\u4e2d\u7684lr\u53c2\u6570\u6240\u793a # \u521b\u5efa\u6a21\u578b model_alpha1 = Sequential () model_alpha1 . add ( Dense ( 50 , input_dim = 2 , activation = 'relu' )) model_alpha1 . add ( Dense ( 3 , activation = 'softmax' )) # \u7f16\u8bd1\u6a21\u578b opt_alpha1 = adam ( lr = 0.001 ) model_alpha1 . compile ( loss = 'categorical_crossentropy' , optimizer = opt_alpha1 , metrics = [ 'accuracy' ]) # \u62df\u5408\u6a21\u578b # dummy_Y\u662fone-hot\u5f62\u5f0f\u7f16\u7801\u7684 # history_alpha1\u7528\u4e8e\u4e3a\u7ed8\u56fe\u7684\u9a8c\u8bc1\u548c\u51c6\u786e\u6027\u8bc4\u5206 history_alpha1 = model_alpha1 . fit ( dataX , dummy_Y , validation_data = ( dataX , dummy_Y ), epochs = 200 , verbose = 0 ) \u5728\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u7ecf\u8fc7200\u8f6e\u8bad\u7ec3\u540e\u6210\u672c\u548c\u51c6\u786e\u5ea6\u7684\u56fe\u5982\u4e0b\uff1a","title":"\u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931"},{"location":"question/losshs/#kl","text":"KL\u6563\u5ea6(Kullback Leibler Divergence Loss)\u6982\u7387\u5206\u5e03\u4e0e\u53e6\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u533a\u522b\u7684\u5ea6\u91cf\u3002KL\u6563\u5ea6\u4e3a\u96f6\u8868\u793a\u5206\u5e03\u76f8\u540c\u3002 \u8bf7\u6ce8\u610f\uff0c\u53d1\u6563\u51fd\u6570\u4e0d\u5bf9\u79f0\u3002\u5373\uff1a \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48KL\u6563\u5ea6\u4e0d\u80fd\u7528\u4f5c\u8ddd\u79bb\u5ea6\u91cf\u7684\u539f\u56e0\u3002 \u6211\u5c06\u63cf\u8ff0\u4f7f\u7528KL\u6563\u5ea6\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\u800c\u4e0d\u8fdb\u884c\u6570\u5b66\u8ba1\u7b97\u7684\u57fa\u672c\u65b9\u6cd5\u3002\u5728\u7ed9\u5b9a\u4e00\u4e9b\u8fd1\u4f3c\u5206\u5e03Q\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u8fd1\u4f3c\u5173\u4e8e\u8f93\u5165\u7279\u5f81\u7684\u76ee\u6807\u53d8\u91cf\u7684\u771f\u5b9e\u6982\u7387\u5206\u5e03P. \u7531\u4e8eKL\u6563\u5ea6\u4e0d\u5bf9\u79f0\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff1a \u7b2c\u4e00\u79cd\u65b9\u6cd5\u7528\u4e8e\u76d1\u7763\u5b66\u4e60\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7528\u4e8e\u5f3a\u5316\u5b66\u4e60\u3002KL\u6563\u5ea6\u5728\u529f\u80fd\u4e0a\u7c7b\u4f3c\u4e8e\u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\uff0cKL\u6563\u5ea6\u4e5f\u53ef\u4ee5\u79f0\u4e3aP\u76f8\u5bf9\u4e8eQ\u7684\u76f8\u5bf9\u71b5\uff1a \u6211\u4eec\u5728compile()\u51fd\u6570\u4e2d\u6307\u5b9a'kullback_leibler_divergence'\u4f5c\u4e3a\u635f\u5931\u51fd\u6570\uff0c\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u5728\u5904\u7406\u591a\u5206\u7c7b\u4ea4\u53c9\u71b5\u635f\u5931\u65f6\u6240\u505a\u7684\u90a3\u6837\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # \u5bfc\u5165\u5305 from keras.layers import Dense from keras.models import Sequential from keras.optimizers import adam # alpha\u8bbe\u7f6e\u4e3a0.001\uff0c\u5982adam\u4f18\u5316\u5668\u4e2d\u7684lr\u53c2\u6570\u6240\u793a # \u521b\u5efa\u6a21\u578b model_alpha1 = Sequential () model_alpha1 . add ( Dense ( 50 , input_dim = 2 , activation = 'relu' )) model_alpha1 . add ( Dense ( 3 , activation = 'softmax' )) # \u7f16\u8bd1\u6a21\u578b opt_alpha1 = adam ( lr = 0.001 ) model_alpha1 . compile ( loss = 'kullback_leibler_divergence' , optimizer = opt_alpha1 , metrics = [ 'accuracy' ]) # \u62df\u5408\u6a21\u578b # dummy_Y\u662fone-hot\u5f62\u5f0f\u7f16\u7801\u7684 # history_alpha1\u7528\u4e8e\u4e3a\u7ed8\u56fe\u7684\u9a8c\u8bc1\u548c\u51c6\u786e\u6027\u8bc4\u5206 history_alpha1 = model_alpha1 . fit ( dataX , dummy_Y , validation_data = ( dataX , dummy_Y ), epochs = 200 , verbose = 0 ) \u5728\u4e0d\u540c\u7684\u5b66\u4e60\u7387\u7ecf\u8fc7200\u8f6e\u8bad\u7ec3\u540e\u6210\u672c\u548c\u51c6\u786e\u5ea6\u7684\u56fe\u5982\u4e0b\uff1a \u4e0e\u591a\u5206\u7c7b\u5206\u7c7b\u76f8\u6bd4\uff0cKL\u6563\u5ea6\u66f4\u5e38\u7528\u4e8e\u903c\u8fd1\u590d\u6742\u51fd\u6570\u3002\u6211\u4eec\u5728\u4f7f\u7528\u53d8\u5206\u81ea\u52a8\u7f16\u7801\u5668(VAE)\u7b49\u6df1\u5ea6\u751f\u6210\u6a21\u578b\u65f6\u7ecf\u5e38\u4f7f\u7528KL\u6563\u5ea6\u3002","title":"KL\u6563\u5ea6"},{"location":"question/meta-path/","text":"Meta-Path \u5143\u6570\u636e \u00b6","title":"9. Meta Path"},{"location":"question/meta-path/#meta-path","text":"","title":"Meta-Path \u5143\u6570\u636e"},{"location":"question/pj/","text":"\u5b66\u4e60\u6027\u80fd\u8bc4\u4ef7\u6307\u6807 \u00b6 \u673a\u5668\u5b66\u4e60\u5206\u7c7b \u6027\u80fd\u6307\u6807 \u5206\u7c7b Accuracy\u3001precision\u3001Recall\u3001F1 Score\u3001ROC Curve\u3001PR Curve\u3001AUC\u3001\u6df7\u6dc6\u77e9\u9635 \u56de\u5f52 MAE\u3001MSE\u3001RMSE \u56de\u5f52 \u00b6 \u5e73\u5747\u7edd\u5bf9\u8bef\u5deeMAE \u00b6 \u5e73\u5747\u7edd\u5bf9\u8bef\u5deeMAE\uff08Mean Absolute Error\uff09\u53c8\u88ab\u79f0\u4e3a L1\u8303\u6570\u635f\u5931\u3002 \u5747\u65b9\u8bef\u5deeMSE \u00b6 \u5747\u65b9\u8bef\u5deeMSE\uff08Mean Squared Error\uff09\u53c8\u88ab\u79f0\u4e3a L2\u8303\u6570\u635f\u5931\u3002 \u5747\u65b9\u6839\u8bef\u5deeRMSE \u00b6 \u6807\u51c6\u5deeSD \u00b6 \u5206\u7c7b \u00b6 \u51c6\u786e\u5ea6ACC \u00b6 \u67e5\u51c6\u7387Prec \u00b6 \u53ec\u56de\u7387Recall \u00b6 F1\u6d4b\u91cf\u503c \u00b6 ROC \u00b6 \u8fd9\u91cc\u4e0d\u8d58\u8ff0ROC\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u53c2\u8003 ROC\u548cAUC\u4ecb\u7ecd\u4ee5\u53ca\u5982\u4f55\u8ba1\u7b97AUC PR \u00b6 AUC \u00b6 AUC \u662f ROC (Receiver Operating Characteristic) \u66f2\u7ebf\u4ee5\u4e0b\u7684\u9762\u79ef, \u4ecb\u4e8e0.1\u548c1\u4e4b\u95f4\u3002Auc\u4f5c\u4e3a\u6570\u503c\u53ef\u4ee5\u76f4\u89c2\u7684\u8bc4\u4ef7\u5206\u7c7b\u5668\u7684\u597d\u574f\uff0c\u503c\u8d8a\u5927\u8d8a\u597d\u3002 \u6df7\u6dc6\u77e9\u9635 \u00b6","title":"1. \u8bc4\u4ef7\u6307\u6807"},{"location":"question/pj/#_1","text":"\u673a\u5668\u5b66\u4e60\u5206\u7c7b \u6027\u80fd\u6307\u6807 \u5206\u7c7b Accuracy\u3001precision\u3001Recall\u3001F1 Score\u3001ROC Curve\u3001PR Curve\u3001AUC\u3001\u6df7\u6dc6\u77e9\u9635 \u56de\u5f52 MAE\u3001MSE\u3001RMSE","title":"\u5b66\u4e60\u6027\u80fd\u8bc4\u4ef7\u6307\u6807"},{"location":"question/pj/#_2","text":"","title":"\u56de\u5f52"},{"location":"question/pj/#mae","text":"\u5e73\u5747\u7edd\u5bf9\u8bef\u5deeMAE\uff08Mean Absolute Error\uff09\u53c8\u88ab\u79f0\u4e3a L1\u8303\u6570\u635f\u5931\u3002","title":"\u5e73\u5747\u7edd\u5bf9\u8bef\u5deeMAE"},{"location":"question/pj/#mse","text":"\u5747\u65b9\u8bef\u5deeMSE\uff08Mean Squared Error\uff09\u53c8\u88ab\u79f0\u4e3a L2\u8303\u6570\u635f\u5931\u3002","title":"\u5747\u65b9\u8bef\u5deeMSE"},{"location":"question/pj/#rmse","text":"","title":"\u5747\u65b9\u6839\u8bef\u5deeRMSE"},{"location":"question/pj/#sd","text":"","title":"\u6807\u51c6\u5deeSD"},{"location":"question/pj/#_3","text":"","title":"\u5206\u7c7b"},{"location":"question/pj/#acc","text":"","title":"\u51c6\u786e\u5ea6ACC"},{"location":"question/pj/#prec","text":"","title":"\u67e5\u51c6\u7387Prec"},{"location":"question/pj/#recall","text":"","title":"\u53ec\u56de\u7387Recall"},{"location":"question/pj/#f1","text":"","title":"F1\u6d4b\u91cf\u503c"},{"location":"question/pj/#roc","text":"\u8fd9\u91cc\u4e0d\u8d58\u8ff0ROC\u7684\u4e00\u4e9b\u7ec6\u8282\uff0c\u53c2\u8003 ROC\u548cAUC\u4ecb\u7ecd\u4ee5\u53ca\u5982\u4f55\u8ba1\u7b97AUC","title":"ROC"},{"location":"question/pj/#pr","text":"","title":"PR"},{"location":"question/pj/#auc","text":"AUC \u662f ROC (Receiver Operating Characteristic) \u66f2\u7ebf\u4ee5\u4e0b\u7684\u9762\u79ef, \u4ecb\u4e8e0.1\u548c1\u4e4b\u95f4\u3002Auc\u4f5c\u4e3a\u6570\u503c\u53ef\u4ee5\u76f4\u89c2\u7684\u8bc4\u4ef7\u5206\u7c7b\u5668\u7684\u597d\u574f\uff0c\u503c\u8d8a\u5927\u8d8a\u597d\u3002","title":"AUC"},{"location":"question/pj/#_4","text":"","title":"\u6df7\u6dc6\u77e9\u9635"},{"location":"question/sjc/","text":"\u65f6\u95f4\u6233 \u00b6 \u4ecb\u7ecd \u00b6 \u65f6\u95f4\u6233\uff08timestamp\uff09\uff0c\u4e00\u4e2a\u80fd\u8868\u793a\u4e00\u4efd\u6570\u636e\u5728\u67d0\u4e2a\u7279\u5b9a\u65f6\u95f4\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u7684\u3001 \u5b8c\u6574\u7684\u3001 \u53ef\u9a8c\u8bc1\u7684\u6570\u636e,\u901a\u5e38\u662f\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217\uff0c\u552f\u4e00\u5730\u6807\u8bc6\u67d0\u4e00\u523b\u7684\u65f6\u95f4\u3002\u4f7f\u7528\u6570\u5b57\u7b7e\u540d\u6280\u672f\u4ea7\u751f\u7684\u6570\u636e\uff0c \u7b7e\u540d\u7684\u5bf9\u8c61\u5305\u62ec\u4e86\u539f\u59cb\u6587\u4ef6\u4fe1\u606f\u3001 \u7b7e\u540d\u53c2\u6570\u3001 \u7b7e\u540d\u65f6\u95f4\u7b49\u4fe1\u606f\u3002\u5e7f\u6cdb\u7684\u8fd0\u7528\u5728\u77e5\u8bc6\u4ea7\u6743\u4fdd\u62a4\u3001 \u5408\u540c\u7b7e\u5b57\u3001 \u91d1\u878d\u5e10\u52a1\u3001 \u7535\u5b50\u62a5\u4ef7\u6295\u6807\u3001 \u80a1\u7968\u4ea4\u6613\u7b49\u65b9\u9762\u3002 \u8f6c\u5316 \u00b6 \u65f6\u95f4\u6233\u8f6c\u5316\u5de5\u5177","title":"4. \u65f6\u95f4\u6233"},{"location":"question/sjc/#_1","text":"","title":"\u65f6\u95f4\u6233"},{"location":"question/sjc/#_2","text":"\u65f6\u95f4\u6233\uff08timestamp\uff09\uff0c\u4e00\u4e2a\u80fd\u8868\u793a\u4e00\u4efd\u6570\u636e\u5728\u67d0\u4e2a\u7279\u5b9a\u65f6\u95f4\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u7684\u3001 \u5b8c\u6574\u7684\u3001 \u53ef\u9a8c\u8bc1\u7684\u6570\u636e,\u901a\u5e38\u662f\u4e00\u4e2a\u5b57\u7b26\u5e8f\u5217\uff0c\u552f\u4e00\u5730\u6807\u8bc6\u67d0\u4e00\u523b\u7684\u65f6\u95f4\u3002\u4f7f\u7528\u6570\u5b57\u7b7e\u540d\u6280\u672f\u4ea7\u751f\u7684\u6570\u636e\uff0c \u7b7e\u540d\u7684\u5bf9\u8c61\u5305\u62ec\u4e86\u539f\u59cb\u6587\u4ef6\u4fe1\u606f\u3001 \u7b7e\u540d\u53c2\u6570\u3001 \u7b7e\u540d\u65f6\u95f4\u7b49\u4fe1\u606f\u3002\u5e7f\u6cdb\u7684\u8fd0\u7528\u5728\u77e5\u8bc6\u4ea7\u6743\u4fdd\u62a4\u3001 \u5408\u540c\u7b7e\u5b57\u3001 \u91d1\u878d\u5e10\u52a1\u3001 \u7535\u5b50\u62a5\u4ef7\u6295\u6807\u3001 \u80a1\u7968\u4ea4\u6613\u7b49\u65b9\u9762\u3002","title":"\u4ecb\u7ecd"},{"location":"question/sjc/#_3","text":"\u65f6\u95f4\u6233\u8f6c\u5316\u5de5\u5177","title":"\u8f6c\u5316"},{"location":"question/txtz/","text":"\u68af\u5ea6\u6d88\u5931\u4e0e\u68af\u5ea6\u7206\u70b8 \u00b6 \u9996\u5148\u8ba9\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e2a\u6982\u5ff5\uff1a\u4ec0\u4e48\u662f \u68af\u5ea6\u4e0d\u7a33\u5b9a \u5462\uff1f \u6982\u5ff5\uff1a\u5728\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u68af\u5ea6\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5728\u9760\u8fd1\u8f93\u5165\u5c42\u7684\u9690\u85cf\u5c42\u4e2d\u6216\u4f1a\u6d88\u5931\uff0c\u6216\u4f1a\u7206\u70b8\u3002\u8fd9\u79cd\u4e0d\u7a33\u5b9a\u6027\u624d\u662f\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u57fa\u4e8e\u68af\u5ea6\u5b66\u4e60\u7684\u6839\u672c\u95ee\u9898\u3002 \u4ea7\u751f\u68af\u5ea6\u4e0d\u7a33\u5b9a\u7684\u6839\u672c\u539f\u56e0\uff1a\u524d\u9762\u5c42\u4e0a\u7684\u68af\u5ea6\u662f\u6765\u81ea\u540e\u9762\u5c42\u4e0a\u68af\u5ea6\u7684\u4e58\u79ef\u3002\u5f53\u5b58\u5728\u8fc7\u591a\u7684\u5c42\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u68af\u5ea6\u4e0d\u7a33\u5b9a\u573a\u666f\uff0c\u6bd4\u5982\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u3002 \u6ce8\u610f :\uff1a\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u5c5e\u4e8e\u68af\u5ea6\u4e0d\u7a33\u5b9a\u7684\u8303\u7574\u3002 \u6982\u5ff5 \u00b6 \u68af\u5ea6\u6d88\u5931\uff1a\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5f53\u524d\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\u4f4e\u4e8e\u540e\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\uff0c\u5373\u968f\u7740\u9690\u85cf\u5c42\u6570\u76ee\u7684\u589e\u52a0\uff0c\u5206\u7c7b\u51c6\u786e\u7387\u53cd\u800c\u4e0b\u964d\u4e86\u3002\u8fd9\u79cd\u73b0\u8c61\u53eb\u68af\u5ea6\u6d88\u5931\u3002 \u68af\u5ea6\u7206\u70b8\uff1a\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5f53\u524d\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\u4f4e\u4e8e\u540e\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\uff0c\u5373\u968f\u7740\u9690\u85cf\u5c42\u6570\u76ee\u7684\u589e\u52a0\uff0c\u5206\u7c7b\u51c6\u786e\u7387\u53cd\u800c\u4e0b\u964d\u4e86\u3002\u8fd9\u79cd\u73b0\u8c61\u53eb\u68af\u5ea6\u7206\u70b8\u3002 \u5176\u5b9e\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u662f\u4e00\u56de\u4e8b\uff0c\u53ea\u662f\u8868\u73b0\u7684\u5f62\u5f0f\uff0c\u4ee5\u53ca\u4ea7\u751f\u7684\u539f\u56e0\u4e0d\u4e00\u6837\u3002 \u4ea7\u751f\u539f\u56e0 \u00b6 \u68af\u5ea6\u6d88\u5931\uff1a\uff081\uff09\u9690\u85cf\u5c42\u7684\u5c42\u6570\u8fc7\u591a\uff1b\uff082\uff09\u91c7\u7528\u4e86\u4e0d\u5408\u9002\u7684\u6fc0\u6d3b\u51fd\u6570(\u66f4\u5bb9\u6613\u4ea7\u751f\u68af\u5ea6\u6d88\u5931\uff0c\u4f46\u662f\u4e5f\u6709\u53ef\u80fd\u4ea7\u751f\u68af\u5ea6\u7206\u70b8) \u68af\u5ea6\u7206\u70b8\uff1a\uff081\uff09\u9690\u85cf\u5c42\u7684\u5c42\u6570\u8fc7\u591a\uff1b\uff082\uff09\u6743\u91cd\u7684\u521d\u59cb\u5316\u503c\u8fc7\u5927 \u4ee5\u4e0b\u5c06\u4ece\u8fd93\u4e2a\u89d2\u5ea6\u89e3\u91ca\u4ea7\u751f\u8fd9\u4e24\u79cd\u73b0\u8c61\u7684\u6839\u672c\u539f\u56e0: 1.\u9690\u85cf\u5c42\u7684\u5c42\u6570\u8fc7\u591a \u00b6 \u603b\u7ed3\uff1a\u4ece\u6df1\u5c42\u7f51\u7edc\u89d2\u5ea6\u6765\u8bb2\uff0c\u4e0d\u540c\u7684\u5c42\u5b66\u4e60\u7684\u901f\u5ea6\u5dee\u5f02\u5f88\u5927\uff0c\u8868\u73b0\u4e3a\u7f51\u7edc\u4e2d\u9760\u8fd1\u8f93\u51fa\u7684\u5c42\u5b66\u4e60\u7684\u60c5\u51b5\u5f88\u597d\uff0c\u9760\u8fd1\u8f93\u5165\u7684\u5c42\u5b66\u4e60\u7684\u5f88\u6162\uff0c\u6709\u65f6\u751a\u81f3\u8bad\u7ec3\u4e86\u5f88\u4e45\uff0c\u524d\u51e0\u5c42\u7684\u6743\u503c\u548c\u521a\u5f00\u59cb\u968f\u673a\u521d\u59cb\u5316\u7684\u503c\u5dee\u4e0d\u591a\u3002\u56e0\u6b64\uff0c\u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\uff0c\u5176\u6839\u672c\u539f\u56e0\u5728\u4e8e\u53cd\u5411\u4f20\u64ad\u8bad\u7ec3\u6cd5\u5219\uff0c\u5c5e\u4e8e\u5148\u5929\u4e0d\u8db3\u3002\u5177\u4f53\u89c1\u4e0b\u56fe\uff1a 2.\u6fc0\u6d3b\u51fd\u6570 \u00b6 3.\u521d\u59cb\u5316\u6743\u91cd\u7684\u503c\u8fc7\u5927 \u00b6 \u89e3\u51b3\u65b9\u6848 \u00b6 \u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u95ee\u9898\u90fd\u662f\u56e0\u4e3a\u7f51\u7edc\u592a\u6df1\uff0c\u7f51\u7edc\u6743\u503c\u66f4\u65b0\u4e0d\u7a33\u5b9a\u9020\u6210\u7684\uff0c\u672c\u8d28\u4e0a\u662f\u56e0\u4e3a\u68af\u5ea6\u53cd\u5411\u4f20\u64ad\u4e2d\u7684\u8fde\u4e58\u6548\u5e94\u3002\u5bf9\u4e8e\u66f4\u666e\u904d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u4e09\u79cd\u65b9\u6848\u89e3\u51b3\uff1a 1\uff09\u7528ReLU\u3001Leaky-ReLU\u3001P-ReLU\u3001R-ReLU\u3001Maxout\u7b49\u6fc0\u6d3b\u51fd\u6570\u66ff\u4ee3sigmoid\u6fc0\u6d3b\u51fd\u6570; 2\uff09\u52a0\u5165Batch Normalization(BN)\u5c42; 3\uff09LSTM\u7684\u7ed3\u6784\u8bbe\u8ba1\u4e5f\u53ef\u4ee5\u6539\u5584RNN\u4e2d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002","title":"2. \u68af\u5ea6\u6d88\u5931\u4e0e\u7206\u70b8"},{"location":"question/txtz/#_1","text":"\u9996\u5148\u8ba9\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e2a\u6982\u5ff5\uff1a\u4ec0\u4e48\u662f \u68af\u5ea6\u4e0d\u7a33\u5b9a \u5462\uff1f \u6982\u5ff5\uff1a\u5728\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u68af\u5ea6\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5728\u9760\u8fd1\u8f93\u5165\u5c42\u7684\u9690\u85cf\u5c42\u4e2d\u6216\u4f1a\u6d88\u5931\uff0c\u6216\u4f1a\u7206\u70b8\u3002\u8fd9\u79cd\u4e0d\u7a33\u5b9a\u6027\u624d\u662f\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u4e2d\u57fa\u4e8e\u68af\u5ea6\u5b66\u4e60\u7684\u6839\u672c\u95ee\u9898\u3002 \u4ea7\u751f\u68af\u5ea6\u4e0d\u7a33\u5b9a\u7684\u6839\u672c\u539f\u56e0\uff1a\u524d\u9762\u5c42\u4e0a\u7684\u68af\u5ea6\u662f\u6765\u81ea\u540e\u9762\u5c42\u4e0a\u68af\u5ea6\u7684\u4e58\u79ef\u3002\u5f53\u5b58\u5728\u8fc7\u591a\u7684\u5c42\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u68af\u5ea6\u4e0d\u7a33\u5b9a\u573a\u666f\uff0c\u6bd4\u5982\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u3002 \u6ce8\u610f :\uff1a\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u5c5e\u4e8e\u68af\u5ea6\u4e0d\u7a33\u5b9a\u7684\u8303\u7574\u3002","title":"\u68af\u5ea6\u6d88\u5931\u4e0e\u68af\u5ea6\u7206\u70b8"},{"location":"question/txtz/#_2","text":"\u68af\u5ea6\u6d88\u5931\uff1a\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5f53\u524d\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\u4f4e\u4e8e\u540e\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\uff0c\u5373\u968f\u7740\u9690\u85cf\u5c42\u6570\u76ee\u7684\u589e\u52a0\uff0c\u5206\u7c7b\u51c6\u786e\u7387\u53cd\u800c\u4e0b\u964d\u4e86\u3002\u8fd9\u79cd\u73b0\u8c61\u53eb\u68af\u5ea6\u6d88\u5931\u3002 \u68af\u5ea6\u7206\u70b8\uff1a\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5f53\u524d\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\u4f4e\u4e8e\u540e\u9762\u9690\u85cf\u5c42\u7684\u5b66\u4e60\u901f\u7387\uff0c\u5373\u968f\u7740\u9690\u85cf\u5c42\u6570\u76ee\u7684\u589e\u52a0\uff0c\u5206\u7c7b\u51c6\u786e\u7387\u53cd\u800c\u4e0b\u964d\u4e86\u3002\u8fd9\u79cd\u73b0\u8c61\u53eb\u68af\u5ea6\u7206\u70b8\u3002 \u5176\u5b9e\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u662f\u4e00\u56de\u4e8b\uff0c\u53ea\u662f\u8868\u73b0\u7684\u5f62\u5f0f\uff0c\u4ee5\u53ca\u4ea7\u751f\u7684\u539f\u56e0\u4e0d\u4e00\u6837\u3002","title":"\u6982\u5ff5"},{"location":"question/txtz/#_3","text":"\u68af\u5ea6\u6d88\u5931\uff1a\uff081\uff09\u9690\u85cf\u5c42\u7684\u5c42\u6570\u8fc7\u591a\uff1b\uff082\uff09\u91c7\u7528\u4e86\u4e0d\u5408\u9002\u7684\u6fc0\u6d3b\u51fd\u6570(\u66f4\u5bb9\u6613\u4ea7\u751f\u68af\u5ea6\u6d88\u5931\uff0c\u4f46\u662f\u4e5f\u6709\u53ef\u80fd\u4ea7\u751f\u68af\u5ea6\u7206\u70b8) \u68af\u5ea6\u7206\u70b8\uff1a\uff081\uff09\u9690\u85cf\u5c42\u7684\u5c42\u6570\u8fc7\u591a\uff1b\uff082\uff09\u6743\u91cd\u7684\u521d\u59cb\u5316\u503c\u8fc7\u5927 \u4ee5\u4e0b\u5c06\u4ece\u8fd93\u4e2a\u89d2\u5ea6\u89e3\u91ca\u4ea7\u751f\u8fd9\u4e24\u79cd\u73b0\u8c61\u7684\u6839\u672c\u539f\u56e0:","title":"\u4ea7\u751f\u539f\u56e0"},{"location":"question/txtz/#1","text":"\u603b\u7ed3\uff1a\u4ece\u6df1\u5c42\u7f51\u7edc\u89d2\u5ea6\u6765\u8bb2\uff0c\u4e0d\u540c\u7684\u5c42\u5b66\u4e60\u7684\u901f\u5ea6\u5dee\u5f02\u5f88\u5927\uff0c\u8868\u73b0\u4e3a\u7f51\u7edc\u4e2d\u9760\u8fd1\u8f93\u51fa\u7684\u5c42\u5b66\u4e60\u7684\u60c5\u51b5\u5f88\u597d\uff0c\u9760\u8fd1\u8f93\u5165\u7684\u5c42\u5b66\u4e60\u7684\u5f88\u6162\uff0c\u6709\u65f6\u751a\u81f3\u8bad\u7ec3\u4e86\u5f88\u4e45\uff0c\u524d\u51e0\u5c42\u7684\u6743\u503c\u548c\u521a\u5f00\u59cb\u968f\u673a\u521d\u59cb\u5316\u7684\u503c\u5dee\u4e0d\u591a\u3002\u56e0\u6b64\uff0c\u68af\u5ea6\u6d88\u5931\u3001\u7206\u70b8\uff0c\u5176\u6839\u672c\u539f\u56e0\u5728\u4e8e\u53cd\u5411\u4f20\u64ad\u8bad\u7ec3\u6cd5\u5219\uff0c\u5c5e\u4e8e\u5148\u5929\u4e0d\u8db3\u3002\u5177\u4f53\u89c1\u4e0b\u56fe\uff1a","title":"1.\u9690\u85cf\u5c42\u7684\u5c42\u6570\u8fc7\u591a"},{"location":"question/txtz/#2","text":"","title":"2.\u6fc0\u6d3b\u51fd\u6570"},{"location":"question/txtz/#3","text":"","title":"3.\u521d\u59cb\u5316\u6743\u91cd\u7684\u503c\u8fc7\u5927"},{"location":"question/txtz/#_4","text":"\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u95ee\u9898\u90fd\u662f\u56e0\u4e3a\u7f51\u7edc\u592a\u6df1\uff0c\u7f51\u7edc\u6743\u503c\u66f4\u65b0\u4e0d\u7a33\u5b9a\u9020\u6210\u7684\uff0c\u672c\u8d28\u4e0a\u662f\u56e0\u4e3a\u68af\u5ea6\u53cd\u5411\u4f20\u64ad\u4e2d\u7684\u8fde\u4e58\u6548\u5e94\u3002\u5bf9\u4e8e\u66f4\u666e\u904d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u4e09\u79cd\u65b9\u6848\u89e3\u51b3\uff1a 1\uff09\u7528ReLU\u3001Leaky-ReLU\u3001P-ReLU\u3001R-ReLU\u3001Maxout\u7b49\u6fc0\u6d3b\u51fd\u6570\u66ff\u4ee3sigmoid\u6fc0\u6d3b\u51fd\u6570; 2\uff09\u52a0\u5165Batch Normalization(BN)\u5c42; 3\uff09LSTM\u7684\u7ed3\u6784\u8bbe\u8ba1\u4e5f\u53ef\u4ee5\u6539\u5584RNN\u4e2d\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002","title":"\u89e3\u51b3\u65b9\u6848"}]}